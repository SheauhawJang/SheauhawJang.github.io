<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>孤星捧月堂</title>
  
  <subtitle>Sheauhaw Jang&#39;s Blog</subtitle>
  <link href="https://sheauhawjang.github.io/atom.xml" rel="self"/>
  
  <link href="https://sheauhawjang.github.io/"/>
  <updated>2023-06-11T20:49:58.000Z</updated>
  <id>https://sheauhawjang.github.io/</id>
  
  <author>
    <name>Sheauhaw Jang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>心境之一</title>
    <link href="https://sheauhawjang.github.io/2023/06/04/Emotional/2023-06-04/"/>
    <id>https://sheauhawjang.github.io/2023/06/04/Emotional/2023-06-04/</id>
    <published>2023-06-03T16:00:00.000Z</published>
    <updated>2023-06-11T20:49:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="心境">《心境》</h2><p>由而家開始，心境就正式成為記錄我嘅心情、心境嘅地方了。</p><p>由於我要寫嘅嘢可能有好多，所以一個月內嘅碎碎念就會做成合集。呢一篇就喺第一篇。</p><a id="more"></a><h2 id="年6月4日">2023年6月4日</h2><blockquote><p>自尋路 望前路 自由人間道 山與水 走了幾多未去數 千條路都導返家鄉路</p><p>望盡盡是青山 青山處處雨急風高 故園路 竟是走不盡長路</p><p>道人道 道神道 自求人間道 妖也好 魔也好 都道最好 少年怒天地鬼哭神號</p><p><strong>大地舊日江山 怎麼會變血海滔滔 故園路怎麼盡是不歸路</strong></p><p>大地舊日江山 怎麼會變血海滔滔 故園路 怎麼盡是不歸路</p><p>驚問世間 怎麼盡是無道</p></blockquote><h2 id="年6月11日">2023年6月11日</h2><blockquote><p>ひとり上手と呼ばないで</p><p>心だけ連れてゆかないで</p><p>私を置いてゆかないで</p><p>ひとりが好きなわけじゃないのよ</p></blockquote><p>似乎好多人識我，但係佢哋唔在意我。</p><p>對於唔在意我嘅人，我嘅回應亦都係唔在意。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;心境&quot;&gt;《心境》&lt;/h2&gt;
&lt;p&gt;由而家開始，心境就正式成為記錄我嘅心情、心境嘅地方了。&lt;/p&gt;
&lt;p&gt;由於我要寫嘅嘢可能有好多，所以一個月內嘅碎碎念就會做成合集。呢一篇就喺第一篇。&lt;/p&gt;</summary>
    
    
    
    <category term="心境" scheme="https://sheauhawjang.github.io/categories/%E5%BF%83%E5%A2%83/"/>
    
    
  </entry>
  
  <entry>
    <title>2023 ICPC 陕西省赛 J 题题解</title>
    <link href="https://sheauhawjang.github.io/2023/05/26/2023%20Shaanxi%20Provincial%20J/"/>
    <id>https://sheauhawjang.github.io/2023/05/26/2023%20Shaanxi%20Provincial%20J/</id>
    <published>2023-05-26T08:32:06.000Z</published>
    <updated>2023-05-27T12:36:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2023 ICPC 陕西省赛: J. Teleport</p><h2 id="题面">题面</h2><p>在 <span class="math inline">\(n\times n\)</span> 的网格中,有些格点可以通过 (用<code>.</code>表示), 有些格点不可通过(用<code>*</code>表示). 你需要从 <spanclass="math inline">\((1,1)\)</span> 移动到 <spanclass="math inline">\((n,n)\)</span>. 保证 <spanclass="math inline">\((1,1)\)</span> 和 <spanclass="math inline">\((n,n)\)</span> 两个点是可以通过的.</p><p>当你在 <span class="math inline">\((x,y)\)</span> 时,你可以在一个单位时间内移动到以下点中的一个:</p><ol type="1"><li><p><span class="math inline">\((x+1,y)\)</span> 或 <spanclass="math inline">\((x-1,y)\)</span> 或 <spanclass="math inline">\((x,y+1)\)</span> 或 <spanclass="math inline">\((x,y-1)\)</span>;</p></li><li><p><span class="math inline">\(f^i(x,y)\)</span>, 其中 <spanclass="math inline">\(i\)</span> 是任意的整数 <spanclass="math inline">\(i\le k\)</span>.</p></li></ol><p>不能移动到不可通过的点或者地图外的点. <spanclass="math inline">\(f^i(x,y)\)</span> 的定义为: <spanclass="math display">\[f^i(x,y)=\begin{cases}(x,y)&amp;i=0\\f^{i-1}(y+1,x)&amp;i&gt;0\end{cases}\]</span> 求从 <span class="math inline">\((1,1)\)</span> 移动到 <spanclass="math inline">\((n,n)\)</span> 的最短时间, 无解输出<code>-1</code>.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\le n,k\le5000\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>对于题面给出的两种移动方式, 总共有 <spanclass="math inline">\(4+k\)</span> 种可能到达的点, 直接进行 BFS 复杂度为<span class="math inline">\(O(n^2k)\)</span>, 不能接受.</p><p>现将两种移动方式分开处理, 移动方式 1 是普通移动, 移动方式 2是<ruby>空間移動<rt>テレポート</rt></ruby>. 其中普通移动有 <spanclass="math inline">\(4\)</span> 条路可以走, 空间移动有 <spanclass="math inline">\(k\)</span> 条路可以走.</p><p>注意到, 在 BFS 过程中, 如果 <spanclass="math inline">\(f^i(x,y)\)</span> 点已经因空间移动而被 BFS 过,则从 <span class="math inline">\(f^j(x,y)\)</span> 开始进行 BFS 时,<spanclass="math inline">\(f^{1}(x,y),f^2(x,y),\cdots,f^{i-j}(x,y)\)</span>均已经因空间移动而被 BFS 过, 不需要再考虑到这些点的空间移动, 只需要考虑<span class="math inline">\(i-j\)</span> 阶之后的 Teleport 即可.根据这一特性, 每一个点至多被空间移动到一次. 复杂度为 <spanclass="math inline">\(O(n^2)\)</span>.</p><p>需要注意的是, 本题的空间上限为 256 MiB, 在进行 BFS 的过程中, 队列需要<span class="math inline">\(3n^2\)</span> 大小的数组, 如果采用<code>int</code> 数组, 则需要 286 MiB 的内存. 因此需要关注空间使用情况:使用 <code>short</code> 数组或使用 STL <code>std::queue</code>.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; <span class="built_in">point</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> bfsed[<span class="number">5003</span>][<span class="number">5003</span>];</span><br><span class="line"><span class="keyword">bool</span> teled[<span class="number">5003</span>][<span class="number">5003</span>];</span><br><span class="line"><span class="keyword">bool</span> pass[<span class="number">5003</span>][<span class="number">5003</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">point</span> <span class="title">teleport</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> hk = k &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> &#123;y + hk + <span class="number">1</span>, x + hk&#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;x + hk, y + hk&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_bfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> depth, <span class="built_in">queue</span>&lt;pair&lt;<span class="built_in">point</span>, <span class="keyword">int</span>&gt;&gt; &amp;bfs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!bfsed[x][y] &amp;&amp; pass[x][y])</span><br><span class="line">    &#123;</span><br><span class="line">        bfsed[x][y] = <span class="literal">true</span>;</span><br><span class="line">        bfs.push(&#123;&#123;x, y&#125;, depth&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> sym;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; sym;</span><br><span class="line">            <span class="keyword">if</span> (sym == <span class="string">'.'</span>)</span><br><span class="line">                pass[i][j] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                pass[i][j] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">queue</span>&lt;pair&lt;<span class="built_in">point</span>, <span class="keyword">int</span>&gt;&gt; bfs;</span><br><span class="line">    add_bfs(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, bfs);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!bfs.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">point</span> np = bfs.front().first;</span><br><span class="line">        <span class="keyword">int</span> dep = bfs.front().second;</span><br><span class="line">        bfs.pop();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> x = np.first, y = np.second;</span><br><span class="line">        <span class="keyword">if</span> (x == n &amp;&amp; y == n)</span><br><span class="line">        &#123;</span><br><span class="line">            ans = dep;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> maxk = <span class="built_in">min</span>(<span class="built_in">min</span>(<span class="number">2</span> * (n - x) + <span class="number">1</span>, <span class="number">2</span> * (n - y)), <span class="built_in">min</span>(n + n - x - y, k));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = maxk; i &gt; <span class="number">0</span>; --i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">point</span> tp = teleport(x, y, i);</span><br><span class="line">            <span class="keyword">int</span> tx = tp.first, ty = tp.second;</span><br><span class="line">            <span class="keyword">if</span> (teled[tx][ty])</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            teled[tx][ty] = <span class="literal">true</span>;</span><br><span class="line">            add_bfs(tx, ty, dep + <span class="number">1</span>, bfs);</span><br><span class="line">        &#125;</span><br><span class="line">        add_bfs(x + <span class="number">1</span>, y, dep + <span class="number">1</span>, bfs);</span><br><span class="line">        add_bfs(x - <span class="number">1</span>, y, dep + <span class="number">1</span>, bfs);</span><br><span class="line">        add_bfs(x, y + <span class="number">1</span>, dep + <span class="number">1</span>, bfs);</span><br><span class="line">        add_bfs(x, y - <span class="number">1</span>, dep + <span class="number">1</span>, bfs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2023 ICPC 陕西省赛: J. Teleport&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;在 &lt;span class=&quot;math inline&quot;&gt;&#92;(n&#92;times n&#92;)&lt;/span&gt; 的网格中,
有些格点可以通过 (用&lt;code&gt;.&lt;/code&gt;表示), 有些格点不可通过
(用&lt;code&gt;*&lt;/code&gt;表示). 你需要从 &lt;span
class=&quot;math inline&quot;&gt;&#92;((1,1)&#92;)&lt;/span&gt; 移动到 &lt;span
class=&quot;math inline&quot;&gt;&#92;((n,n)&#92;)&lt;/span&gt;. 保证 &lt;span
class=&quot;math inline&quot;&gt;&#92;((1,1)&#92;)&lt;/span&gt; 和 &lt;span
class=&quot;math inline&quot;&gt;&#92;((n,n)&#92;)&lt;/span&gt; 两个点是可以通过的.&lt;/p&gt;
&lt;p&gt;当你在 &lt;span class=&quot;math inline&quot;&gt;&#92;((x,y)&#92;)&lt;/span&gt; 时,
你可以在一个单位时间内移动到以下点中的一个:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;((x+1,y)&#92;)&lt;/span&gt; 或 &lt;span
class=&quot;math inline&quot;&gt;&#92;((x-1,y)&#92;)&lt;/span&gt; 或 &lt;span
class=&quot;math inline&quot;&gt;&#92;((x,y+1)&#92;)&lt;/span&gt; 或 &lt;span
class=&quot;math inline&quot;&gt;&#92;((x,y-1)&#92;)&lt;/span&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(f^i(x,y)&#92;)&lt;/span&gt;, 其中 &lt;span
class=&quot;math inline&quot;&gt;&#92;(i&#92;)&lt;/span&gt; 是任意的整数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(i&#92;le k&#92;)&lt;/span&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不能移动到不可通过的点或者地图外的点. &lt;span
class=&quot;math inline&quot;&gt;&#92;(f^i(x,y)&#92;)&lt;/span&gt; 的定义为: &lt;span
class=&quot;math display&quot;&gt;&#92;[
f^i(x,y)=&#92;begin{cases}(x,y)&amp;amp;i=0&#92;&#92;f^{i-1}(y+1,x)&amp;amp;i&amp;gt;0&#92;end{cases}
&#92;]&lt;/span&gt; 求从 &lt;span class=&quot;math inline&quot;&gt;&#92;((1,1)&#92;)&lt;/span&gt; 移动到 &lt;span
class=&quot;math inline&quot;&gt;&#92;((n,n)&#92;)&lt;/span&gt; 的最短时间, 无解输出
&lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le n,k&#92;le5000
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="BFS" scheme="https://sheauhawjang.github.io/tags/BFS/"/>
    
    <category term="省赛" scheme="https://sheauhawjang.github.io/tags/%E7%9C%81%E8%B5%9B/"/>
    
    <category term="ICPC 2023" scheme="https://sheauhawjang.github.io/tags/ICPC-2023/"/>
    
  </entry>
  
  <entry>
    <title>2023 ICPC 陕西省赛 D 题题解</title>
    <link href="https://sheauhawjang.github.io/2023/05/25/2023%20Shaanxi%20Provincial%20D/"/>
    <id>https://sheauhawjang.github.io/2023/05/25/2023%20Shaanxi%20Provincial%20D/</id>
    <published>2023-05-25T05:33:00.000Z</published>
    <updated>2023-06-11T20:50:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2023 ICPC 陕西省赛: D. Function</p><h2 id="题面">题面</h2><p>给定函数 <span class="math inline">\(f\)</span> 满足: <spanclass="math display">\[f(x)=\begin{cases}\displaystyle 1+\sum_{k=2}^a f(kx)&amp;x\le n\\0&amp;x&gt;n\end{cases}\]</span> 输入 <span class="math inline">\(n\)</span>, 求 <spanclass="math inline">\(f(1)\bmod p\)</span>. 其中 <spanclass="math inline">\(a=20210926\)</span>, <spanclass="math inline">\(p=998244353\)</span>.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\le n\le10^9\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>本质上, 题设给出的函数是一个关于 <spanclass="math inline">\(x\)</span> 和 <spanclass="math inline">\(n\)</span> 的二元函数, 记: <spanclass="math display">\[F(x,n)=\begin{cases}\displaystyle 1+\sum_{k=2}^a F(kx,n)&amp;x\le n\\0&amp;x&gt;n\end{cases}\]</span> 可知 <span class="math inline">\(f(x)=F(x,n)\)</span>.在题解的后文中将完全不再使用题面所给出的一元函数 <spanclass="math inline">\(f\)</span>, 均使用二元函数 <spanclass="math inline">\(F\)</span>. 题面所求转换为求 <spanclass="math inline">\(F(1,n)\bmod p\)</span>.</p><p>根据 <span class="math inline">\(F\)</span> 的定义, 可知: <spanclass="math display">\[F(x,y)=F\left(\frac xz,\frac yz\right)=F\left(1,\frac yx\right)\tag1\]</span> 记 <span class="math inline">\(g(y)=F(1,y)\)</span>.则所求转换为求 <span class="math inline">\(g(n)\)</span>, 且有下式成立:<span class="math display">\[g(y)=1+\sum_{k=2}^a g\left(\frac yk\right)\]</span> 此时, 根据该式直接进行记忆化搜索, 复杂度为 <spanclass="math inline">\(O(n^2)\)</span>, 显然不能满意.</p><p>而对于 <span class="math inline">\(F(x,y)\)</span>, 当 <spanclass="math inline">\(x\)</span> 是正整数时, 有<spanclass="math inline">\(\newcommand{\flor}[1]{\left\lfloor#1\right\rfloor}\)</span><span class="math display">\[F(x,y)=F(x,\flor y)\tag2\]</span> 故可以得到 <span class="math display">\[g(y)=1+\sum_{k=2}^a g\left(\flor{\frac yk}\right)\]</span> 在这种情况下, 可以进行数论分块, <spanclass="math inline">\(\flor{y/k}\)</span> 只有 <spanclass="math inline">\(O(\sqrt y)\)</span> 个取值.</p><p>依托数论分块进行记忆化搜索求解 <spanclass="math inline">\(g(n)\)</span>:</p><p>对于 <span class="math inline">\(\flor{n/k}\le \sqrt n\)</span>的情况, 将 <span class="math inline">\(g(1),g(2),\cdots,g(\sqrtn)\)</span> 全部进行预处理, 共需求解 <span class="math inline">\(\sqrtn\)</span> 个值, 在数论分块的情况下, 每个值有 <spanclass="math inline">\(O(\sqrt{\sqrt n})\)</span> 项相加,该情况下的总复杂度为 <spanclass="math inline">\(O(n^{3/4})\)</span>.</p><p>对于 <span class="math inline">\(\flor{n/k}&gt;\sqrt n\)</span>的情况, 此时可知 <span class="math inline">\(k&lt;\sqrt n\)</span>,此时记 <span class="math inline">\(h_n(k)=g(\flor{n/k})\)</span>,则需求解 <span class="math inline">\(h_n(1),h_n(2),\cdots,h_n(\sqrtn)\)</span>. 其中 <span class="math inline">\(h_n(k)\)</span> 共有 <spanclass="math inline">\(O(\sqrt{n/k})\)</span>​ 项相加,该情况下的总复杂度为 <span class="math display">\[\sum_{k=1}^\sqrt nO\left(\sqrt {\frac{n}{k}}\right)=O(\sqrtn)\cdot\sum_{k=1}^{\sqrt n}\frac1{\sqrt k}=O(\sqrt n)\cdotO\left(\sqrt{\sqrt n}\right)=O(n^{3/4})\]</span> 故记忆化搜索的总复杂度为 <spanclass="math inline">\(O(n^{3/4})\)</span>.</p><p>需要注意在数论分块时, 分块的边界除了算法本身的 <spanclass="math inline">\(n/(n/k)\)</span>, 还要注意 <spanclass="math inline">\(k\le a\)</span>. 即分块区间为 <spanclass="math display">\[\left[k,\min\left(\flor{\frac n{\flor{n/k}}},a\right)\right]\]</span></p><h3 id="备注">备注</h3><p>题解中公式(1)该公式对所有的正实数 <spanclass="math inline">\(x,y\)</span> 均成立. 公式(1)的证明如下:</p><p>首先, 对于 <span class="math inline">\(x&gt;y\)</span> 的情况, <spanclass="math display">\[F(x,y)=F\left(\frac xz,\frac yz\right)=0\]</span> 下考虑 <span class="math inline">\(x\le y\)</span> 的情况.由定义，等式成立的一个充分条件为: <span class="math inline">\(\forallk\in[2,a]\cap\mathbb N\)</span> 均有 <spanclass="math inline">\(\displaystyle F(kx,y)=F\left(\frac {kx}z,\fracyz\right)\)</span>. 对充分条件中 <span class="math inline">\(kx\ley\)</span> 的情况再次应用充分条件. 每次充分条件后, <spanclass="math inline">\(F\)</span> 的第一元参数都至少变为两倍.故经有限次应用充分条件后, <span class="math inline">\(F\)</span>的第一元参数均会大于第二元, 充分条件成立. 故对于所有 <spanclass="math inline">\(x\le y\)</span> 的情况也成立.</p><p>题解中公式(2)的证明亦同理, 但该公式仅对所有的正整数 <spanclass="math inline">\(x\)</span> 和正实数 <spanclass="math inline">\(y\)</span> 成立.</p><p>若 <span class="math inline">\(x\)</span> 为整数且 <spanclass="math inline">\(x&gt;y\)</span>, 则 <spanclass="math inline">\(x&gt;\flor y\)</span>, 根据定义 <spanclass="math inline">\(F(x,y)=F(x,\flor y)=0\)</span>. 对于 <spanclass="math inline">\(x\)</span> 为整数且 <spanclass="math inline">\(x\le y\)</span> 的情况, 由于 <spanclass="math inline">\(x\)</span> 为整数, 故也有 <spanclass="math inline">\(x\le\flor y\)</span>. 使用与公式(1)相同的证明方法,即得证.</p><p>题目中, 若 <span class="math inline">\(F\)</span> 中的参数 <spanclass="math inline">\(a\)</span> 取 <spanclass="math inline">\(+\infty\)</span>, 则由阿基米德公理, 对于给定的<span class="math inline">\(x,y\)</span>, 定义依然是有限个非0项求和.公式(1)(2)依然成立, 基于 <span class="math inline">\(a\)</span>是常数的做法依然成立, 且不需要再额外检测数论分块的边界.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> m = <span class="number">1e9</span>, ghn = <span class="built_in">sqrt</span>(m);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> g[ghn + <span class="number">7</span>], h[ghn + <span class="number">7</span>], n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> hi)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> hn = n / hi;</span><br><span class="line">    <span class="keyword">if</span> (hn &lt;= ghn)</span><br><span class="line">        <span class="keyword">return</span> g[hn];</span><br><span class="line">    <span class="keyword">if</span> (h[hi])</span><br><span class="line">        <span class="keyword">return</span> h[hi];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= hn &amp;&amp; j &lt;= <span class="number">20210926</span>; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> jp = <span class="built_in">min</span>(hn / (hn / j), <span class="number">20210926</span>);</span><br><span class="line">        <span class="keyword">if</span> (hn / j &lt;= ghn)</span><br><span class="line">            ans += <span class="number">1l</span>l * (jp - j + <span class="number">1</span>) % p * g[hn / j] % p, ans %= p, j = jp;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans += solve(hn / j), ans %= p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> h[hi] = ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ghn; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        g[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= i &amp;&amp; j &lt;= <span class="number">20210926</span>; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> jp = i / (i / j);</span><br><span class="line">            g[i] += <span class="number">1l</span>l * (jp - j + <span class="number">1</span>) % p * g[i / j] % p, g[i] %= p, j = jp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> ans;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= ghn)</span><br><span class="line">        ans = g[n];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        ans = solve(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="花絮">花絮</h2><p>笔者于比赛开始后103分钟通过本题，获得了本题的最快解题奖。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2023 ICPC 陕西省赛: D. Function&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;给定函数 &lt;span class=&quot;math inline&quot;&gt;&#92;(f&#92;)&lt;/span&gt; 满足: &lt;span
class=&quot;math display&quot;&gt;&#92;[
f(x)=&#92;begin{cases}
&#92;displaystyle 1+&#92;sum_{k=2}^a f(kx)&amp;amp;x&#92;le n&#92;&#92;
0&amp;amp;x&amp;gt;n
&#92;end{cases}
&#92;]&lt;/span&gt; 输入 &lt;span class=&quot;math inline&quot;&gt;&#92;(n&#92;)&lt;/span&gt;, 求 &lt;span
class=&quot;math inline&quot;&gt;&#92;(f(1)&#92;bmod p&#92;)&lt;/span&gt;. 其中 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a=20210926&#92;)&lt;/span&gt;, &lt;span
class=&quot;math inline&quot;&gt;&#92;(p=998244353&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le n&#92;le10^9
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="省赛" scheme="https://sheauhawjang.github.io/tags/%E7%9C%81%E8%B5%9B/"/>
    
    <category term="ICPC 2023" scheme="https://sheauhawjang.github.io/tags/ICPC-2023/"/>
    
    <category term="整除分块" scheme="https://sheauhawjang.github.io/tags/%E6%95%B4%E9%99%A4%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第8周题解</title>
    <link href="https://sheauhawjang.github.io/2020/12/08/CSharp%20Week8/"/>
    <id>https://sheauhawjang.github.io/2020/12/08/CSharp%20Week8/</id>
    <published>2020-12-08T08:31:48.000Z</published>
    <updated>2020-12-08T08:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-多态练习一工资系统">A. 多态练习一工资系统</h1><blockquote><p>实现课本例9-3题目要求。根据4类不同员工类型分别进行工资的计算。</p><p>抽象基类Employee表示员工，这个类派生出SalariedEmployee、HourlyEmplyee和CommissionEmployee类，CommissionEmployee类派生出BasePlusCommissionEmployee类。（课本例9-3图）</p><p>1.固定工：每周工资一样，与工作时间长短无关，由SalariedEmployee类实现；</p><p>2.计时工：按时计酬，超过40小时算加班工资，由HourlyEmplyee类实现；</p><p>3.雇佣员工：按销售百分比例计算，由CommissionEmployee类实现；</p><p>4.底薪雇佣员工：在底薪之上增加销售百分比。在本期内，公司准备对底薪雇佣员工升薪10%，由BasePlusCommissionEmployee类实现。</p><p>在主函数中</p><p>创建4个派生类的对象，调用Earning(）方法输出。</p><p>多态的使用，创建含有4个派生类元素的Employee数组，调用Earning(）方法输出。</p><p>【注：】此题编译通过即可</p></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-10 10:54:13</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week7_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">protected</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Employee</span>(<span class="params"><span class="keyword">string</span> namae</span>)</span> &#123; Name = namae; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteName</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(Name); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Earning</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(GetSal()); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">SalariedEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Bsal &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SalariedEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; Bsal = x; Clear(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Bsal; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HourlyEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> SalPrh &#123; <span class="keyword">get</span>; <span class="keyword">protected</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> WorkT &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HourlyEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> preh</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; SalPrh = preh; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NoteWork</span>(<span class="params"><span class="keyword">int</span> t</span>)</span> &#123; WorkT += t; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; WorkT = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> HourLaw = <span class="number">40</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (WorkT &lt;= HourLaw)</span><br><span class="line">                <span class="keyword">return</span> SalPrh * WorkT;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> SalPrh * HourLaw + <span class="number">1.5</span> * SalPrh * (WorkT - HourLaw);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">CommissionEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> Rate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">double</span> ComVa &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">CommissionEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; Rate = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; ComVa = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NoteCom</span>(<span class="params"><span class="keyword">double</span> x</span>)</span> &#123; ComVa += x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> ComVa * Rate; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">BasePlusCommissionEmployee</span> : <span class="title">CommissionEmployee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Bsal &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BasePlusCommissionEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x, <span class="keyword">double</span> r</span>)</span></span><br><span class="line"><span class="function">            : <span class="title">base</span>(<span class="params">namae, r</span>)</span> &#123; Bsal = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="keyword">base</span>.GetSal() + Bsal; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Employee[] eps = <span class="keyword">new</span> Employee[<span class="number">4</span>];</span><br><span class="line">            SalariedEmployee epa = <span class="keyword">new</span> SalariedEmployee(<span class="string">"A"</span>, <span class="number">10000</span>);</span><br><span class="line">            HourlyEmployee epb = <span class="keyword">new</span> HourlyEmployee(<span class="string">"B"</span>, <span class="number">250</span>);</span><br><span class="line">            epb.NoteWork(<span class="number">50</span>);</span><br><span class="line">            CommissionEmployee epc = <span class="keyword">new</span> CommissionEmployee(<span class="string">"C"</span>, <span class="number">0.05</span>);</span><br><span class="line">            epc.NoteCom(<span class="number">1e7</span>);</span><br><span class="line">            BasePlusCommissionEmployee epd = <span class="keyword">new</span> BasePlusCommissionEmployee(<span class="string">"D"</span>, <span class="number">10000</span>, <span class="number">0.05</span>);</span><br><span class="line">            epd.NoteCom(<span class="number">1e7</span>);</span><br><span class="line">            eps[<span class="number">0</span>] = epa;</span><br><span class="line">            eps[<span class="number">1</span>] = epb;</span><br><span class="line">            eps[<span class="number">2</span>] = epc;</span><br><span class="line">            eps[<span class="number">3</span>] = epd;</span><br><span class="line">            <span class="keyword">foreach</span> (Employee ep <span class="keyword">in</span> eps)</span><br><span class="line">            &#123;</span><br><span class="line">                ep.WriteName();</span><br><span class="line">                ep.Earning();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-工资系统生日">B. 工资系统+生日</h1><blockquote><p>修改例题9-3，在Employee类中添加新的字段birthDate表示员工的生日。（如：DateTimedt=new DateTime(2000,12,21)）</p><p>birthDate的数据类型为DateTime结构体类型（C#自带）。假设工资每月处理一次。</p><p>创建Employee数组，存储不同类型员工对象的引用。</p><p>可以循环输出每种类型员工的姓名和工资。如果本月是员工的生日，则工资增加100元。</p><p>【注：】本题编译通过即可。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-10 10:54:13</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week7_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">protected</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> DateTime Birth &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Employee</span>(<span class="params"><span class="keyword">string</span> namae</span>)</span> &#123; Name = namae; Birth = <span class="keyword">new</span> DateTime(<span class="number">1900</span>, <span class="number">1</span>, <span class="number">1</span>); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">Bouns</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> DateTime.Now.Month == Birth.Month; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetBirth</span>(<span class="params"><span class="keyword">int</span> y, <span class="keyword">int</span> m, <span class="keyword">int</span> d</span>)</span> &#123; Birth = <span class="keyword">new</span> DateTime(y, m, d); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteName</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(Name); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">GetTotSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> GetSal() + (Bouns() ? <span class="number">100</span> : <span class="number">0</span>); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Earning</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(GetTotSal()); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">SalariedEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Bsal &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SalariedEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; Bsal = x; Clear(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Bsal; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HourlyEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> SalPrh &#123; <span class="keyword">get</span>; <span class="keyword">protected</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> WorkT &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HourlyEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> preh</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; SalPrh = preh; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NoteWork</span>(<span class="params"><span class="keyword">int</span> t</span>)</span> &#123; WorkT += t; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; WorkT = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> HourLaw = <span class="number">40</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (WorkT &lt;= HourLaw)</span><br><span class="line">                <span class="keyword">return</span> SalPrh * WorkT;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> SalPrh * HourLaw + <span class="number">1.5</span> * SalPrh * (WorkT - HourLaw);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">CommissionEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> Rate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">double</span> ComVa &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">CommissionEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; Rate = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; ComVa = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NoteCom</span>(<span class="params"><span class="keyword">double</span> x</span>)</span> &#123; ComVa += x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> ComVa * Rate; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">BasePlusCommissionEmployee</span> : <span class="title">CommissionEmployee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Bsal &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BasePlusCommissionEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x, <span class="keyword">double</span> r</span>)</span></span><br><span class="line"><span class="function">            : <span class="title">base</span>(<span class="params">namae, r</span>)</span> &#123; Bsal = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="keyword">base</span>.GetSal() + Bsal; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Employee[] eps = <span class="keyword">new</span> Employee[<span class="number">4</span>];</span><br><span class="line">            SalariedEmployee epa = <span class="keyword">new</span> SalariedEmployee(<span class="string">"A"</span>, <span class="number">10000</span>);</span><br><span class="line">            epa.SetBirth(<span class="number">1926</span>, <span class="number">8</span>, <span class="number">17</span>);</span><br><span class="line">            eps[<span class="number">0</span>] = epa;</span><br><span class="line">            HourlyEmployee epb = <span class="keyword">new</span> HourlyEmployee(<span class="string">"B"</span>, <span class="number">250</span>);</span><br><span class="line">            epb.SetBirth(<span class="number">1997</span>, <span class="number">7</span>, <span class="number">1</span>);</span><br><span class="line">            epb.NoteWork(<span class="number">50</span>);</span><br><span class="line">            eps[<span class="number">1</span>] = epb;</span><br><span class="line">            CommissionEmployee epc = <span class="keyword">new</span> CommissionEmployee(<span class="string">"C"</span>, <span class="number">0.05</span>);</span><br><span class="line">            epc.NoteCom(<span class="number">1e7</span>);</span><br><span class="line">            epc.SetBirth(<span class="number">2002</span>, <span class="number">8</span>, <span class="number">17</span>);</span><br><span class="line">            eps[<span class="number">2</span>] = epc;</span><br><span class="line">            BasePlusCommissionEmployee epd = <span class="keyword">new</span> BasePlusCommissionEmployee(<span class="string">"D"</span>, <span class="number">10000</span>, <span class="number">0.05</span>);</span><br><span class="line">            epd.NoteCom(<span class="number">1e7</span>);</span><br><span class="line">            epd.SetBirth(<span class="number">2020</span>, <span class="number">11</span>, <span class="number">30</span>);</span><br><span class="line">            eps[<span class="number">3</span>] = epd;</span><br><span class="line">            <span class="keyword">foreach</span> (Employee ep <span class="keyword">in</span> eps)</span><br><span class="line">            &#123;</span><br><span class="line">                ep.WriteName();</span><br><span class="line">                ep.Earning();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-工资系统计件工">C. 工资系统+计件工</h1><blockquote><p>修改例题9-3，增加Employee类的另一个派生类PieceWorker，表示计件工。</p><p>PieceWorker类具有专用的实例变量wage和pieces分别表示每件的工资和生产的件数。</p><p>在PieceWorker类中提供Earning方法的具体实现，计算员工的收入。计算方法是将件数乘以每件的工资。</p><p>创建一个Employee数组，存储新的类层次中每个具体类对象的引用，显示每个员工收入。</p><p>【注：】本题编译通过即可。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-10 10:54:13</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week7_C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">protected</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> DateTime Birth &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Employee</span>(<span class="params"><span class="keyword">string</span> namae</span>)</span> &#123; Name = namae; Birth = <span class="keyword">new</span> DateTime(<span class="number">1900</span>, <span class="number">1</span>, <span class="number">1</span>); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">Bouns</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> DateTime.Now.Month == Birth.Month; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetBirth</span>(<span class="params"><span class="keyword">int</span> y, <span class="keyword">int</span> m, <span class="keyword">int</span> d</span>)</span> &#123; Birth = <span class="keyword">new</span> DateTime(y, m, d); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteName</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(Name); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">GetTotSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> GetSal() + (Bouns() ? <span class="number">100</span> : <span class="number">0</span>); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Earning</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(GetTotSal()); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">SalariedEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Bsal &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SalariedEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; Bsal = x; Clear(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Bsal; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HourlyEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> SalPrh &#123; <span class="keyword">get</span>; <span class="keyword">protected</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> WorkT &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HourlyEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> preh</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; SalPrh = preh; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NoteWork</span>(<span class="params"><span class="keyword">int</span> t</span>)</span> &#123; WorkT += t; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; WorkT = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> HourLaw = <span class="number">40</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (WorkT &lt;= HourLaw)</span><br><span class="line">                <span class="keyword">return</span> SalPrh * WorkT;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> SalPrh * HourLaw + <span class="number">1.5</span> * SalPrh * (WorkT - HourLaw);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">CommissionEmployee</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> Rate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">double</span> ComVa &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">CommissionEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; Rate = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; ComVa = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NoteCom</span>(<span class="params"><span class="keyword">double</span> x</span>)</span> &#123; ComVa += x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> ComVa * Rate; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">BasePlusCommissionEmployee</span> : <span class="title">CommissionEmployee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Bsal &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">BasePlusCommissionEmployee</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x, <span class="keyword">double</span> r</span>)</span></span><br><span class="line"><span class="function">            : <span class="title">base</span>(<span class="params">namae, r</span>)</span> &#123; Bsal = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="keyword">base</span>.GetSal() + Bsal; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">PieceWorker</span> : <span class="title">Employee</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> wage &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">int</span> pieces &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PieceWorker</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">double</span> x</span>) : <span class="title">base</span>(<span class="params">namae</span>)</span> &#123; wage = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span> &#123; pieces = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NotePieces</span>(<span class="params"><span class="keyword">int</span> x</span>)</span> &#123; pieces += x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">double</span> <span class="title">GetSal</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> pieces * wage; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Employee[] eps = <span class="keyword">new</span> Employee[<span class="number">5</span>];</span><br><span class="line">            SalariedEmployee epa = <span class="keyword">new</span> SalariedEmployee(<span class="string">"A"</span>, <span class="number">10000</span>);</span><br><span class="line">            epa.SetBirth(<span class="number">1926</span>, <span class="number">8</span>, <span class="number">17</span>);</span><br><span class="line">            eps[<span class="number">0</span>] = epa;</span><br><span class="line">            HourlyEmployee epb = <span class="keyword">new</span> HourlyEmployee(<span class="string">"B"</span>, <span class="number">250</span>);</span><br><span class="line">            epb.SetBirth(<span class="number">1997</span>, <span class="number">7</span>, <span class="number">1</span>);</span><br><span class="line">            epb.NoteWork(<span class="number">50</span>);</span><br><span class="line">            eps[<span class="number">1</span>] = epb;</span><br><span class="line">            CommissionEmployee epc = <span class="keyword">new</span> CommissionEmployee(<span class="string">"C"</span>, <span class="number">0.05</span>);</span><br><span class="line">            epc.NoteCom(<span class="number">1e7</span>);</span><br><span class="line">            epc.SetBirth(<span class="number">2002</span>, <span class="number">8</span>, <span class="number">17</span>);</span><br><span class="line">            eps[<span class="number">2</span>] = epc;</span><br><span class="line">            BasePlusCommissionEmployee epd = <span class="keyword">new</span> BasePlusCommissionEmployee(<span class="string">"D"</span>, <span class="number">10000</span>, <span class="number">0.05</span>);</span><br><span class="line">            epd.NoteCom(<span class="number">1e7</span>);</span><br><span class="line">            epd.SetBirth(<span class="number">2020</span>, <span class="number">11</span>, <span class="number">30</span>);</span><br><span class="line">            eps[<span class="number">3</span>] = epd;</span><br><span class="line">            PieceWorker epe = <span class="keyword">new</span> PieceWorker(<span class="string">"E"</span>, <span class="number">100</span>);</span><br><span class="line">            epe.NotePieces(<span class="number">100</span>);</span><br><span class="line">            epe.SetBirth(<span class="number">2077</span>, <span class="number">12</span>, <span class="number">31</span>);</span><br><span class="line">            eps[<span class="number">4</span>] = epe;</span><br><span class="line">            <span class="keyword">foreach</span> (Employee ep <span class="keyword">in</span> eps)</span><br><span class="line">            &#123;</span><br><span class="line">                ep.WriteName();</span><br><span class="line">                ep.Earning();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d.-类和接口">D. 类和接口</h1><blockquote><p>定义一个动物类Animal，包含字段姓名、年龄，有1个带参数的构造方法，初始化2个私有字段。抽象方法叫Shout();</p><p>鸽子类派生自Animal，新增私有字段羽毛（默认白色）；覆写方法Shout()，方法体输出相关信息（自己组织格式）*岁的鸽子姓名咕咕叫；</p><p>猫类派生自Animal，新增属性胡须长度；覆写方法Shout(），方法体输出相关信息（自己组织格式）*岁的小猫姓名喵喵叫；</p><p>定义一个交通工具类Vehicle，包含颜色，品牌。有1个无参数的构造方法，初始化2个私有字段（默认值自己给）。</p><p>派生类飞机继承Vehicle。新增飞行高度属性。</p><p>定义接口IFly，包含方法Fly()。鸽子类、飞机类均继承该接口，实现Fly()。鸽子类的Fly()方法，输出*颜色的鸽子飞。飞机类的Fly()方法输出*品牌的飞机飞行在*千米的高空。</p><p>在主函数中生成对象，测试类中的方法。</p><p>【注：】本题编译通过即可。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-10 11:12:50</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week7_D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">interface</span> <span class="title">IFly</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;   </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Animal</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">int</span> x</span>)</span> &#123; Name = namae; Age = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Shout</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Pigeon</span> : <span class="title">Animal</span>, <span class="title">IFly</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Wing &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Pigeon</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">int</span> x</span>) : <span class="title">base</span>(<span class="params">namae, x</span>)</span> &#123; Wing = <span class="number">0xffffff</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Shout</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"&#123;0&#125;岁的鸽子&#123;1&#125;咕咕叫"</span>, Age, Name); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"&#123;0&#125;颜色的鸽子飞"</span>, <span class="keyword">string</span>.Format(<span class="string">"#&#123;0:X&#125;"</span>, Wing)); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cat</span> : <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Leng &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Cat</span>(<span class="params"><span class="keyword">string</span> namae, <span class="keyword">int</span> x</span>) : <span class="title">base</span>(<span class="params">namae, x</span>)</span> &#123; Leng = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Shout</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"&#123;0&#125;岁的小猫&#123;1&#125;喵喵叫"</span>, Age, Name); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Vehicle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Color &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Company &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vehicle</span>(<span class="params"></span>)</span> &#123; Color = <span class="number">0xffffff</span>; Company = <span class="string">"XJTU"</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Plane</span> : <span class="title">Vehicle</span>, <span class="title">IFly</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Height &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fly</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"&#123;0&#125;品牌的飞机飞行在&#123;1&#125;千米的高空"</span>, Company, Height); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Pigeon zdk = <span class="keyword">new</span> Pigeon(<span class="string">"Zeondik"</span>, <span class="number">18</span>);</span><br><span class="line">            zdk.Shout();</span><br><span class="line">            zdk.Fly();</span><br><span class="line">            Plane fakeloc = <span class="keyword">new</span> Plane();</span><br><span class="line">            fakeloc.Height = <span class="number">114514</span>;</span><br><span class="line">            fakeloc.Fly();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e.-选做窗体程序计算利率">E. *选做*——窗体程序“计算利率”</h1><blockquote><p>学习MOOC视频12.4例题计算利率，完成以下窗体程序。</p><p>要求：</p><p>1.熟悉Visual Studio新建Windows Form项目；</p><p>2.按照图示设计界面；</p><p>\3. 编写“确定”按钮的事件。</p><p>4.运行程序，输入“本金”、“利率”，选择“年龄”，点击“确定”按钮，“本息合计”显示计算结果。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\images\CSharp-Week7-E.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>【注】本题自愿完成。</p></blockquote><p><a href="/others/CSharp-Week7-E.zip">解决方案</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-多态练习一工资系统&quot;&gt;A. 多态练习一工资系统&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;实现课本例9-3题目要求。根据4类不同员工类型分别进行工资的计算。&lt;/p&gt;
&lt;p&gt;抽象基类Employee表示员工，这个类派生出SalariedEmployee、HourlyEmplyee和CommissionEmployee类，CommissionEmployee类派生出BasePlusCommissionEmployee类。（课本例9-3图）&lt;/p&gt;
&lt;p&gt;1.固定工：每周工资一样，与工作时间长短无关，由SalariedEmployee类实现；&lt;/p&gt;
&lt;p&gt;2.计时工：按时计酬，超过40小时算加班工资，由HourlyEmplyee类实现；&lt;/p&gt;
&lt;p&gt;3.雇佣员工：按销售百分比例计算，由CommissionEmployee类实现；&lt;/p&gt;
&lt;p&gt;4.底薪雇佣员工：在底薪之上增加销售百分比。在本期内，公司准备对底薪雇佣员工升薪10%，由BasePlusCommissionEmployee类实现。&lt;/p&gt;
&lt;p&gt;在主函数中&lt;/p&gt;
&lt;p&gt;创建4个派生类的对象，调用Earning(）方法输出。&lt;/p&gt;
&lt;p&gt;多态的使用，创建含有4个派生类元素的Employee数组，调用Earning(）方法输出。&lt;/p&gt;
&lt;p&gt;【注：】此题编译通过即可&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第7周题解</title>
    <link href="https://sheauhawjang.github.io/2020/12/08/CSharp%20Week7/"/>
    <id>https://sheauhawjang.github.io/2020/12/08/CSharp%20Week7/</id>
    <published>2020-12-08T08:26:20.000Z</published>
    <updated>2020-12-08T08:26:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-circle类的继承">A. Circle类的继承</h1><blockquote><p>定义圆类Circle，包含半径r，属性R能判断半径r的合理性（r&gt;0），计算圆面积的方法doubleArea()。</p><p>从Circle类派生出圆柱体类Cylinder类。该类新增圆柱体的高h，属性H能判断高h的合理性（h&gt;0），新增计算圆柱体体积的方法doubleVolume()。</p><p>如果半径、高不合法，就设置其值为0。</p><p>在Main方法中，创建一个Cylinder对象，输入半径和高（两行输入），并输出该对象的底面半径，高，底面积以及体积（面积和体积用doubleMath.round(doulbe b, int digit) digit取1。</p><p>（要求：不使用构造方法，并且类中的字段为私有，方法为公有）</p></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-03 10:10:09</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week6_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Circle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> r;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> R</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> r; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; r = <span class="keyword">value</span> &gt; <span class="number">0</span> ? <span class="keyword">value</span> : <span class="number">0</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Area</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Math.PI * R * R; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cylinder</span> : <span class="title">Circle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> h;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> H</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> h; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; h = <span class="keyword">value</span> &gt; <span class="number">0</span> ? <span class="keyword">value</span> : <span class="number">0</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Volume</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Area() * H; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">OutputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OutputString</span>(<span class="params"><span class="keyword">string</span> sop, <span class="keyword">params</span> <span class="keyword">double</span>[] opv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] ops = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">4</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                opv[i] = Math.Round(opv[i], <span class="number">1</span>);</span><br><span class="line">                ops[i] = Convert.ToString(opv[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="keyword">string</span>.Join(<span class="string">" "</span>, ops));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Cylinder ans = <span class="keyword">new</span> Cylinder();</span><br><span class="line">            ans.R = Convert.ToDouble(Console.ReadLine());</span><br><span class="line">            ans.H = Convert.ToDouble(Console.ReadLine());</span><br><span class="line">            OutputConvert.OutputString(<span class="string">" "</span>, ans.R, ans.H, ans.Area(), ans.Volume());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-circle类的继承带参构造方法">B.Circle类的继承——带参构造方法</h1><blockquote><p>定义圆类Circle，包含半径r，属性R能判断半径r的合理性（r&gt;0），计算圆面积的方法doubleArea()。</p><p>从Circle类派生出圆柱体类Cylinder类。该类新增圆柱体的高h，属性H能判断高h的合理性（h&gt;0），新增计算圆柱体体积的方法doubleVolume()。</p><p>如果半径、高不合法，就设置其值为0。</p><p>在Main方法中，创建一个Cylinder对象，输入半径和高（两行输入），并输出该对象的底面积、体积。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-03 10:27:06</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week6_B</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Circle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> r;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> R</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> r; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; r = <span class="keyword">value</span> &gt; <span class="number">0</span> ? <span class="keyword">value</span> : <span class="number">0</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Area</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Math.PI * R * R; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cylinder</span> : <span class="title">Circle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> h;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> H</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> h; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; h = <span class="keyword">value</span> &gt; <span class="number">0</span> ? <span class="keyword">value</span> : <span class="number">0</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Volume</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> Area() * H; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">OutputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OutputString</span>(<span class="params"><span class="keyword">string</span> sop, <span class="keyword">params</span> <span class="keyword">double</span>[] opv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] ops = <span class="keyword">new</span> <span class="keyword">string</span>[opv.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; opv.Length; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                opv[i] = Math.Round(opv[i], <span class="number">1</span>);</span><br><span class="line">                ops[i] = Convert.ToString(opv[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="keyword">string</span>.Join(<span class="string">" "</span>, ops));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Cylinder ans = <span class="keyword">new</span> Cylinder();</span><br><span class="line">            ans.R = Convert.ToDouble(Console.ReadLine());</span><br><span class="line">            ans.H = Convert.ToDouble(Console.ReadLine());</span><br><span class="line">            OutputConvert.OutputString(<span class="string">" "</span>, ans.Area(), ans.Volume());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-点线类练习">C. 点线类练习</h1><blockquote><p>从点类（Point）：包含：带可选参数的构造方法Point（int x=0, inty=0)，</p><p>输出坐标点的方法ShowPoint以及读写坐标x、y的属性方法。</p><p>派生类（Line）：计算线段的长度。Line类中新增表示线段终点的字段EndPoint，起点字段StartPoint。</p><p>计算线段距离的方法Distance以及输出线段起点和终点的方法ShowLine。</p><p>在主函数中，创建两个点对象，输出线段的距离。</p><p>【注：】本题编译通过即可。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-03 11:09:15</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week6_C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Point</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> dim = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span>[] xs = <span class="keyword">new</span> <span class="keyword">int</span>[dim];</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> X</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> xs[<span class="number">0</span>]; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; xs[<span class="number">0</span>] = <span class="keyword">value</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Y</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> xs[<span class="number">1</span>]; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; xs[<span class="number">1</span>] = <span class="keyword">value</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">At</span>(<span class="params"><span class="keyword">int</span> x</span>)</span> &#123; <span class="keyword">return</span> x &lt; dim ? xs[x] : <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Point</span>(<span class="params"><span class="keyword">int</span> x = <span class="number">0</span>, <span class="keyword">int</span> y = <span class="number">0</span></span>)</span> &#123; X = x; Y = y; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowPoint</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="string">"(&#123;0&#125;, &#123;1&#125;)"</span>, X, Y); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Line</span></span><br><span class="line">    &#123;</span><br><span class="line">        Point StartPoint, EndPoint;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Line</span>(<span class="params">Point sp, Point ep</span>)</span> &#123; StartPoint = sp; EndPoint = ep; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowLine</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.Write(<span class="string">"StartPoint:"</span>);</span><br><span class="line">            StartPoint.ShowPoint();</span><br><span class="line">            Console.Write(<span class="string">"EndPoint:"</span>);</span><br><span class="line">            EndPoint.ShowPoint();</span><br><span class="line">        &#125;</span><br><span class="line">        Func&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; sq = x =&gt; x * x; </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Distance</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> sqd = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Point.dim; ++i)</span><br><span class="line">                sqd += sq(StartPoint.At(i) - EndPoint.At(i));</span><br><span class="line">            <span class="keyword">return</span> Math.Sqrt(sqd);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowDistance</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(Distance()); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Point a = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            Point b = <span class="keyword">new</span> Point(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            Line ab = <span class="keyword">new</span> Line(a, b);</span><br><span class="line">            ab.ShowDistance();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d.-student类的继承练习">D. Student类的继承练习</h1><blockquote><p>实现两个类。</p><p>StuGrade类。该类的作用是成绩相关的操作。包括：</p><p>私有字段 int[] gra（学生成绩）；</p><p>构造函数 StuGrade(params int[] stusgra)；用于初始化私有字段gra；</p><p>公有方法 public double AvgGrade()；返回学生成绩的平均值。</p><p>Student类。包含：</p><p>2个public 自实现属性string Name（学生姓名）、stringStuNum（学号）；</p><p>1个private字段 string stuClass（学生班级）；</p><p>1个StuGrade对象 stuG；</p><p>1个公有方法public bool IsStuNo(string s,out intres)。检测学号是否合法。其中s是待检查的学号。学号必须是8位数字，21开头。不是8位数字res置1，非21开头res置2。合法res=学号。</p><p>1个公有方法public bool AddStu(string name, string sno, StuGrade stug,string stuclass="数学")。如果学号合法的对象，将姓名、学号、成绩、班级（默认是数学）赋值，返回true。否则，不赋值，返回false。</p><p>在Main函数中，新建Student类对象stu，并接收控制台输入的信息.</p><p>【样例输入】</p><p>姓名,学号</p><p>成绩</p><p>如果输入学号合法，输出 学号:Success!AverageGrade:平均分</p><p>如果输入学号非法，输出 学号:Invalid!Error Code:res的值</p><p>例如：</p><p>新建对象Student stu1，尝试对stu1设置信息Alex,20812000, 成绩是：1, 2,3, 4, 5。将按照如下格式输出</p><p>20812000:Invalid!Error Code:2</p><p>新建Student类对象stu2 ，尝试对stu2设置信息Bob,21812000, 成绩是：1, 2,3。将按照如下格式输出</p><p>21812000:Success!AverageGrade:2</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-11-03 10:30:01</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week6_D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">StuGrade</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span>[] gra;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">StuGrade</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">int</span>[] stusgra</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            gra = stusgra;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">AvgGrade</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">int</span> sig <span class="keyword">in</span> gra)</span><br><span class="line">                ans += sig;</span><br><span class="line">            ans /= gra.Length;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> StuNum &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> stuClass;</span><br><span class="line">        StuGrade stuG;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> vlen = <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">string</span> chpre = <span class="string">"21"</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">IsStuNo</span>(<span class="params"><span class="keyword">string</span> s, <span class="keyword">out</span> <span class="keyword">int</span> res</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.Length != vlen) &#123; res = <span class="number">1</span>; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chpre.Length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (s[i] != chpre[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    res = <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            res = Convert.ToInt32(s);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">AddStu</span>(<span class="params"><span class="keyword">string</span> name, <span class="keyword">string</span> sno, StuGrade stug, <span class="keyword">string</span> stuclass = <span class="string">"数学"</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> nov;</span><br><span class="line">            <span class="keyword">if</span> (!IsStuNo(sno, <span class="keyword">out</span> nov))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            Name = name;</span><br><span class="line">            StuNum = sno;</span><br><span class="line">            stuG = stug;</span><br><span class="line">            stuClass = stuclass;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] nameid = Console.ReadLine().Split(<span class="string">','</span>);</span><br><span class="line">            <span class="keyword">int</span> res;</span><br><span class="line">            <span class="keyword">if</span> (!Student.IsStuNo(nameid[<span class="number">1</span>], <span class="keyword">out</span> res))</span><br><span class="line">                Console.WriteLine(<span class="string">"&#123;0&#125;:Invalid!Error Code:&#123;1&#125;"</span>, nameid[<span class="number">1</span>], res);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                StuGrade sg = <span class="keyword">new</span> StuGrade(InputConvert.GetInputArray(<span class="string">','</span>));</span><br><span class="line">                Console.WriteLine(<span class="string">"&#123;0&#125;:Success!AverageGrade:&#123;1&#125;"</span>, nameid[<span class="number">1</span>], sg.AvgGrade());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-circle类的继承&quot;&gt;A. Circle类的继承&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;定义圆类Circle，包含半径r，属性R能判断半径r的合理性（r&amp;gt;0），计算圆面积的方法double
Area()。&lt;/p&gt;
&lt;p&gt;从Circle类派生出圆柱体类Cylinder类。该类新增圆柱体的高h，属性H能判断高h的合理性（h&amp;gt;0），新增计算圆柱体体积的方法double
Volume()。&lt;/p&gt;
&lt;p&gt;如果半径、高不合法，就设置其值为0。&lt;/p&gt;
&lt;p&gt;在Main方法中，创建一个Cylinder对象，输入半径和高（两行输入），并输出该对象的底面半径，高，底面积以及体积（面积和体积用double
Math.round(doulbe b, int digit) digit取1。&lt;/p&gt;
&lt;p&gt;（要求：不使用构造方法，并且类中的字段为私有，方法为公有）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第6周题解</title>
    <link href="https://sheauhawjang.github.io/2020/12/08/CSharp%20Week6/"/>
    <id>https://sheauhawjang.github.io/2020/12/08/CSharp%20Week6/</id>
    <published>2020-12-08T08:20:08.000Z</published>
    <updated>2020-12-08T08:20:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-重载方法的练习">A. 重载方法的练习</h1><blockquote><p>在Main函数所在的类，实现两个方法用于计算成绩的平均值，小数点后1位。</p><p>public static double AvgGrade(int[] gra)//数值型成绩的平均值。得分1~5之间。课程数无限制。</p><p>public static double AvgGrade(string[] sgra)//成绩分为“good”和“ok”两个等级。good等价于4分，ok等价于1分。</p><p>在Main方法中，分别调用两种方法，均能输出平均成绩。输入用空格分开。</p><p>【注:】</p><ol type="1"><li>四舍五入的区别请大家了解https://www.cnblogs.com/fanyong/archive/2013/05/30/chinese_round.html大家选取“传统意义上的四舍五入”的定义方法。</li><li>保留*位小数的方法请参考https://blog.csdn.net/qq_40985921/article/details/85414484</li></ol></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-27 10:33:00</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week5_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">ToInputArray</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] instr</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">AvgGrade</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">int</span>[] gra</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">int</span> sg <span class="keyword">in</span> gra)</span><br><span class="line">                ans += sg;</span><br><span class="line">            ans /= gra.Length;</span><br><span class="line">            <span class="comment">//ans = Math.Round(ans, 1);</span></span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">AvgGrade</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] sgra</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] gra = <span class="keyword">new</span> <span class="keyword">int</span>[sgra.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sgra.Length; ++i)</span><br><span class="line">                gra[i] = sgra[i] == <span class="string">"good"</span> ? <span class="number">4</span> : <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> AvgGrade(gra);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] ip = Console.ReadLine().Split(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">double</span> ans;</span><br><span class="line">            <span class="keyword">if</span> (ip[<span class="number">0</span>][<span class="number">0</span>] &gt;= <span class="string">'0'</span> &amp;&amp; ip[<span class="number">0</span>][<span class="number">0</span>] &lt;= <span class="string">'9'</span>)</span><br><span class="line">                ans = AvgGrade(InputConvert.ToInputArray(ip));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ans = AvgGrade(ip);</span><br><span class="line">            Console.WriteLine(<span class="string">"&#123;0:0.0&#125;"</span>, ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-时间类">B. 时间类</h1><blockquote><p>定义一个时间类。</p><p>成员有3个属性（包括对应的私有字段）年、月、日。属性要判断年&gt;0、12&gt;=月份&gt;0、日&gt;0并要在所在月份天数之内。</p><p>一个构造方法，在构造方法中给属性赋值。</p><p>在program类中,定义一个方法，方法的两个参数就是时间类的对象。</p><p>方法的作用是，比较第一个参数（时间）和第二个参数（时间）的早晚，如果第一个时间早，返回1，相等返回0，小于返回-1。</p><p>在主函数main（）中调用该方法。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-27 11:07:40</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week5_B</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">ToInputArray</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] instr</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Date</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> datelen = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> year = <span class="number">-1</span>, month = <span class="number">-1</span>, day = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span>[] data = <span class="keyword">new</span> <span class="keyword">int</span>[datelen];</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> Vaild &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Year </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> year; &#125; </span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">set</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt; <span class="number">0</span>) </span><br><span class="line">                    year = <span class="keyword">value</span>; </span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    Vaild = <span class="literal">false</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Month</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> month; &#125;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">set</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">value</span> &lt;= <span class="number">12</span>) </span><br><span class="line">                    month = <span class="keyword">value</span>; </span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    Vaild = <span class="literal">false</span>; </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">DayLimit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (Month)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">case</span> <span class="number">3</span>: <span class="keyword">case</span> <span class="number">5</span>: <span class="keyword">case</span> <span class="number">7</span>: <span class="keyword">case</span> <span class="number">8</span>: <span class="keyword">case</span> <span class="number">10</span>: <span class="keyword">case</span> <span class="number">12</span>: <span class="keyword">return</span> <span class="number">31</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">case</span> <span class="number">6</span>: <span class="keyword">case</span> <span class="number">9</span>: <span class="keyword">case</span> <span class="number">11</span>: <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="keyword">if</span> (Year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">29</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (Year % <span class="number">100</span> == <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">28</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (Year % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">29</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="number">28</span>;</span><br><span class="line">                <span class="keyword">default</span>: <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Day</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> day; &#125;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">value</span> &lt;= DayLimit())</span><br><span class="line">                    day = <span class="keyword">value</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Vaild = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">int</span>[] ip</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vaild = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; datelen &amp;&amp; i &lt; ip.Length; ++i)</span><br><span class="line">                data[i] = ip[i];</span><br><span class="line">            Year = data[<span class="number">0</span>];</span><br><span class="line">            Month = data[<span class="number">1</span>];</span><br><span class="line">            Day = data[<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] sip</span>)</span> &#123; Update(InputConvert.ToInputArray(sip)); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"><span class="keyword">string</span> date, <span class="keyword">char</span> soperator</span>)</span> &#123; Update(date.Split(soperator)); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Date</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">int</span>[] ip</span>)</span> &#123; Update(ip); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Date</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] sip</span>)</span> &#123; Update(sip); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Date</span>(<span class="params"><span class="keyword">string</span> date, <span class="keyword">char</span> soperator = <span class="string">'/'</span></span>)</span> &#123; Update(date, soperator); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">CompareTo</span>(<span class="params">Date b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; datelen; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (data[i] &lt; b.data[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">if</span> (data[i] &gt; b.data[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] line = Console.ReadLine().Split(<span class="string">' '</span>);</span><br><span class="line">            Date[] cmp = <span class="keyword">new</span> Date[line.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; line.Length; ++i)</span><br><span class="line">                cmp[i] = <span class="keyword">new</span> Date(line[i]);</span><br><span class="line">            Console.WriteLine(-cmp[<span class="number">0</span>].CompareTo(cmp[<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-控制台交互式小程序练习">C. 控制台交互式小程序练习</h1><blockquote><p>开发计算机辅助教学程序，教小学生学乘法。程序功能：</p><p>（1）程序开始时让用户选择“年级”为1或2。一年级使只用1位数乘法；二年级使用2位数乘法。</p><p>（2）用Random对象产生两个1位或2位正整数，然后输出以下问题，例如：</p><p>How much is 6 times 7?</p><p>然后学生输入答案，程序检查学生的答案。如果正确，则打印“Verygood!”，然后提出另一个乘法问题。如果不正确，则打印“No,Please tryagain.”，然后让学生重复回答这个问题，直到答对。</p><p>（3）答对3道题后程序结束。</p><p>（4）每个新的问题要求使用一个单独方法产生，这个方法在程序开始时和每次用户答对时调用。</p><p>【注：】此程序无测试用例，编译通过即可。</p></blockquote><p>偷懒了，没写。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-重载方法的练习&quot;&gt;A. 重载方法的练习&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在Main函数所在的类，实现两个方法用于计算成绩的平均值，小数点后1位。&lt;/p&gt;
&lt;p&gt;public static double AvgGrade(int[] gra)
//数值型成绩的平均值。得分1~5之间。课程数无限制。&lt;/p&gt;
&lt;p&gt;public static double AvgGrade(string[] sgra)
//成绩分为“good”和“ok”两个等级。good等价于4分，ok等价于1分。&lt;/p&gt;
&lt;p&gt;在Main方法中，分别调用两种方法，均能输出平均成绩。输入用空格分开。&lt;/p&gt;
&lt;p&gt;【注:】&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;四舍五入的区别请大家了解https://www.cnblogs.com/fanyong/archive/2013/05/30/chinese_round.html
大家选取“传统意义上的四舍五入”的定义方法。&lt;/li&gt;
&lt;li&gt;保留*位小数的方法请参考
https://blog.csdn.net/qq_40985921/article/details/85414484&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第5周题解</title>
    <link href="https://sheauhawjang.github.io/2020/12/08/CSharp%20Week5/"/>
    <id>https://sheauhawjang.github.io/2020/12/08/CSharp%20Week5/</id>
    <published>2020-12-08T08:16:31.000Z</published>
    <updated>2020-12-08T08:16:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-属性的使用">A. 属性的使用</h1><blockquote><p>定义Rectangle类，类中的两个属性Length和Width（其对应的私有字段为length和width，默认值为均为1）。</p><p>Length属性的set方法中验证其值必须在0~20（开区间）之间的浮点数。如果不满足保持其默认值。</p><p>方法：</p><p>计算长方形的周长public double Perimeter()</p><p>计算长方形的面积public double Area()</p><p>输入长方形的长和宽的值，输出长方形的周长、面积。</p></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-20 10:15:50</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week4_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> length = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">double</span> width = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">double</span> Length</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> length; &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">value</span> &lt; <span class="number">20</span>)</span><br><span class="line">                    length = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">double</span> Width</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> width; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; width = <span class="keyword">value</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Rectangle</span>(<span class="params"><span class="keyword">double</span> l, <span class="keyword">double</span> w</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Length = l;</span><br><span class="line">            Width = w;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Perimeter</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="number">2</span> * (length + width); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Area</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> length * width; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">double</span>[] invar = <span class="keyword">new</span> <span class="keyword">double</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToDouble(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">double</span>[] lenwid = InputConvert.GetInputArray(<span class="string">' '</span>);</span><br><span class="line">            Rectangle tim = <span class="keyword">new</span> Rectangle(lenwid[<span class="number">0</span>], lenwid[<span class="number">1</span>]);</span><br><span class="line">            Console.WriteLine(tim.Perimeter());</span><br><span class="line">            Console.WriteLine(tim.Area());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-利用一维数组求解问题">B. 利用一维数组求解问题。</h1><blockquote><p>读入若干（1-15个）整数（一行输入，空格分隔），每个数在10-100之间的整数包括10和100。</p><p>在读入每个数时，确认这个数的有效性（在10到100之间），并且若它和之前读入的数不一样，就把它存储到数组中，无效的数不存储。</p><p>读完所有数之后，仅显示用户输入的不同的数值。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-20 10:48:45</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week4_B</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">NumberPile</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">int</span>[] range = &#123; <span class="number">10</span>, <span class="number">100</span> &#125;;</span><br><span class="line">        <span class="keyword">readonly</span> <span class="keyword">bool</span>[] check = <span class="keyword">new</span> <span class="keyword">bool</span>[range[<span class="number">1</span>] - range[<span class="number">0</span>] + <span class="number">1</span>];</span><br><span class="line">        ArrayList save = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">NumberPile</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; check.Length; ++i)</span><br><span class="line">                check[i] = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">CheckIn</span>(<span class="params"><span class="keyword">int</span> x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; range[<span class="number">0</span>] || x &gt; range[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> check[x - range[<span class="number">0</span>]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">CheckChange</span>(<span class="params"><span class="keyword">int</span> x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; range[<span class="number">0</span>] || x &gt; range[<span class="number">1</span>])</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> check[x - range[<span class="number">0</span>]] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Push</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">int</span>[] xs</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">int</span> x <span class="keyword">in</span> xs)</span><br><span class="line">                <span class="keyword">if</span> (x &gt;= range[<span class="number">0</span>] &amp;&amp; x &lt;= range[<span class="number">1</span>])</span><br><span class="line">                    <span class="keyword">if</span> (!CheckIn(x))</span><br><span class="line">                    &#123;</span><br><span class="line">                        save.Add(x);</span><br><span class="line">                        CheckChange(x);</span><br><span class="line">                    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Write</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(<span class="keyword">string</span>.Join(<span class="string">" "</span>, save.ToArray())); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            NumberPile p = <span class="keyword">new</span> NumberPile();</span><br><span class="line">            p.Push(InputConvert.GetInputArray(<span class="string">' '</span>));</span><br><span class="line">            p.Write();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-成绩排序">C. 成绩排序</h1><blockquote><p>创建一个学生类。</p><p>字段：学号（string类型）、成绩（用一个一维数组，存储一个学生的5门课成绩）</p><p>方法：将学生的5门课成绩由小到大顺序输出。</p><p>主函数中，声明3个学生对象，从控制台给每个学生的学号和5门课成绩赋值，调用方法输出。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week4_C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> name;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> subnum = <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span>[] score = <span class="keyword">new</span> <span class="keyword">int</span>[subnum];</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            name = <span class="string">"NoName"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; subnum; ++i)</span><br><span class="line">                score[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] info</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (info == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">if</span> (info.Length &gt; <span class="number">0</span>)</span><br><span class="line">                name = info[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; subnum; ++i)</span><br><span class="line">                <span class="keyword">if</span> (info.Length &gt; i + <span class="number">1</span>)</span><br><span class="line">                    score[i] = Convert.ToInt32(info[i + <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    score[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="keyword">string</span> na, <span class="keyword">params</span> <span class="keyword">int</span>[] info</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            name = na;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; subnum; ++i)</span><br><span class="line">                <span class="keyword">if</span> (info.Length &gt; i)</span><br><span class="line">                    score[i] = info[i];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    score[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"></span>)</span> &#123; Array.Sort(score); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Write</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] info = <span class="keyword">new</span> <span class="keyword">string</span>[subnum + <span class="number">1</span>];</span><br><span class="line">            info[<span class="number">0</span>] = name;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; subnum; ++i)</span><br><span class="line">                info[i + <span class="number">1</span>] = Convert.ToString(score[i]);</span><br><span class="line">            Console.WriteLine(<span class="keyword">string</span>.Join(<span class="string">" "</span>, info));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">const</span> <span class="keyword">int</span> stunum = <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stunum; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                Student stu = <span class="keyword">new</span> Student(Console.ReadLine().Split(<span class="string">' '</span>));</span><br><span class="line">                stu.Sort();</span><br><span class="line">                stu.Write();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d.-洗牌与发牌">D. 洗牌与发牌</h1><blockquote><p>参照课本第五章【案例研究】——模拟洗牌与发牌。</p><p>此题目涉及多种概念，请大家参照课本（或MOOC视频）完成代码编写。</p><p>【注：】提交后，编译通过即可。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="\images\CSharp-Week5-D.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-19 11:57:10</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week4_D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Card</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Number &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Suit &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">string</span>[] suits = <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"♠"</span>, <span class="string">"♥"</span>, <span class="string">"♣"</span>, <span class="string">"♦"</span> &#125;;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">string</span> <span class="title">NumberName</span>(<span class="params"><span class="keyword">int</span> x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (x)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">return</span> <span class="string">"A"</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">11</span>: <span class="keyword">return</span> <span class="string">"J"</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">12</span>: <span class="keyword">return</span> <span class="string">"Q"</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">13</span>: <span class="keyword">return</span> <span class="string">"K"</span>;</span><br><span class="line">                <span class="keyword">default</span>: <span class="keyword">return</span> Convert.ToString(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Card</span>(<span class="params"><span class="keyword">int</span> id</span>)</span></span><br><span class="line"><span class="function"></span>        &#123; </span><br><span class="line">            Id = id;</span><br><span class="line">            Number = id / <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">            Suit = id % <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Card</span>(<span class="params"><span class="keyword">int</span> num, <span class="keyword">int</span> type</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Id = <span class="number">4</span> * Number - <span class="number">4</span> + Suit;</span><br><span class="line">            Number = num;</span><br><span class="line">            Suit = type;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetSuitS</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> suits[Suit]; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetNumberS</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> NumberName(Number); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetName</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> GetSuitS() + GetNumberS(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">CompareTo</span>(<span class="params">Card b</span>) </span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Id &lt; b.Id)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">if</span> (Id &gt; b.Id)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">PokerPile</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">int</span> cardnum = <span class="number">52</span>;</span><br><span class="line">        Card[] pcards = <span class="keyword">new</span> Card[cardnum];</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PokerPile</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cardnum; ++i)</span><br><span class="line">                pcards[i] = <span class="keyword">new</span> Card(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">swap</span>(<span class="params"><span class="keyword">ref</span> Card a, <span class="keyword">ref</span> Card b</span>)</span> &#123; Card tmp = b; b = a; a = tmp; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Shuffle</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">int</span>[] seed</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Random tool;</span><br><span class="line">            <span class="keyword">if</span> (seed.Length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"随机洗牌中......"</span>);</span><br><span class="line">                tool = <span class="keyword">new</span> Random();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"作弊洗牌中......"</span>);</span><br><span class="line">                <span class="keyword">string</span> dinfo = <span class="keyword">string</span>.Format(<span class="string">"&#123;0:X&#125;"</span>, seed[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">while</span> (dinfo.Length &lt; <span class="number">8</span>)</span><br><span class="line">                    dinfo = <span class="string">"0"</span> + dinfo;</span><br><span class="line">                dinfo = <span class="string">"0x"</span> + dinfo;</span><br><span class="line">                Console.WriteLine(<span class="string">"种子为：&#123;0&#125;"</span>, dinfo);</span><br><span class="line">                tool = <span class="keyword">new</span> Random(seed[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cardnum; ++i)</span><br><span class="line">                swap(<span class="keyword">ref</span> pcards[i], <span class="keyword">ref</span> pcards[tool.Next(i, cardnum)]);</span><br><span class="line">            Console.WriteLine(<span class="string">"洗牌完毕!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"恢复牌堆中......"</span>);</span><br><span class="line">            Array.Sort(pcards, (a, b) =&gt; a.CompareTo(b));</span><br><span class="line">            Console.WriteLine(<span class="string">"恢复完毕!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> playernum = <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">readonly</span> <span class="keyword">static</span> <span class="keyword">string</span>[] defname = <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"甲"</span>, <span class="string">"乙"</span>, <span class="string">"丙"</span>, <span class="string">"丁"</span> &#125;;</span><br><span class="line">        <span class="keyword">readonly</span> <span class="keyword">static</span> <span class="keyword">string</span>[] align = <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"第"</span>, <span class="string">""</span>, <span class="string">"张："</span>, <span class="string">""</span>, <span class="string">"\t\t"</span> &#125;;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">int</span> alignlen = <span class="number">7</span>;</span><br><span class="line">        <span class="function"><span class="keyword">int</span> <span class="title">GetPreStr</span>(<span class="params"><span class="keyword">string</span> org</span>) </span></span><br><span class="line"><span class="function">        <span class="comment">// 防止破坏格式, 字母1格, 非字母2格, 不得超过7格.</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> cnt = alignlen;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt &amp;&amp; i &lt; org.Length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (org[i] &gt; <span class="number">127</span>)</span><br><span class="line">                    --cnt;</span><br><span class="line">            <span class="keyword">return</span> cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandOut</span>(<span class="params"><span class="keyword">params</span> <span class="keyword">string</span>[] name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"发牌中......"</span>);</span><br><span class="line">            <span class="keyword">string</span>[] rname = <span class="keyword">new</span> <span class="keyword">string</span>[playernum];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; playernum; ++i)</span><br><span class="line">                <span class="keyword">if</span> (name.Length &lt;= i || name[i].Length &lt; <span class="number">1</span>)</span><br><span class="line">                    rname[i] = defname[i];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> remLen = GetPreStr(name[i]);</span><br><span class="line">                    <span class="keyword">if</span> (remLen &lt; name[i].Length)</span><br><span class="line">                        rname[i] = name[i].Remove(remLen);</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        rname[i] = name[i];</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; playernum; ++i)</span><br><span class="line">                Console.Write(<span class="string">"\t&#123;0&#125;\t\t"</span>, rname[i]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cardnum; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % playernum == <span class="number">0</span>)</span><br><span class="line">                    Console.WriteLine();</span><br><span class="line">                <span class="keyword">string</span>[] s = <span class="keyword">new</span> <span class="keyword">string</span>[align.Length];</span><br><span class="line">                Array.Copy(align, s, align.Length);</span><br><span class="line">                s[<span class="number">1</span>] = Convert.ToString(i + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">while</span> (s[<span class="number">1</span>].Length &lt; <span class="number">2</span>)</span><br><span class="line">                    s[<span class="number">1</span>] = <span class="string">" "</span> + s[<span class="number">1</span>];</span><br><span class="line">                s[<span class="number">3</span>] = pcards[i].GetName();</span><br><span class="line">                Console.Write(<span class="keyword">string</span>.Join(<span class="string">""</span>, s));</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            Console.WriteLine(<span class="string">"发牌完毕!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DoAsk</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(<span class="string">"&gt;&gt; "</span>);</span><br><span class="line">                <span class="keyword">string</span>[] csla = Console.ReadLine().Split(<span class="string">' '</span>);</span><br><span class="line">                <span class="keyword">if</span> (csla.Length == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">switch</span> (csla[<span class="number">0</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"洗牌"</span>:</span><br><span class="line">                        <span class="keyword">try</span> &#123; Shuffle(Convert.ToInt32(csla[<span class="number">1</span>])); &#125;</span><br><span class="line">                        <span class="keyword">catch</span> &#123; Shuffle(); &#125;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"恢复"</span>: Sort(); <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"发牌"</span>:</span><br><span class="line">                        <span class="keyword">string</span>[] aft = <span class="keyword">new</span> <span class="keyword">string</span>[csla.Length - <span class="number">1</span>];</span><br><span class="line">                        Array.Copy(csla, <span class="number">1</span>, aft, <span class="number">0</span>, aft.Length);</span><br><span class="line">                        HandOut(aft);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">"结束"</span>: <span class="keyword">return</span>;</span><br><span class="line">                    <span class="keyword">default</span>: Console.WriteLine(<span class="string">"命令未找到！"</span>); <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.OutputEncoding = <span class="keyword">new</span> UTF8Encoding();</span><br><span class="line">            PokerPile p = <span class="keyword">new</span> PokerPile();</span><br><span class="line">            p.Shuffle();</span><br><span class="line">            p.HandOut();</span><br><span class="line">            p.Sort();</span><br><span class="line">            p.Shuffle(<span class="number">0x01315878</span>);</span><br><span class="line">            p.HandOut(<span class="string">"徐忠锋"</span>, <span class="string">"乔亚男"</span>, <span class="string">"平田一郎"</span>);</span><br><span class="line">            p.Sort();</span><br><span class="line">            p.HandOut(<span class="string">"Zeondik,,Sheauhaw"</span>.Split(<span class="string">','</span>));</span><br><span class="line">            p.DoAsk();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-属性的使用&quot;&gt;A. 属性的使用&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;定义Rectangle类，类中的两个属性Length和Width（其对应的私有字段为length和width，默认值为均为1）。&lt;/p&gt;
&lt;p&gt;Length属性的set方法中验证其值必须在0~20（开区间）之间的浮点数。如果不满足保持其默认值。&lt;/p&gt;
&lt;p&gt;方法：&lt;/p&gt;
&lt;p&gt;计算长方形的周长public double Perimeter()&lt;/p&gt;
&lt;p&gt;计算长方形的面积public double Area()&lt;/p&gt;
&lt;p&gt;输入长方形的长和宽的值，输出长方形的周长、面积。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第4周题解</title>
    <link href="https://sheauhawjang.github.io/2020/12/08/CSharp%20Week4/"/>
    <id>https://sheauhawjang.github.io/2020/12/08/CSharp%20Week4/</id>
    <published>2020-12-08T08:14:17.000Z</published>
    <updated>2020-12-08T08:14:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-孪生素数查找程序">A. 孪生素数查找程序</h1><blockquote><p>所谓孪生素数指的是间隔为2的相邻素数，就像孪生兄弟。最小的孪生素数是(3, 5)，在100以内的孪生素数还有(3,5), (5,7),(11,13),(17,19),(29,31),(41,43),(59,61),(71,73) 总计有 8组。(备注：每组孪生素数之间用英文逗号,分隔）</p><p>输入正整数，输出小于等于number的孪生素数的组数。</p></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week3_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">NumberChecker</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">CheckPrime</span>(<span class="params"><span class="keyword">int</span> x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; <span class="number">2</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; ++i)</span><br><span class="line">                <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">NextNumber</span>(<span class="params"><span class="keyword">int</span> x</span>)</span> &#123; <span class="keyword">return</span> x + <span class="number">2</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">TwinPrime</span>(<span class="params"><span class="keyword">int</span> x</span>) </span></span><br><span class="line"><span class="function"></span>        &#123; </span><br><span class="line">            <span class="keyword">return</span> CheckPrime(x) &amp;&amp; CheckPrime(NextNumber(x));  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteTwin</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">ref</span> <span class="keyword">bool</span> split</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (split)</span><br><span class="line">                Console.Write(<span class="string">","</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                split = <span class="literal">true</span>;</span><br><span class="line">            Console.Write(<span class="string">"(&#123;0&#125;,&#123;1&#125;)"</span>, x, NextNumber(x));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">bool</span> split = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">int</span> n = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; NumberChecker.NextNumber(i) &lt;= n; ++i)</span><br><span class="line">                <span class="keyword">if</span> (NumberChecker.TwinPrime(i))</span><br><span class="line">                    NumberChecker.WriteTwin(i, <span class="keyword">ref</span> split);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-求aaaaaaaaaa...aa...a">B. 求a+aa+aaa+aaaa+...+aa...a</h1><blockquote><p>求a+aa+aaa+aaaa+...+aa...a(第n项，n个a)，其中a是1～9的整数。例如，</p><p>a=1,n=3时，式子为1+11+111；</p><p>当a=6,n=5时，式子为5+55+555+5555+55555。</p><p>格式: 第一行为输入a n 第二行为输出结果</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week3_B</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a, n;</span><br><span class="line">        <span class="keyword">long</span>[] save;</span><br><span class="line">        <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (n &lt; <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            save = <span class="keyword">new</span> <span class="keyword">long</span>[n];</span><br><span class="line">            save[<span class="number">0</span>] = a;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</span><br><span class="line">                save[i] = save[i - <span class="number">1</span>] * <span class="number">10</span> + a;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">long</span> sig <span class="keyword">in</span> save)</span><br><span class="line">                ans += sig;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Calculate</span>(<span class="params"><span class="keyword">int</span> va, <span class="keyword">int</span> vn</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a = va;</span><br><span class="line">            n = vn;</span><br><span class="line">            update();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetDigit</span>(<span class="params"><span class="keyword">int</span> va</span>)</span> &#123; a = va; update(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetLength</span>(<span class="params"><span class="keyword">int</span> vn</span>)</span> &#123; n = vn; update(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">At</span>(<span class="params"><span class="keyword">int</span> x</span>)</span> &#123; <span class="keyword">return</span> x &gt;= <span class="number">0</span> &amp;&amp; x &lt; n ? save[x] : <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">Get</span>(<span class="params"><span class="keyword">int</span> len</span>)</span> &#123; <span class="keyword">return</span> len &gt; <span class="number">0</span> &amp;&amp; len &lt;= n ? save[len - <span class="number">1</span>] : <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">GetSum</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> ans; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteSum</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(ans); &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] an = InputConvert.GetInputArray();</span><br><span class="line">            Calculate equ = <span class="keyword">new</span> Calculate(an[<span class="number">0</span>], an[<span class="number">1</span>]);</span><br><span class="line">            equ.WriteSum();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-天数计算">C. 天数计算</h1><blockquote><p>输入公元年份和月份，输出该月份的天数。（用switch……case语句）</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week3_C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">DateCalculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetDays</span>(<span class="params"><span class="keyword">int</span> year, <span class="keyword">int</span> month</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(month)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">case</span> <span class="number">3</span>: <span class="keyword">case</span> <span class="number">5</span>: <span class="keyword">case</span> <span class="number">7</span>: <span class="keyword">case</span> <span class="number">8</span>: <span class="keyword">case</span> <span class="number">10</span>: <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">31</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>: <span class="keyword">case</span> <span class="number">6</span>: <span class="keyword">case</span> <span class="number">9</span>: <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">29</span>;</span><br><span class="line">                    <span class="keyword">if</span> (year % <span class="number">100</span> == <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">28</span>;</span><br><span class="line">                    <span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">29</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">28</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteDays</span>(<span class="params"><span class="keyword">int</span> year, <span class="keyword">int</span> month</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(GetDays(year, month));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] ym = InputConvert.GetInputArray(<span class="string">','</span>);</span><br><span class="line">            DateCalculate.WriteDays(ym[<span class="number">0</span>], ym[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d.-文字祖玛游戏">D. 文字祖玛游戏</h1><blockquote><p>程序通过用户输入一个字符串（长度不超过30），由A、B、C、D、E五个字母组成，例如：ACBEEBBAD。</p><p>用户再输入一个字符，只能是A、B、C、D、E其中之一，然后再输入一个要插入的位置。</p><p>程序会将这个字符插入到字符串的指定位置前（第一个字符位置为0，第二个字符位置为1，依此类推），然后消除连续出现的三个相同的字符，直到没有连续三个相同的字符为止。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week3_D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ZumaMap</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> map;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">int</span> rule = <span class="number">3</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ZumaMap</span>(<span class="params"></span>)</span> &#123; map = Console.ReadLine(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ZumaMap</span>(<span class="params"><span class="keyword">string</span> s</span>)</span> &#123; map = s; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetMap</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> map; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteMap</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(map); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">AutoRemove</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + rule &lt;= map.Length; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">bool</span> check = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; rule; ++j)</span><br><span class="line">                    <span class="keyword">if</span> (map[i + j] != map[i])</span><br><span class="line">                    &#123;</span><br><span class="line">                        check = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">if</span> (check)</span><br><span class="line">                &#123;</span><br><span class="line">                    map = map.Remove(i, rule);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span> &#123; <span class="keyword">while</span> (AutoRemove()) ; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Insert</span>(<span class="params"><span class="keyword">int</span> insloc, <span class="keyword">char</span> insvar</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            map = map.Insert(insloc, Convert.ToString(insvar));</span><br><span class="line">            Update();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span>[] <span class="title">GetInputStrings</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> Console.ReadLine().Split(SplitOperator);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ZumaMap map = <span class="keyword">new</span> ZumaMap();</span><br><span class="line">            <span class="keyword">string</span>[] insertinfo = InputConvert.GetInputStrings(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">int</span> insloc = Convert.ToInt32(insertinfo[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">char</span> insvar = Convert.ToChar(insertinfo[<span class="number">0</span>]);</span><br><span class="line">            map.Insert(insloc, insvar);</span><br><span class="line">            map.WriteMap();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-孪生素数查找程序&quot;&gt;A. 孪生素数查找程序&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓孪生素数指的是间隔为2
的相邻素数，就像孪生兄弟。最小的孪生素数是(3, 5)，在100
以内的孪生素数还有(3,5), (5,7),
(11,13),(17,19),(29,31),(41,43),(59,61),(71,73) 总计有 8
组。(备注：每组孪生素数之间用英文逗号,分隔）&lt;/p&gt;
&lt;p&gt;输入正整数，输出小于等于number的孪生素数的组数。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第3周题解</title>
    <link href="https://sheauhawjang.github.io/2020/12/08/CSharp%20Week3/"/>
    <id>https://sheauhawjang.github.io/2020/12/08/CSharp%20Week3/</id>
    <published>2020-12-08T08:10:47.000Z</published>
    <updated>2020-12-08T08:10:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-输入输出练习">A. 输入输出练习</h1><blockquote><p>在一行内输入5个整数，空格分隔。输出5个整数，逗号分隔。英文符号。（输入的接收请参考课本例题1-5,注意Split()的用法）</p></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-14 13:10:22</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week2_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span>[] <span class="title">GetInputStrings</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> Console.ReadLine().Split(SplitOperator);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = GetInputStrings(SplitOperator);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] numstr = InputConvert.GetInputStrings(<span class="string">' '</span>);</span><br><span class="line">            Console.WriteLine(<span class="keyword">string</span>.Join(<span class="string">","</span>, numstr));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-三角形的类和方法">B. 三角形的类和方法</h1><blockquote><p>定义一个三角型类，具有3个public的字段（double）为三角形的3边的长度。提供2个public的方法：</p><p>bool IsTriAngle（）判断这3边能否构成一个三角形； double Area（）求三角形的面积（如果不能构成三角形，返回值为-1）</p><p>输入三角形的3条边，用空格分隔。如果能构成三角形，直接输出三角形面积；否则输出-1</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-14 13:19:31</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week2_B</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">TriAngle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">int</span> sidenumber = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">double</span>[] sides = <span class="keyword">new</span> <span class="keyword">double</span>[sidenumber];</span><br><span class="line">        <span class="keyword">bool</span> vaild;</span><br><span class="line">        <span class="keyword">double</span> totlen, area;</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">TriAngleVaildCheck</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sidenumber; ++i)</span><br><span class="line">                <span class="keyword">if</span> (totlen &lt;= <span class="number">2</span> * sides[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">double</span> <span class="title">AreaCalculate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">double</span> barlen = totlen / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">double</span> ans = barlen;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sidenumber; ++i)</span><br><span class="line">                ans *= barlen - sides[i];</span><br><span class="line">            <span class="keyword">return</span> Math.Sqrt(ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">update</span>(<span class="params"><span class="keyword">double</span>[] x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            totlen = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.Length &amp;&amp; i &lt; sidenumber; ++i)</span><br><span class="line">                sides[i] = x[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sidenumber; ++i)</span><br><span class="line">                totlen += sides[i];</span><br><span class="line">            vaild = TriAngleVaildCheck();</span><br><span class="line">            area = vaild ? AreaCalculate() : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TriAngle</span>(<span class="params"><span class="keyword">double</span>[] x</span>)</span> &#123; update(x); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TriAngle</span>(<span class="params"><span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c</span>)</span> &#123; update(<span class="keyword">new</span> <span class="keyword">double</span>[]&#123; a, b, c &#125;); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">IsTriAngle</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> vaild; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Area</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> area; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">double</span>[] invar = <span class="keyword">new</span> <span class="keyword">double</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToDouble(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            TriAngle tri = <span class="keyword">new</span> TriAngle(InputConvert.GetInputArray(<span class="string">' '</span>));</span><br><span class="line">            <span class="keyword">if</span> (tri.IsTriAngle())</span><br><span class="line">                Console.WriteLine(tri.Area());</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Console.WriteLine(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-日期date类">C. 日期Date类</h1><blockquote><p>创建一个Date类，要求能输入以下格式的日期： 第一种：MM/YYYY构造函数接收2个整数 第二种：June,1992构造函数接收一个字符串和一个整数</p><p>当用户输入其出生年月日时，能够计算出用户的年龄（到年即可。向下取整）。当用户输入的日期无意义或未来时间，输出invalid。（当前时间取系统时间，请查C#自带的取时间的函数）</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-19 11:36:13</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week2_C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Date</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">string</span>[] engname = <span class="keyword">new</span> <span class="keyword">string</span>[]</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">""</span>,</span><br><span class="line">            <span class="string">"January"</span>,</span><br><span class="line">            <span class="string">"February"</span>,</span><br><span class="line">            <span class="string">"March"</span>,</span><br><span class="line">            <span class="string">"April"</span>,</span><br><span class="line">            <span class="string">"May"</span>,</span><br><span class="line">            <span class="string">"June"</span>,</span><br><span class="line">            <span class="string">"July"</span>,</span><br><span class="line">            <span class="string">"August"</span>,</span><br><span class="line">            <span class="string">"September"</span>,</span><br><span class="line">            <span class="string">"October"</span>,</span><br><span class="line">            <span class="string">"November"</span>,</span><br><span class="line">            <span class="string">"December"</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Year &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Month &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">NowYear</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> DateTime.Now.Year; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">NowMonth</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> DateTime.Now.Month; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">SetTypeNum</span>(<span class="params"><span class="keyword">string</span> date</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] spdate = date.Split(<span class="string">'/'</span>);</span><br><span class="line">            <span class="keyword">if</span> (spdate.Length != <span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">            Year = Convert.ToInt32(spdate[<span class="number">1</span>]);</span><br><span class="line">            Month = Convert.ToInt32(spdate[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">SetTypeEng</span>(<span class="params"><span class="keyword">string</span> date</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] spdate = date.Split(<span class="string">','</span>);</span><br><span class="line">            <span class="keyword">if</span> (spdate.Length != <span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">            Year = Convert.ToInt32(spdate[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">12</span>; ++i)</span><br><span class="line">                <span class="keyword">if</span> (spdate[<span class="number">0</span>] == engname[i])</span><br><span class="line">                    Month = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">SetDefault</span>(<span class="params"></span>)</span> &#123; Year = Month = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Date</span>(<span class="params"></span>)</span> &#123; SetDefault(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Date</span>(<span class="params"><span class="keyword">string</span> date</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SetDefault();</span><br><span class="line">            <span class="keyword">if</span> (date[<span class="number">2</span>] == <span class="string">'/'</span>)</span><br><span class="line">                SetTypeNum(date);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                SetTypeEng(date);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">Vaild</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Month &lt; <span class="number">1</span> || Month &gt; <span class="number">12</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (Year &gt; NowYear())</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (Year == NowYear() &amp;&amp; Month &gt; NowMonth())</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetAge</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> NowYear() - Year; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> date = Console.ReadLine();</span><br><span class="line">            Date birth = <span class="keyword">new</span> Date(date);</span><br><span class="line">            <span class="keyword">if</span> (birth.Vaild())</span><br><span class="line">                Console.WriteLine(<span class="string">"&#123;0&#125;岁"</span>, birth.GetAge());</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Console.WriteLine(<span class="string">"invalid"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d.-心率检查">D. 心率检查</h1><blockquote><p>运动时，可以利用心率监测仪来查看心率是否处于安全范围内。其中最高心率=220-年龄；目标心率是最高心率的50%-85%（向下取整）；</p><p>创建一个名称为HeartRates的类。这个类的的属性应该包含人的姓名、出生年份和当前年份。</p><p>类中还包含一个计算并返回年龄（以整年计算）的属性；一个计算并返回最高心率分方法；以及2个分别计算最低和最高目标心率的方法；</p><p>编写程序，实例化HeartRates类，输入个人姓名，出生年月日（空格分隔）。并输出对象的信息，包括姓名，出生年份；年龄；最高心率，最低目标心率，最高目标心率（空格分隔）</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-10-19 11:55:43</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week2_D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">InputConvert</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">GetInputArray</span>(<span class="params"><span class="keyword">char</span> SplitOperator</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] instr = Console.ReadLine().Split(SplitOperator);</span><br><span class="line">            <span class="keyword">int</span>[] invar = <span class="keyword">new</span> <span class="keyword">int</span>[instr.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; invar.Length; ++i)</span><br><span class="line">                invar[i] = Convert.ToInt32(instr[i]);</span><br><span class="line">            <span class="keyword">return</span> invar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">HeartRates</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Year &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Month &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Days &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">NowYear</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> DateTime.Now.Year; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">SetTypeNum</span>(<span class="params"><span class="keyword">string</span> date</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] spdate = date.Split(<span class="string">'/'</span>);</span><br><span class="line">            Year = Convert.ToInt32(spdate[<span class="number">0</span>]);</span><br><span class="line">            Month = Convert.ToInt32(spdate[<span class="number">1</span>]);</span><br><span class="line">            Days = Convert.ToInt32(spdate[<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">SetDefault</span>(<span class="params"></span>)</span> &#123; Year = Month = Days = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HeartRates</span>(<span class="params"></span>)</span> &#123; SetDefault(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HeartRates</span>(<span class="params"><span class="keyword">string</span>[] info</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SetDefault();</span><br><span class="line">            Name = info[<span class="number">0</span>];</span><br><span class="line">            SetTypeNum(info[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetAge</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> NowYear() - Year; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">MaxRates</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> <span class="number">220</span> - GetAge(); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">MinGoalRates</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> (<span class="keyword">int</span>)(MaxRates() * <span class="number">0.5</span>); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">MaxGoalRates</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> (<span class="keyword">int</span>)(MaxRates() * <span class="number">0.85</span>); &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetInfoLine</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] info = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">6</span>];</span><br><span class="line">            info[<span class="number">0</span>] = Name;</span><br><span class="line">            info[<span class="number">1</span>] = Convert.ToString(Year) + <span class="string">"年"</span>;</span><br><span class="line">            info[<span class="number">2</span>] = Convert.ToString(GetAge()) + <span class="string">"岁"</span>;</span><br><span class="line">            info[<span class="number">3</span>] = <span class="string">"最高心率"</span> + Convert.ToString(MaxRates());</span><br><span class="line">            info[<span class="number">4</span>] = <span class="string">"最低目标心率"</span> + Convert.ToString(MinGoalRates());</span><br><span class="line">            info[<span class="number">5</span>] = <span class="string">"最高目标心率"</span> + Convert.ToString(MaxGoalRates());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">string</span>.Join(<span class="string">" "</span>, info);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteInfoLine</span>(<span class="params"></span>)</span> &#123; Console.WriteLine(GetInfoLine()); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[] infos = Console.ReadLine().Split(<span class="string">' '</span>);</span><br><span class="line">            HeartRates peo = <span class="keyword">new</span> HeartRates(infos);</span><br><span class="line">            peo.WriteInfoLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-输入输出练习&quot;&gt;A. 输入输出练习&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在一行内输入5个整数，空格分隔。输出5个整数，逗号分隔。英文符号。（输入的接收请参考课本例题1-5,注意Split()的用法）&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#程序设计 第2周题解</title>
    <link href="https://sheauhawjang.github.io/2020/09/23/CSharp%20Week2/"/>
    <id>https://sheauhawjang.github.io/2020/09/23/CSharp%20Week2/</id>
    <published>2020-09-23T04:23:27.000Z</published>
    <updated>2020-09-23T04:23:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a.-计算两个数的和差商积">A. 计算两个数的和、差、商、积。</h1><blockquote><p>从键盘分别输入两个不为0的整数（前2行输入），分别输出这两个整数的和 差积 商。</p></blockquote><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-09-22 10:50:57</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week1_A</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Get</span>(<span class="params"><span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> type</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(type)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>: <span class="keyword">return</span> a + b;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: <span class="keyword">return</span> a - b;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>: <span class="keyword">return</span> a * b;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>: <span class="keyword">return</span> a / b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> a = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">            <span class="keyword">int</span> b = Convert.ToInt32(Console.ReadLine());</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">0</span>)</span><br><span class="line">                    Console.Write(<span class="string">' '</span>);</span><br><span class="line">                Console.Write(Calculate.Get(a, b, i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="b.-时间转换">B. 时间转换</h1><blockquote><p>输入表示时间的整数，单位是秒。输出*天*小时*分*秒。</p><p>如果时间单位前的数值是0，则不输出该时间单位的数值。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-09-22 11:17:04</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week1_B</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimeManager</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> day = <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> hour = <span class="number">60</span> * <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> minute = <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> second = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span>[] units = &#123; day, hour, minute, second &#125;;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span>[] unitsName = &#123; <span class="string">"天"</span>, <span class="string">"小时"</span>, <span class="string">"分"</span>, <span class="string">"秒"</span> &#125;;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">GetUnitCount</span>(<span class="params"><span class="keyword">long</span> tVar, <span class="keyword">int</span> type</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (type != <span class="number">0</span>)</span><br><span class="line">                tVar %= units[type - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">return</span> tVar / units[type];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">WriteUnitCount</span>(<span class="params"><span class="keyword">long</span> tVar, <span class="keyword">int</span> type</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">long</span> ans = GetUnitCount(tVar, type);</span><br><span class="line">            <span class="keyword">if</span> (ans == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            Console.Write(ans);</span><br><span class="line">            Console.Write(unitsName[type]);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">WriteCount</span>(<span class="params"><span class="keyword">long</span> tVar</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">bool</span> ans = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; units.Length; ++i)</span><br><span class="line">                <span class="keyword">if</span> (WriteUnitCount(tVar, i))</span><br><span class="line">                    ans = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">long</span> tVar = Convert.ToInt64(Console.ReadLine());</span><br><span class="line">            TimeManager.WriteCount(tVar);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c.-整数加密">C. 整数加密</h1><blockquote><p>对于一个4位整数（从0000-9999）按如下方式加密：将每位数字加7后对10取余，用余数替换原来的数字；然后将1,3位数字互换；2,4位数字互换。</p><p>输入一个4位数，输出加密后的结果。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-09-22 11:44:47</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week1_C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Encode</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">AddModulo</span>(<span class="params"><span class="keyword">int</span> x, <span class="keyword">int</span> p</span>)</span> &#123; <span class="keyword">return</span> x &gt;= p ? x - p : x; &#125;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">void</span> Swap&lt;T&gt;(<span class="keyword">ref</span> T a, <span class="keyword">ref</span> T b)</span><br><span class="line">        &#123;</span><br><span class="line">            T tmp = b;</span><br><span class="line">            b = a;</span><br><span class="line">            a = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">DoEncoding</span>(<span class="params"><span class="keyword">string</span> x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] code = <span class="keyword">new</span> <span class="keyword">int</span>[x.Length];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.Length; ++i)</span><br><span class="line">            &#123;</span><br><span class="line">                code[i] = x[i] - <span class="string">'0'</span>;</span><br><span class="line">                code[i] = AddModulo(code[i] + <span class="number">7</span>, <span class="number">10</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Swap(<span class="keyword">ref</span> code[<span class="number">0</span>], <span class="keyword">ref</span> code[<span class="number">2</span>]);</span><br><span class="line">            Swap(<span class="keyword">ref</span> code[<span class="number">1</span>], <span class="keyword">ref</span> code[<span class="number">3</span>]);</span><br><span class="line">            <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteCode</span>(<span class="params"><span class="keyword">string</span> x</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] code = DoEncoding(x);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">int</span> digit <span class="keyword">in</span> code)</span><br><span class="line">                Console.Write(digit);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> x = Console.ReadLine();</span><br><span class="line">            Encode.WriteCode(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="d.-字符串输入输出">D. 字符串输入输出</h1><blockquote><p>输入一个字符串，按照样例格式输出。</p><p>样例：</p><p>Alice</p><p>Hi Alice,</p><p>Welcome to C# 2020!</p><p>Best wishes!</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-09-22 11:58:50</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week1_D</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> s = Console.ReadLine();</span><br><span class="line">            Console.WriteLine(<span class="string">"Hi &#123;0&#125;,"</span>, s);</span><br><span class="line">            Console.WriteLine(<span class="string">"Welcome to C# 2020!"</span>);</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            Console.WriteLine(<span class="string">"Best wishes!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="e.-字符大小写转换">E. 字符大小写转换</h1><blockquote><p>输入一个字母，如果它是小写字母则输出它的大写字母，如果它是大写字母输出它的小写字母。</p></blockquote><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">// Written by Sheauhaw Jang</span></span><br><span class="line"><span class="comment">// 2020-09-22 21:28:37</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSharp_Week1_E</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> s = Console.Read();</span><br><span class="line">            <span class="keyword">if</span> (s &gt;= <span class="string">'a'</span> &amp;&amp; s &lt;= <span class="string">'z'</span>)</span><br><span class="line">                s = s - <span class="string">'a'</span> + <span class="string">'A'</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                s = s - <span class="string">'A'</span> + <span class="string">'a'</span>;</span><br><span class="line">            Console.WriteLine(Convert.ToChar(s));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;a.-计算两个数的和差商积&quot;&gt;A. 计算两个数的和、差、商、积。&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;从键盘分别输入两个不为0的整数（前2行输入），分别输出这两个整数的和 差
积 商。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/categories/C/"/>
    
    
    <category term="C#" scheme="https://sheauhawjang.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>2020 XJTU 校队夏季训练8 E题题解</title>
    <link href="https://sheauhawjang.github.io/2020/08/31/2020%20Summer%20Training%208E/"/>
    <id>https://sheauhawjang.github.io/2020/08/31/2020%20Summer%20Training%208E/</id>
    <published>2020-08-31T15:09:52.000Z</published>
    <updated>2020-09-01T14:27:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2019-2020 XX Opencup GP of Tokyo: E. Count Modulo 2</p><p>题目链接: <ahref="http://codeforces.com/gym/102586/problem/E">http://codeforces.com/gym/102586/problem/E</a></p><h2 id="题面">题面</h2><p>一共 <span class="math inline">\(T\)</span> 组数据.</p><p>现有 <span class="math inline">\(k\)</span> 个<strong>两两不同</strong> 的数字 <spanclass="math inline">\(A_1,A_2,\cdots,A_k\)</span>. 给定正整数 <spanclass="math inline">\(N,S\)</span>, 构造数列 <spanclass="math inline">\(a_1,a_2,\cdots,a_N\)</span>, 满足下列条件:</p><ol type="1"><li><spanclass="math inline">\(\displaystyle\sum_{i=1}^Na_i=S\)</span>.</li><li><span class="math inline">\(\forall i\in[1,N]\)</span>, <spanclass="math inline">\(a_i\in\{A_1,A_2,\cdots,A_k\}\)</span>.</li></ol><p>求构造的方案数在模 <span class="math inline">\(\mathbf 2\)</span>意义下的结果.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\le T\le 5\]</span></p><p><span class="math display">\[1\le N\le10^{18}\]</span></p><p><span class="math display">\[0\le S\le 10^{18}\]</span></p><p><span class="math display">\[1\le k\le 200\]</span></p><p><span class="math display">\[0\le A_1&lt;A_2&lt;\cdots&lt;A_k\le10^5\]</span></p><a id="more"></a><h2 id="题解">题解</h2><h3 id="组合数学计算">组合数学计算</h3><p>若数列 <span class="math inline">\(a\)</span> 满足题设条件, 则 <spanclass="math inline">\(a\)</span> 由若干个 <spanclass="math inline">\(A_1,A_2,\cdots,A_k\)</span> 组成. 设 <spanclass="math inline">\(a\)</span> 由 <spanclass="math inline">\(t_i\)</span> 个 <spanclass="math inline">\(A_i\)</span> (<spanclass="math inline">\(i=1,2,\cdots,k\)</span>) 组成, 则由题意有: <spanclass="math display">\[\begin{aligned}t_1A_1+t_2A_2+\cdots+t_kA_k&amp;=S\\t_1+t_2+\cdots+t_k&amp;=N\end{aligned}\tag1\]</span> 由于数列中的元素顺序任意交换后仍满足条件. 于是将命题 <spanclass="math inline">\((1)\)</span> 对应的数列归为一类,则这样的一类中的数列数量, 依组合数学, 可知: <spanclass="math display">\[C=\frac{N!}{t_1!t_2!\cdots t_k!}\]</span> 注意到只考虑模 <span class="math inline">\(2\)</span>意义下的结果, 于是只考虑 <span class="math inline">\(C\bmod2\ne0\)</span> 的情况即可. 由于模数为 <spanclass="math inline">\(2\)</span>, 只要 <spanclass="math inline">\(C\bmod2\ne0\)</span>, 就一定有 <spanclass="math inline">\(C\bmod2=1\)</span>, 对结果的贡献为 <spanclass="math inline">\(1\)</span>.</p><h3 id="二进制拆位">二进制拆位</h3><p><strong>定理</strong></p><p><span class="math inline">\(n!\)</span> 的标准分解式为: <spanclass="math display">\[n!=\prod_{p}{p^{\alpha(p,n)}}\]</span> <span class="math display">\[\newcommand{\flor}[1]{\left\lfloor #1\right\rfloor}\alpha(p,n)=\sum_{i}{\left\lfloor\frac{n}{p^i}\right\rfloor}\]</span> 由上述定理, <span class="math inline">\(C\)</span>的标准分解式为: <span class="math display">\[C=\prod_{p}{p^{A_p}}\]</span> <span class="math display">\[\begin{aligned}A_p&amp;=\sum_{i}{\flor{\frac{N}{p^i}}}-\sum_{j=1}^k\sum_{i}{\flor{\frac{t_j}{p^i}}}\\&amp;=\sum_{i}\left(\flor{\frac{N}{p^i}}-\sum_{j=1}^k\flor{\frac{t_j}{p^i}}\right)\end{aligned}\]</span></p><p>于是, 对于任意素数 <span class="math inline">\(p\)</span>, <spanclass="math inline">\(C\bmod p\ne0\)</span> 的充分必要条件是 <spanclass="math inline">\(A_p=0\)</span>.</p><p>由于 <span class="math inline">\(\forall i\)</span>, <spanclass="math display">\[\sum_{j=1}^k\flor{\frac{t_j}{p^i}}\le\flor{\sum_{j=1}^k\frac{t_j}{p^i}}=\flor{\frac{N}{p^i}}\tag2\]</span> 于是 <span class="math inline">\(A_p=0\)</span>的充分必要条件是: <span class="math inline">\(\forall i\)</span>, <spanclass="math inline">\((2)\)</span> 式等号成立.</p><p>从 <span class="math inline">\(p\)</span> 进制数运算的角度来看, <spanclass="math inline">\(\flor{x/p^i}\)</span> 就是 <spanclass="math inline">\(x\)</span> 的 <spanclass="math inline">\(p\)</span> 进制数去掉低 <spanclass="math inline">\(i\)</span> 位的结果, 等号成立的条件就是 <spanclass="math inline">\(t_1,t_2,\cdots,t_k\)</span> 的低 <spanclass="math inline">\(i\)</span> 位之和不会在第 <spanclass="math inline">\(i+1\)</span> 位上产生进位. 因为: <spanclass="math display">\[\flor{\frac{N}{p^i}}=\flor{\sum_{i=1}^k\frac{t_j}{p^i}}=\sum_{j=1}^k\flor{\frac{t_j}{p^i}}+\flor{\sum_{j=1}^k\left\{\frac{t_j}{p^i}\right\}}\]</span> 其中: <span class="math inline">\(\{x\}\)</span> 表示 <spanclass="math inline">\(x\)</span> 的小数部分, <spanclass="math inline">\(\displaystyle\flor{\sum_{j=1}^k\left\{\frac{t_j}{p^i}\right\}}\)</span>就是产生的进位.</p><p>由于 <span class="math inline">\(\forall i\)</span>, 第 <spanclass="math inline">\(i\)</span> 位都不产生进位, 若用 <spanclass="math inline">\(x[i]\)</span> 表示 <spanclass="math inline">\(x\)</span> 的第 <spanclass="math inline">\(i\)</span> 位数字 (最低位为 <spanclass="math inline">\(0\)</span>), 则可以得到 <spanclass="math inline">\(\forall i\)</span>, <span class="math display">\[\sum_{j=1}^kt_j[i]=N[i]\]</span> 对于上述命题, 考虑 <span class="math inline">\(p=2\)</span>的特例, 有一个比较好的性质: <span class="math inline">\(C\bmod2\)</span> 的结果只有 <span class="math inline">\(0,1\)</span> 两种取值.<span class="math inline">\(\forall i\)</span>, <spanclass="math inline">\(N[i]\)</span> 只有 <spanclass="math inline">\(0,1\)</span> 两种取值. 若 <spanclass="math inline">\(N[i]=0\)</span>, 则 <spanclass="math inline">\(t_1[i]=t_2[i]=\cdots=t_k[i]=0\)</span>. 否则,<span class="math inline">\(t_1[i],t_2[i],\cdots,t_k[i]\)</span>中有且仅有一个 <span class="math inline">\(1\)</span>. 这时, 讨论 <spanclass="math inline">\(t_1[i],t_2[i],\cdots,t_k[i]\)</span> 哪个是 <spanclass="math inline">\(1\)</span> 即可. 如果 <spanclass="math inline">\(t_{xi}[i]=1\)</span>, 则会带来 <spanclass="math inline">\(2^{i-1}A_{xi}\)</span> 的贡献. 于是只需要讨论,有多少种 <span class="math inline">\(A_{x1}, A_{x2},\cdots\)</span>的选择方案, 使得 <span class="math display">\[\sum_{N[i]=1}2^{i-1}A_{xi}=S\]</span> 即可.</p><h3 id="背包问题转化">背包问题转化</h3><p>对于选择方案, 其实本质是一个背包问题: 对于重量为 <spanclass="math inline">\(2^{i-1}\)</span> 的物品, 若 <spanclass="math inline">\(N[i]=1\)</span>, 则你可以选择 <spanclass="math inline">\(A_1,A_2,\cdots,A_k\)</span> 个, 否则不能选择;最终让背包容量为 <span class="math inline">\(S\)</span>. 令 <spanclass="math inline">\(dp(i,v)\)</span> 为考虑了 <spanclass="math inline">\(i\)</span> 位, 且已占用背包容量为 <spanclass="math inline">\(v\)</span> 的方案数, 则状态转移为: <spanclass="math display">\[dp(i,v)=\begin{cases}\displaystyle \sum_{j=1}^kdp(i-1,v-2^{i-1}A_j)&amp; N[i]=1\\dp(i-1,v)&amp;N[i]=0\end{cases}\]</span></p><p>或者写为 <span class="math display">\[dp(i,v)\stackrel{+}\longrightarrow\begin{cases}dp(i+1,v+2^i A_j)&amp;j=1,2,\cdots,k&amp;N[i]=1\\dp(i+1,v)&amp;&amp;N[i]=0\end{cases}\]</span></p><p>最终答案为 <span class="math inline">\(dp(\flor{\logN}+1,S)\)</span>. 时间复杂度为 <span class="math inline">\(O(kS\logN)\)</span>, 不能接受, 考虑优化.</p><h3 id="二进制优化">二进制优化</h3><p>注意到考虑了 <span class="math inline">\(i\)</span> 位后, 低 <spanclass="math inline">\(i\)</span> 位的值不再改变. 我们只需要考虑低 <spanclass="math inline">\(i\)</span> 位与 <spanclass="math inline">\(S\)</span> 的低 <spanclass="math inline">\(i\)</span> 位相同的情况即可,转移的时候不需要再考虑这些, 这样我们只需要记录 <spanclass="math inline">\(v\)</span> 去掉低 <spanclass="math inline">\(i\)</span> 位后的值 <spanclass="math inline">\(v&#39;\)</span> 即可.</p><p>记 <span class="math inline">\(v=2^{i-1}v&#39;+S\bmod2^{i-1}\)</span>, 于是状态转移变成了: <span class="math display">\[dp(i,v&#39;)=\begin{cases}\displaystyle\sum_{j=1}^kdp(i-1,2v&#39;+S[i]-A_j)&amp;j=1,2,\cdots,k&amp;N[i]=1\\dp(i-1,2v&#39;+S[i])&amp;&amp;N[i]=0\end{cases}\]</span> 或者写为: <span class="math display">\[dp(i,v&#39;)\stackrel{+}\longrightarrow\begin{cases}\displaystyledp\left(i+1,\frac{v&#39;+A_j-S[i]}2\right)&amp;j=1,2,\cdots,k&amp;N[i]=1\\\displaystyledp\left(i+1,\frac{v&#39;-S[i]}2\right)&amp;&amp;N[i]=0\end{cases}\tag3\]</span> 最终答案即 <span class="math inline">\(dp(\flor{\log N}+1,0)\)</span>. 记 <span class="math inline">\(\boldsymbolA:=\{A_1,A_2,\cdots,A_k\}\)</span>, <span class="math inline">\(\barA=\sup\boldsymbol A\)</span> 若 <spanclass="math inline">\(v&#39;\le\bar A\)</span>, 则 <spanclass="math display">\[\frac{v&#39;+A_j-S[i]}{2}\le\frac{\bar A+\bar A-S[i]}{2}\le\bar A\]</span> 由于状态边界 <span class="math inline">\(dp(0,0)=1\)</span> 的<span class="math inline">\(v&#39;=0\le\bar A\)</span>,于是所有有效的状态都满足 <span class="math inline">\(v&#39;\le\barA\)</span>, 状态转移时 <span class="math inline">\(v&#39;&gt;\barA\)</span> 的情况不再考虑. 于是时间复杂度为 <spanclass="math inline">\(O(k\bar A\log N)\)</span>, 空间复杂度 <spanclass="math inline">\(O(\bar A\log N)\)</span>.</p><h3 id="bitset-优化"><code>Bitset</code> 优化</h3><p>由于动态转移的过程是模 <span class="math inline">\(2\)</span>意义下的加法, 本质上是 <span class="math inline">\(0,1\)</span>之间的异或, 自然考虑 <code>bitset</code> 优化的可能性.<code>bitset</code> 可以快速地进行整体异或, 左移, 右移等操作.如何利用这个特性呢? 注意到下标的整体转移可以左移右移, 而 <spanclass="math inline">\((3)\)</span> 式的分子就是整体转移,于是考虑先整体转移再除以 <span class="math inline">\(2\)</span>的中间状态.</p><p>记 <span class="math inline">\(tdp(i,v&#39;)=dp(i,v&#39;/2)\)</span>,这样 <span class="math inline">\((3)\)</span> 式的状态转移就可以写成:<span class="math display">\[dp(i,v&#39;)\stackrel{+}\longrightarrow\begin{cases}\displaystyletdp\left(i+1,v&#39;+A_j\right)&amp;j=1,2,\cdots,k&amp;N[i]=1\\\displaystyletdp\left(i+1,v&#39;\right)&amp;&amp;N[i]=0\end{cases}\tag3\]</span></p><p><span class="math display">\[tdp(i+1,v&#39;)\stackrel{+}\longrightarrowdp\left(i+1,\flor{\frac{v&#39;}2}\right)\quad v&#39;[0]=S[i]\]</span></p><p><span class="math display">\[dp(i+1,v&#39;)=tdp(i+1,2v&#39;+S[i])\tag4\]</span></p><p><span class="math inline">\((3)\)</span> 式的转移可以通过右移,进行整体转移, 这一步是 <span class="math inline">\(O(k\bar A)\)</span>的, 但是获得了 <span class="math inline">\(1/64\)</span> 的常数. <spanclass="math inline">\((4)\)</span> 式的转移可以直接每一位计算, 这一步是<span class="math inline">\(O(\bar A)\)</span> 的. 于是整体复杂度获得了<span class="math inline">\(1/64\)</span> 的常数, 速度加快了.</p><p>注意: <span class="math inline">\(dp\)</span> 的 <spanclass="math inline">\(v&#39;\le\bar A\)</span>, 于是中间状态 <spanclass="math inline">\(tdp\)</span> 的 <spanclass="math inline">\(v&#39;\le2\bar A\)</span>. <code>bitset</code>类的长度应该为 <span class="math inline">\(2\bar A\)</span>.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> as[<span class="number">210</span>], ck[<span class="number">64</span>], cks[<span class="number">64</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mxn = <span class="number">2.05e5</span>;</span><br><span class="line"><span class="built_in">bitset</span>&lt;mxn&gt; dp[<span class="number">64</span>], tdp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        ll n, s, k;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; s &gt;&gt; k;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; as[i];</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt; <span class="number">63</span>; ++i)</span><br><span class="line">            <span class="keyword">if</span> ((n &gt;&gt; i) &amp; <span class="number">1l</span>l)</span><br><span class="line">                ck[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (ll i = <span class="number">0</span>; i &lt; <span class="number">63</span>; ++i)</span><br><span class="line">            <span class="keyword">if</span> ((s &gt;&gt; i) &amp; <span class="number">1l</span>l)</span><br><span class="line">                cks[i] = <span class="number">1</span>;</span><br><span class="line">        dp[<span class="number">0</span>].<span class="built_in">set</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">int</span> frm;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">62</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ck[i])</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; ++j)</span><br><span class="line">                    tdp ^= (dp[i] &lt;&lt; as[j]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                tdp = dp[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> kp = cks[i]; kp &lt; mxn; kp += <span class="number">2</span>)</span><br><span class="line">                dp[i + <span class="number">1</span>][kp &gt;&gt; <span class="number">1</span>] = tdp[kp];</span><br><span class="line">            tdp.reset();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; dp[<span class="number">63</span>][<span class="number">0</span>] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">64</span>; ++i)</span><br><span class="line">            dp[i].reset();</span><br><span class="line">        <span class="built_in">memset</span>(ck, <span class="number">0</span>, <span class="keyword">sizeof</span>(ck));</span><br><span class="line">        <span class="built_in">memset</span>(cks, <span class="number">0</span>, <span class="keyword">sizeof</span>(cks));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="花絮">花絮</h2><p>二进制优化的题目很多, 我的思路来自 XJTUOJ-1046 mob的科学麻将,这也是一道经典的二进制优化的题目. 题目链接: <ahref="https://oj.xjtuicpc.com/problem/1046">https://oj.xjtuicpc.com/problem/1046</a>.本题的题解可以见本人编写的<ahref="/pdfs/小学期实录印版.pdf">《小学期实录》</a>第91页.</p><p>这道题调了许多时间, 少任意一个优化, 或者数组开小了, 都会造成<strong><font color=#ff0000>Wrong Answer</font></strong> 或者<strong><font color=#f4a460>Time Limit Exceeded</font></strong>.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/2020-Summer-Training-8E-P1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2019-2020 XX Opencup GP of Tokyo: E. Count Modulo 2&lt;/p&gt;
&lt;p&gt;题目链接: &lt;a
href=&quot;http://codeforces.com/gym/102586/problem/E&quot;&gt;http://codeforces.com/gym/102586/problem/E&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;一共 &lt;span class=&quot;math inline&quot;&gt;&#92;(T&#92;)&lt;/span&gt; 组数据.&lt;/p&gt;
&lt;p&gt;现有 &lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 个
&lt;strong&gt;两两不同&lt;/strong&gt; 的数字 &lt;span
class=&quot;math inline&quot;&gt;&#92;(A_1,A_2,&#92;cdots,A_k&#92;)&lt;/span&gt;. 给定正整数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(N,S&#92;)&lt;/span&gt;, 构造数列 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a_1,a_2,&#92;cdots,a_N&#92;)&lt;/span&gt;, 满足下列条件:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;displaystyle&#92;sum_{i=1}^Na_i=S&#92;)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;forall i&#92;in[1,N]&#92;)&lt;/span&gt;, &lt;span
class=&quot;math inline&quot;&gt;&#92;(a_i&#92;in&#92;{A_1,A_2,&#92;cdots,A_k&#92;}&#92;)&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;求构造的方案数在模 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;mathbf 2&#92;)&lt;/span&gt;
意义下的结果.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le T&#92;le 5
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le N&#92;le10^{18}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
0&#92;le S&#92;le 10^{18}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le k&#92;le 200
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
0&#92;le A_1&amp;lt;A_2&amp;lt;&#92;cdots&amp;lt;A_k&#92;le10^5
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="组合数学" scheme="https://sheauhawjang.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="动态规划" scheme="https://sheauhawjang.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    <category term="背包" scheme="https://sheauhawjang.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
    <category term="bitset" scheme="https://sheauhawjang.github.io/tags/bitset/"/>
    
    <category term="训练" scheme="https://sheauhawjang.github.io/tags/%E8%AE%AD%E7%BB%83/"/>
    
  </entry>
  
  <entry>
    <title>2020 小学期 Day7F 题解</title>
    <link href="https://sheauhawjang.github.io/2020/08/20/2020%20Microterm%201-7F/"/>
    <id>https://sheauhawjang.github.io/2020/08/20/2020%20Microterm%201-7F/</id>
    <published>2020-08-20T14:51:30.000Z</published>
    <updated>2020-08-21T14:20:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: Educational Codeforces Round 85: E. Divisor Paths</p><p>题目链接: <ahref="https://codeforces.com/contest/1334/problem/E">https://codeforces.com/contest/1334/problem/E</a></p><p>题目来源: XJTUOJ-1167 zxh的高考幸运法阵</p><p>题目链接: <ahref="https://oj.xjtuicpc.com/problem/1167">https://oj.xjtuicpc.com/problem/1167</a></p><h2 id="题面">题面</h2><p>给定一个正整数 <span class="math inline">\(D\)</span>,根据如下规则构造一个图 <span class="math inline">\(\mathfrakD\)</span>:</p><ol type="1"><li><span class="math inline">\(\mathfrak D\)</span> 的每一个节点都是<span class="math inline">\(D\)</span> 的一个正因数.</li><li><span class="math inline">\(\mathfrak D\)</span> 的两个节点 <spanclass="math inline">\(x,y\)</span> 如果满足: <spanclass="math inline">\(x&gt;y\)</span>, <span class="math inline">\(y\midx\)</span> 且 <span class="math inline">\(x/y\)</span> 是素数, 那么<span class="math inline">\(\mathfrak D\)</span> 上就会有一个 <spanclass="math inline">\(x,y\)</span> 之间的无向边, 边权为 <spanclass="math inline">\(d(x)-d(y)\)</span>. 其中 <spanclass="math inline">\(d\)</span> 是除数函数, 表示因子个数.</li></ol><p>现在有 <span class="math inline">\(q\)</span> 次询问, 每次询问 <spanclass="math inline">\(\mathfrak D\)</span> 中两个节点 <spanclass="math inline">\(u,v\)</span> 之间的最短路的个数 <spanclass="math inline">\(N(u,v)\)</span>, 输出对 <spanclass="math inline">\(p\)</span> 取模后的结果.</p><h3 id="备注">备注</h3><p>在 Codeforces 中的题目 <spanclass="math inline">\(p=998244353\)</span>.</p><p>在 XJTUOJ 中的题目 <span class="math inline">\(p=919260817\)</span>.注意, <span class="math inline">\(919260817\)</span> 是一个质数.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\le D\le 10^{15}\]</span></p><p><span class="math display">\[1\le q\le3\cdot10^5\]</span></p><p><span class="math display">\[1\le u,v\le D\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>记 <span class="math inline">\(S(x)\)</span> 为 <spanclass="math inline">\(x\)</span> 的因子构成的集合.</p><p>考虑在 <span class="math inline">\(\mathfrak D\)</span>边上行走的效果: 设 <span class="math inline">\(u,v\)</span>之间连接了一条边, <span class="math inline">\(u&gt;v\)</span>: 从 <spanclass="math inline">\(v\)</span> 到 <spanclass="math inline">\(u\)</span> 是 “向上走”, 编号乘上了一个素数, <spanclass="math inline">\(S\)</span> 增加了一些因子, 边权就是 <spanclass="math inline">\(S\)</span> 增加的因子数; 从 <spanclass="math inline">\(u\)</span> 到 <spanclass="math inline">\(v\)</span> 是 “向下走”, 编号除以了一个素数, <spanclass="math inline">\(S\)</span> 减少了一些因子, 边权就是 <spanclass="math inline">\(S\)</span> 减少的因子数.</p><p>考虑整除的情形: 即 <span class="math inline">\(x\)</span> 走到 <spanclass="math inline">\(y\)</span> 的过程, 其中 <spanclass="math inline">\(x\mid y\)</span>. 这样至少要增加 <spanclass="math inline">\(d(y)-d(x)\)</span> 个因子. 这时,最理想的情况就是只增加因子, 不减少因子, 这样的路径长度就是 <spanclass="math inline">\(d(y)-d(x)\)</span>. 不断地向上走,不断地乘上一个素数, 直到节点到达 <span class="math inline">\(y\)</span>,这样的路径就是一条最短路. 设 <spanclass="math inline">\(y/x=p_1^{\alpha_1}p_2^{\alpha_2}\cdotsp_s^{\alpha_s}\)</span>, 则一条最短路需要乘 <spanclass="math inline">\(\alpha_1\)</span> 次 <spanclass="math inline">\(p_1\)</span>, 乘 <spanclass="math inline">\(\alpha_2\)</span> 次 <spanclass="math inline">\(p_2\)</span>, <spanclass="math inline">\(\cdots\)</span>, 乘 <spanclass="math inline">\(\alpha_s\)</span> 次 <spanclass="math inline">\(p_s\)</span>. 乘素数的顺序不同,所代表的最短路也不同. 依组合数学, 一共有 <span class="math display">\[\frac{\left(\displaystyle\sum_{i=1}^s\alpha_i\right)!}{\displaystyle\prod_{i=1}^s\alpha_i!}=\frac{(\alpha_1+\alpha_2+\cdots+\alpha_s)!}{\alpha_1!\alpha_2!\cdots\alpha_s!}=N(x,y)\tag1\]</span> 种排列方式, 这就是这种情形的答案.</p><p>对于不整除的情形, 我们需要分别乘一些素数和除以一些素数.乘和除的顺序是怎样的? 应该是先尽可能地向下走, 再向上走. 即, 先从 <spanclass="math inline">\(x\)</span> 走到 <spanclass="math inline">\(\gcd(x,y)\)</span>, 之后再从 <spanclass="math inline">\(\gcd(x,y)\)</span> 走到 <spanclass="math inline">\(y\)</span>. 这是因为,向下走会减少之后每一步向上走的时候增加的因子数目,同时避免向上走导致的向下走删除的因子数目的增多.这两步走法都是整除的情形, 可以用公式 <spanclass="math inline">\((1)\)</span> 计算. 由乘法原理,走法数就是这两步走法数的乘积, 即 <span class="math display">\[N(x,y)=N(\gcd(x,y),x)\cdot N(\gcd(x,y),y)\]</span></p><p>综上所述: <span class="math display">\[N(x,y)=\begin{cases}\displaystyle\frac{(\alpha_1+\alpha_2+\cdots+\alpha_s)!}{\alpha_1!\alpha_2!\cdots\alpha_s!}&amp;x\midy&amp;\displaystyle \frac yx=p_1^{\alpha_1}p_2^{\alpha_2}\cdotsp_s^{\alpha_s}\\N(\gcd(x,y),x)\cdot N(\gcd(x,y),y)&amp;x\nmid y\end{cases}\]</span></p><p>在算法实现上, 阶乘可以预处理, 算出 <spanclass="math inline">\(y/x\)</span> 的标准分解式即可直接得到答案. 由于<span class="math inline">\(x,y,y/x\)</span> 都是 <spanclass="math inline">\(D\)</span> 的因子, 标准分解式中的质数一定是 <spanclass="math inline">\(D\)</span> 的质因子, 而 <spanclass="math inline">\(D\)</span> 的质因子最多有 <spanclass="math inline">\(\log D\)</span> 个, 于是可以预处理 <spanclass="math inline">\(D\)</span> 的所有质因子, 然后计算标准分解式时,计算每个质因子的指数即可. 分解复杂度为 <spanclass="math inline">\(O(\log D)\)</span>, 计算复杂度为 <spanclass="math inline">\(O(\log D)\)</span>. 总时间复杂度为 <spanclass="math inline">\(O(q\log D)\)</span>.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">llp</span>;</span> <span class="comment">// 见我的模板</span></span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; ps;</span><br><span class="line"><span class="built_in">map</span>&lt;ll, <span class="keyword">int</span>&gt; cnt;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mx = <span class="number">1e5</span>;</span><br><span class="line">llp pows[mx], invs[mx];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dvd</span><span class="params">(ll d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (ll p = <span class="number">2</span>; p * p &lt;= d; ++p)</span><br><span class="line">        <span class="keyword">if</span> (d % p == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ps.push_back(p);</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">                d /= p;</span><br><span class="line">            <span class="keyword">while</span> (d % p == <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (d != <span class="number">1</span>)</span><br><span class="line">        ps.push_back(d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a % b) : a; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function">llp <span class="title">solve</span><span class="params">(ll u, ll v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u == v)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (u &gt; v)</span><br><span class="line">        swap(u, v);</span><br><span class="line">    <span class="keyword">if</span> (v % u != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> solve(gcd(u, v), u) * solve(gcd(u, v), v);</span><br><span class="line">    cnt.<span class="built_in">clear</span>();</span><br><span class="line">    ll up = v / u;</span><br><span class="line">    ll tcnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll p : ps)</span><br><span class="line">        <span class="keyword">while</span> (up % p == <span class="number">0</span>)</span><br><span class="line">            up /= p, ++cnt[p], ++tcnt;</span><br><span class="line">    llp ans = pows[tcnt];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> x : cnt)</span><br><span class="line">        ans *= invs[x.second];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pows[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; mx; ++i)</span><br><span class="line">        pows[i] = pows[i - <span class="number">1</span>] * i;</span><br><span class="line">    invs[mx - <span class="number">1</span>] = ~pows[mx - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = mx - <span class="number">2</span>; i &gt;= <span class="number">0</span>; --i)</span><br><span class="line">        invs[i] = invs[i + <span class="number">1</span>] * (i + <span class="number">1</span>);</span><br><span class="line">    ll d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;d);</span><br><span class="line">    dvd(d);</span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; q; ++t)</span><br><span class="line">    &#123;</span><br><span class="line">        ll v, u;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;u, &amp;v);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, (<span class="keyword">int</span>)solve(v, u));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: Educational Codeforces Round 85: E. Divisor Paths&lt;/p&gt;
&lt;p&gt;题目链接: &lt;a
href=&quot;https://codeforces.com/contest/1334/problem/E&quot;&gt;https://codeforces.com/contest/1334/problem/E&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;题目来源: XJTUOJ-1167 zxh的高考幸运法阵&lt;/p&gt;
&lt;p&gt;题目链接: &lt;a
href=&quot;https://oj.xjtuicpc.com/problem/1167&quot;&gt;https://oj.xjtuicpc.com/problem/1167&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;给定一个正整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(D&#92;)&lt;/span&gt;,
根据如下规则构造一个图 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;mathfrak
D&#92;)&lt;/span&gt;:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;mathfrak D&#92;)&lt;/span&gt; 的每一个节点都是
&lt;span class=&quot;math inline&quot;&gt;&#92;(D&#92;)&lt;/span&gt; 的一个正因数.&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;mathfrak D&#92;)&lt;/span&gt; 的两个节点 &lt;span
class=&quot;math inline&quot;&gt;&#92;(x,y&#92;)&lt;/span&gt; 如果满足: &lt;span
class=&quot;math inline&quot;&gt;&#92;(x&amp;gt;y&#92;)&lt;/span&gt;, &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;mid
x&#92;)&lt;/span&gt; 且 &lt;span class=&quot;math inline&quot;&gt;&#92;(x/y&#92;)&lt;/span&gt; 是素数, 那么
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;mathfrak D&#92;)&lt;/span&gt; 上就会有一个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(x,y&#92;)&lt;/span&gt; 之间的无向边, 边权为 &lt;span
class=&quot;math inline&quot;&gt;&#92;(d(x)-d(y)&#92;)&lt;/span&gt;. 其中 &lt;span
class=&quot;math inline&quot;&gt;&#92;(d&#92;)&lt;/span&gt; 是除数函数, 表示因子个数.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;现在有 &lt;span class=&quot;math inline&quot;&gt;&#92;(q&#92;)&lt;/span&gt; 次询问, 每次询问 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;mathfrak D&#92;)&lt;/span&gt; 中两个节点 &lt;span
class=&quot;math inline&quot;&gt;&#92;(u,v&#92;)&lt;/span&gt; 之间的最短路的个数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(N(u,v)&#92;)&lt;/span&gt;, 输出对 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 取模后的结果.&lt;/p&gt;
&lt;h3 id=&quot;备注&quot;&gt;备注&lt;/h3&gt;
&lt;p&gt;在 Codeforces 中的题目 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p=998244353&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;在 XJTUOJ 中的题目 &lt;span class=&quot;math inline&quot;&gt;&#92;(p=919260817&#92;)&lt;/span&gt;.
注意, &lt;span class=&quot;math inline&quot;&gt;&#92;(919260817&#92;)&lt;/span&gt; 是一个质数.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le D&#92;le 10^{15}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le q&#92;le3&#92;cdot10^5
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le u,v&#92;le D
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="图论" scheme="https://sheauhawjang.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="组合数学" scheme="https://sheauhawjang.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="小学期" scheme="https://sheauhawjang.github.io/tags/%E5%B0%8F%E5%AD%A6%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>2020 小学期第一期 Day7G 题解</title>
    <link href="https://sheauhawjang.github.io/2020/08/19/2020%20Microterm%201-7G/"/>
    <id>https://sheauhawjang.github.io/2020/08/19/2020%20Microterm%201-7G/</id>
    <published>2020-08-19T04:33:50.000Z</published>
    <updated>2020-08-20T14:55:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: XJTUOJ-1168 zxh的后宫管理系统</p><p>题目链接: <ahref="https://oj.xjtuicpc.com/problem/1168">https://oj.xjtuicpc.com/problem/1168</a></p><h2 id="题面">题面</h2><p>一共 <span class="math inline">\(T\)</span> 组数据.</p><p>现有一个未知的整数 <span class="math inline">\(k\)</span>, 满足 <spanclass="math inline">\(1\le k\le n\)</span>.</p><p>现在你被宣称 <span class="math inline">\(k\)</span> 的值等于 <spanclass="math inline">\(x\)</span>, 但是你不知道真假.你现在可以提交一个任意大的正整数 <span class="math inline">\(y\)</span>,之后获得返回值 <span class="math inline">\(\gcd(k,y)\)</span>.</p><p>你需要寻找一个合适的 <span class="math inline">\(y\)</span>,使得你可以通过返回值来查验 <span class="math inline">\(x\)</span> 和<span class="math inline">\(k\)</span> 是否相等. 如果有很多满足条件的值,选阿泽最小的那个. 如果没有合适的 <span class="math inline">\(y\)</span>,输出 <span class="math inline">\(-1\)</span>.</p><p>由于 <span class="math inline">\(y\)</span> 很大, 输出对 <spanclass="math inline">\(920011128\)</span> 取模后的结果.</p><h3 id="简要描述">简要描述</h3><p>给定 <span class="math inline">\(n, x\)</span>, 试给出一个最小的<span class="math inline">\(y\)</span>, 使得 <spanclass="math inline">\(\forall 1\le a\le n\)</span>, 若 <spanclass="math inline">\(a\ne x\)</span>, 则 <spanclass="math inline">\(\gcd(a,y)\ne \gcd(x,y)\)</span>. 由于 <spanclass="math inline">\(y\)</span> 很大, 输出对 <spanclass="math inline">\(920011128\)</span> 取模后的结果.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\le T&lt;10\]</span></p><p><span class="math display">\[1\le k\le n\le10^7\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>答案为 <span class="math display">\[y=x\prod_{p\le n/x}p\]</span> 证明见 <ahref="/2020/08/18/2020%20Wannafly%20Winter%201H/">2020 CCPC Wannafly冬令营 Day1H 题解</a>.</p><p>采用线性筛预处理 <span class="math inline">\([1,10^7]\)</span>中的所有素数. 若每次询问暴力计算素数乘积, 则复杂度为 <spanclass="math inline">\(O(Tn)\)</span>. 若采用前缀积, 则复杂度为 <spanclass="math inline">\(O(T+n)\)</span>.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e7</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> p = <span class="number">920011128</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ps; <span class="comment">// 所有素数</span></span><br><span class="line"><span class="keyword">bool</span> chk[maxn]; <span class="comment">// 合数为true</span></span><br><span class="line">ll psum[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillPrime</span><span class="params">(<span class="keyword">int</span> rge)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= rge; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!chk[i])</span><br><span class="line">            ps.push_back(i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ps.<span class="built_in">size</span>() &amp;&amp; ps[j] &lt;= rge / i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            chk[i * ps[j]] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % ps[j] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> rge = <span class="number">1e7</span> + <span class="number">3</span>;</span><br><span class="line">    fillPrime(rge);</span><br><span class="line">    psum[<span class="number">0</span>] = psum[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= rge; ++i)</span><br><span class="line">        <span class="keyword">if</span> (chk[i])</span><br><span class="line">            psum[i] = psum[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            psum[i] = psum[i - <span class="number">1</span>] * i % p;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> tt = <span class="number">0</span>; tt &lt; t; ++tt)</span><br><span class="line">    &#123;</span><br><span class="line">        ll n, k;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; k * psum[n / k] % p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: XJTUOJ-1168 zxh的后宫管理系统&lt;/p&gt;
&lt;p&gt;题目链接: &lt;a
href=&quot;https://oj.xjtuicpc.com/problem/1168&quot;&gt;https://oj.xjtuicpc.com/problem/1168&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;一共 &lt;span class=&quot;math inline&quot;&gt;&#92;(T&#92;)&lt;/span&gt; 组数据.&lt;/p&gt;
&lt;p&gt;现有一个未知的整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt;, 满足 &lt;span
class=&quot;math inline&quot;&gt;&#92;(1&#92;le k&#92;le n&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;现在你被宣称 &lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 的值等于 &lt;span
class=&quot;math inline&quot;&gt;&#92;(x&#92;)&lt;/span&gt;, 但是你不知道真假.
你现在可以提交一个任意大的正整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;,
之后获得返回值 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;gcd(k,y)&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;你需要寻找一个合适的 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;,
使得你可以通过返回值来查验 &lt;span class=&quot;math inline&quot;&gt;&#92;(x&#92;)&lt;/span&gt; 和
&lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 是否相等. 如果有很多满足条件的值,
选阿泽最小的那个. 如果没有合适的 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;,
输出 &lt;span class=&quot;math inline&quot;&gt;&#92;(-1&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;由于 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt; 很大, 输出对 &lt;span
class=&quot;math inline&quot;&gt;&#92;(920011128&#92;)&lt;/span&gt; 取模后的结果.&lt;/p&gt;
&lt;h3 id=&quot;简要描述&quot;&gt;简要描述&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&quot;math inline&quot;&gt;&#92;(n, x&#92;)&lt;/span&gt;, 试给出一个最小的
&lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;, 使得 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;forall 1&#92;le a&#92;le n&#92;)&lt;/span&gt;, 若 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a&#92;ne x&#92;)&lt;/span&gt;, 则 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;gcd(a,y)&#92;ne &#92;gcd(x,y)&#92;)&lt;/span&gt;. 由于 &lt;span
class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt; 很大, 输出对 &lt;span
class=&quot;math inline&quot;&gt;&#92;(920011128&#92;)&lt;/span&gt; 取模后的结果.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le T&amp;lt;10
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le k&#92;le n&#92;le10^7
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="构造" scheme="https://sheauhawjang.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
    <category term="小学期" scheme="https://sheauhawjang.github.io/tags/%E5%B0%8F%E5%AD%A6%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>2020 CCPC Wannafly 冬令营 Day1H 题解</title>
    <link href="https://sheauhawjang.github.io/2020/08/18/2020%20Wannafly%20Winter%201H/"/>
    <id>https://sheauhawjang.github.io/2020/08/18/2020%20Wannafly%20Winter%201H/</id>
    <published>2020-08-18T12:11:01.000Z</published>
    <updated>2020-08-19T15:50:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2020 CCPC Wannafly 冬令营 Day1: H. 最大公约数</p><h2 id="题面">题面</h2><p>一共 <span class="math inline">\(T\)</span> 组数据.</p><p>现有一个未知的整数 <span class="math inline">\(k\)</span>, 满足 <spanclass="math inline">\(1\le k\le n\)</span>.</p><p>现在你被宣称 <span class="math inline">\(k\)</span> 的值等于 <spanclass="math inline">\(x\)</span>, 但是你不知道真假.你现在可以提交一个任意大的正整数 <span class="math inline">\(y\)</span>,之后获得返回值 <span class="math inline">\(\gcd(k,y)\)</span>.</p><p>你需要输出一个合适的 <span class="math inline">\(y\)</span>,使得你可以通过返回值来查验 <span class="math inline">\(x\)</span> 和<span class="math inline">\(k\)</span> 是否相等. 如果有很多满足条件的值,输出最小的那个. 如果没有合适的 <span class="math inline">\(y\)</span>,输出 <span class="math inline">\(-1\)</span>.</p><h3 id="简要描述">简要描述</h3><p>给定 <span class="math inline">\(n, x\)</span>, 试给出一个最小 <spanclass="math inline">\(y\)</span>, 使得 <spanclass="math inline">\(\forall 1\le a\le n\)</span>, 若 <spanclass="math inline">\(a\ne x\)</span>, 则 <spanclass="math inline">\(\gcd(a,y)\ne \gcd(x,y)\)</span>.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\le T\le 50\]</span></p><p><span class="math display">\[1\le k\le n\le500\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>注意到 <spanclass="math inline">\(\gcd(x,y)=\gcd(\gcd(x,y),y)\)</span>, 于是应满足<span class="math inline">\(\gcd(x,y)=x\)</span>, 即 <spanclass="math inline">\(x\mid y\)</span>. 设 <spanclass="math inline">\(y=xy&#39;\)</span>.</p><p>若 <span class="math inline">\(x\nmid a\)</span>, 则显然 <spanclass="math inline">\(\gcd(a,y)\ne x\)</span>. <spanclass="math inline">\(\forall a&#39;\in(1,n/x]\)</span>, 都有 <spanclass="math inline">\(\gcd(a&#39;x,y)=x\gcd(a&#39;,y&#39;)\)</span>,于是此时 <span class="math inline">\(\gcd(a&#39;,y&#39;)\ne 1\)</span>.考虑到: 对于任意 <span class="math inline">\((1,n/x]\)</span> 中的素数<span class="math inline">\(p\)</span>, 亦都应该有 <spanclass="math inline">\(\gcd(p,y&#39;)\ne 1\)</span>, 此时有 <spanclass="math inline">\(\gcd(p,y&#39;)=p\)</span>, <spanclass="math inline">\(p\mid y&#39;\)</span>. 于是这些素数的乘积 <spanclass="math inline">\(P\)</span> 满足 <span class="math inline">\(P\midy&#39;\)</span>. <span class="math inline">\(P\le y&#39;\)</span>.</p><p>若 <span class="math inline">\(P=y&#39;\)</span>, 则 <spanclass="math inline">\(\forall a&#39;\in (1,n/x]\)</span>, <spanclass="math inline">\(a&#39;\)</span> 的任意素因子 <spanclass="math inline">\(p\)</span> 一定满足 <spanclass="math inline">\(1&lt;p\le a&#39;\le n/x\)</span>, <spanclass="math inline">\(p\mid y\)</span>, 于是 <spanclass="math inline">\(\gcd(a&#39;,y&#39;)\ne 1\)</span>, <spanclass="math inline">\(\gcd(a&#39;x,y)\ne x\)</span>.</p><p>于是取 <span class="math inline">\(P=y&#39;\)</span> 是可行的,而且是最小的解.</p><p>预处理 <span class="math inline">\([1,500]\)</span> 中的所有素数,解就是 <span class="math display">\[y=x\prod_{p\le n/x}p\]</span> 由于 <span class="math inline">\(y\)</span>的可能的最大值超过了 <span class="math inline">\(2^{128}\)</span>,于是应该使用高精度乘法, 或者使用 Python.</p><p>忽略高精度乘法的复杂度常数. 若每次询问暴力计算素数乘积, 则复杂度为<span class="math inline">\(O(Tn)\)</span>. 若采用前缀积, 则复杂度为<span class="math inline">\(O(T+n)\)</span>.</p><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">prime = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,...,<span class="number">599</span>] </span><br><span class="line"><span class="comment"># 600以内的素数请自己打表补全, 这里省略.</span></span><br><span class="line">ts = <span class="number">0</span></span><br><span class="line">hds = [<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range (<span class="number">1</span>, <span class="number">600</span>):</span><br><span class="line">    <span class="keyword">if</span> (prime[ts] == i):</span><br><span class="line">        hds.append(int(prime[ts] * hds[i - <span class="number">1</span>]))</span><br><span class="line">        ts += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hds.append(hds[i - <span class="number">1</span>])</span><br><span class="line">t = int(input())</span><br><span class="line"><span class="keyword">for</span> rt <span class="keyword">in</span> range (<span class="number">0</span>, t):</span><br><span class="line">    n, k = map(int, input().split(<span class="string">' '</span>))</span><br><span class="line">    print(k * hds[n // k])</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2020 CCPC Wannafly 冬令营 Day1: H. 最大公约数&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;一共 &lt;span class=&quot;math inline&quot;&gt;&#92;(T&#92;)&lt;/span&gt; 组数据.&lt;/p&gt;
&lt;p&gt;现有一个未知的整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt;, 满足 &lt;span
class=&quot;math inline&quot;&gt;&#92;(1&#92;le k&#92;le n&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;现在你被宣称 &lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 的值等于 &lt;span
class=&quot;math inline&quot;&gt;&#92;(x&#92;)&lt;/span&gt;, 但是你不知道真假.
你现在可以提交一个任意大的正整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;,
之后获得返回值 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;gcd(k,y)&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;你需要输出一个合适的 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;,
使得你可以通过返回值来查验 &lt;span class=&quot;math inline&quot;&gt;&#92;(x&#92;)&lt;/span&gt; 和
&lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 是否相等. 如果有很多满足条件的值,
输出最小的那个. 如果没有合适的 &lt;span class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;,
输出 &lt;span class=&quot;math inline&quot;&gt;&#92;(-1&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id=&quot;简要描述&quot;&gt;简要描述&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&quot;math inline&quot;&gt;&#92;(n, x&#92;)&lt;/span&gt;, 试给出一个最小 &lt;span
class=&quot;math inline&quot;&gt;&#92;(y&#92;)&lt;/span&gt;, 使得 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;forall 1&#92;le a&#92;le n&#92;)&lt;/span&gt;, 若 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a&#92;ne x&#92;)&lt;/span&gt;, 则 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;gcd(a,y)&#92;ne &#92;gcd(x,y)&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le T&#92;le 50
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le k&#92;le n&#92;le500
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="构造" scheme="https://sheauhawjang.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
    <category term="高精度" scheme="https://sheauhawjang.github.io/tags/%E9%AB%98%E7%B2%BE%E5%BA%A6/"/>
    
    <category term="2020 CCPC WannaFly 冬令营" scheme="https://sheauhawjang.github.io/tags/2020-CCPC-WannaFly-%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>模 p 同余类模板</title>
    <link href="https://sheauhawjang.github.io/2020/08/14/Modulo%20p%20Module/"/>
    <id>https://sheauhawjang.github.io/2020/08/14/Modulo%20p%20Module/</id>
    <published>2020-08-14T13:00:23.000Z</published>
    <updated>2020-08-14T14:14:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>该模板为作者原创.</p><h2 id="问题引入">问题引入</h2><blockquote><p>请输出对 <span class="math inline">\(p\)</span> 取模后的结果.</p></blockquote><blockquote><p>请输出模 <span class="math inline">\(p\)</span> 意义下的结果.</p></blockquote><blockquote><p>最终答案可以表示为 <span class="math inline">\(a/b\)</span>, 请输出<span class="math inline">\(a\cdot b^{-1}\bmod p\)</span>, 其中 <spanclass="math inline">\(b^{-1}\)</span> 是 <spanclass="math inline">\(b\)</span> 对模 <spanclass="math inline">\(p\)</span> 的乘法逆元.</p></blockquote><p>在我们做题的时候, 经常会遇到输出在模 <spanclass="math inline">\(p\)</span> 意义下的结果的题目.上面三种是经典的这种要求的说法.</p><a id="more"></a><h2 id="传统做法">传统做法</h2><p>这种题目在计算的过程中, 需要用到大量的取模运算. 原则上,每进行一次加减乘除的运算, 都需要进行至少一次取模. 在读入一个变量后,也应该立即进行至少一次取模. 如果结果产生了负数,则可能需要再进行一次取模来避免这种情况的发生. 例如:</p><blockquote><p>计算 <span class="math inline">\((a+b)\bmod p\)</span>. <spanclass="math inline">\(-2^{63}&lt;a,b&lt;2^{63}\)</span>, <spanclass="math inline">\(1&lt;p&lt;2^{62}\)</span>.</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll a, b, p;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>, &amp;a, &amp;b, &amp;p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>, ((a % p + b % p) % p + p) % p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意到, 这个简单的程序进行了 4 次了取模. 这样产生了一些问题:</p><p>在这个程序中, 每一步取模都是缺一不可的. 对 <spanclass="math inline">\(a,b\)</span> 的取模是防止 <spanclass="math inline">\(a+b\)</span> 过大; 对和取模是题目要求;最后对取模后的结果在加上一个 <span class="math inline">\(p\)</span>后取模是为了防止直接取模得到负数.上述四个取模缺少任意一个没有替代品的取模, 都会导致答案的错误.而在做题的过程中, 上述的取模运算或替代品都是机械化而重复的,有代码复用的可能; 同时, 这些运算缺一不可, 而在赛场考场上做题时,在大面积的取模过程中, 可能一时疏忽漏掉某个取模, 导致算法正确的程序出现<strong><font color=#ff0000#>Wrong Answer</font></strong> 的情况,这种错误又很难查验, 因此高效便捷的代码复用很有必要.</p><p>而且, 取模运算速度较慢, 应该减少模运算的使用: 在某些情况下利用if-else 结构或三目运算符 <code>?:</code>来作为直接偷懒使用取模符号的替代品. 然而, 这些替代品虽然增加了效率,但是却让代码更加反直觉, 编写更为复杂, 大量重复出现不利于赛场考场的应用.代码复用就可以令这些问题迎刃而解.</p><h2 id="代码实现">代码实现</h2><p>题面固定模数 <span class="math inline">\(p\)</span> 情况的实现,这也是最常见的一种情况.</p><p>如果 <span class="math inline">\(p\)</span> 是通过键盘输入,且对于一组数据, 输入后不再改变, 则只需将类声明中的<code>static const int</code> 类型的常量的声明作为全程序的全局变量即可.但是对变量取模会显著地比对常量取模更慢.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for (int i = 0; i &lt; n; ++i)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">llp</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">llp</span>(<span class="title">T</span> <span class="title">a</span>, <span class="title">int</span>) &#123;</span> v = a; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> p = <span class="number">998244353</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> phi = p - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> invp = phi - <span class="number">1</span>;</span><br><span class="line">    llp() &#123; v = <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">static</span> <span class="title">T</span> <span class="title">mod</span>(<span class="title">T</span> <span class="title">a</span>) &#123;</span> <span class="keyword">return</span> a %= p, a &gt;= <span class="number">0</span> ? a : a + p; &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">static</span> <span class="title">T</span> &amp;<span class="title">opmod</span>(<span class="title">T</span> &amp;<span class="title">a</span>) &#123;</span> <span class="keyword">return</span> a = mod(a); &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">llp</span>(<span class="title">T</span> <span class="title">a</span>) &#123;</span> v = mod(a); &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="title">explicit</span> <span class="title">operator</span> <span class="title">T</span>() <span class="title">const</span> &#123;</span> <span class="keyword">return</span> v; &#125;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">operator</span>*() <span class="keyword">const</span> &#123; <span class="keyword">return</span> v; &#125;</span><br><span class="line">    <span class="keyword">int</span> *<span class="keyword">operator</span>&amp;() <span class="keyword">const</span> &#123; <span class="keyword">return</span> (<span class="keyword">int</span> *)&amp;v; &#125;</span><br><span class="line">    <span class="keyword">friend</span> istream &amp;<span class="keyword">operator</span>&gt;&gt;(istream &amp;ipt, llp &amp;x) &#123; <span class="keyword">return</span> ipt &gt;&gt; x.v, opmod(x.v), ipt; &#125;</span><br><span class="line">    <span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;opt, llp x) &#123; <span class="keyword">return</span> opt &lt;&lt; x.v; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>+(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v + b.v &gt;= p ? llp(v + b.v - p, <span class="number">0</span>) : llp(v + b.v, <span class="number">0</span>); &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>+(ll a, llp b) &#123; <span class="keyword">return</span> b + a; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>+=(llp b) &#123; <span class="keyword">return</span> v += b.v, v = v &gt;= p ? v - p : v, *<span class="keyword">this</span>; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>++() &#123; <span class="keyword">return</span> *<span class="keyword">this</span> += <span class="number">1</span>; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>++(<span class="keyword">int</span>) &#123; <span class="keyword">return</span> ++*<span class="keyword">this</span>, *<span class="keyword">this</span> - <span class="number">1</span>; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>-() <span class="keyword">const</span> &#123; <span class="keyword">return</span> v ? llp(p - v, <span class="number">0</span>) : llp(); &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>-(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span> + (-b); &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>-(ll a, llp b) &#123; <span class="keyword">return</span> -b + a; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>-=(llp b) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> += -b; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>--() &#123; <span class="keyword">return</span> *<span class="keyword">this</span> -= <span class="number">1</span>; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>--(<span class="keyword">int</span>) &#123; <span class="keyword">return</span> --*<span class="keyword">this</span>, *<span class="keyword">this</span> + <span class="number">1</span>; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>*(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> ll(v) * b.v; &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>*(ll a, llp b) &#123; <span class="keyword">return</span> b * a; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>*=(llp b) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * b; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>[](ll b) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        llp ans = <span class="number">1</span>, a = *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">while</span> (b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">                ans *= a;</span><br><span class="line">            a *= a, b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>^(ll b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> (*<span class="keyword">this</span>)[b]; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>^=(ll b) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> ^ b; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>~() <span class="keyword">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span> ^ invp; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>/(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span> * ~b; &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>/(ll a, llp b) &#123; <span class="keyword">return</span> (~b) * a; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>/=(llp b) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> / b; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">int</span> b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span> * llp(<span class="number">2</span>)[b]; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>&lt;&lt;=(<span class="keyword">int</span> b) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> &lt;&lt; b; &#125;</span><br><span class="line">    llp <span class="keyword">operator</span>&gt;&gt;(<span class="keyword">int</span> b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span> / llp(<span class="number">2</span>)[b]; &#125;</span><br><span class="line">    llp &amp;<span class="keyword">operator</span>&gt;&gt;=(<span class="keyword">int</span> b) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> &gt;&gt; b; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(ll b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> mod(b) == v; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v == b.v; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(ll b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> !(*<span class="keyword">this</span> == b); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> !(*<span class="keyword">this</span> == b); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &lt; b.v; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;=(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &lt;= b.v; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &gt; b.v; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;=(llp b) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &gt;= b.v; &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>&lt;(ll a, llp b) &#123; <span class="keyword">return</span> b &gt; a; &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>&lt;=(ll a, llp b) &#123; <span class="keyword">return</span> b &gt;= a; &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>&gt;(ll a, llp b) &#123; <span class="keyword">return</span> b &lt; a; &#125;</span><br><span class="line">    <span class="keyword">friend</span> llp <span class="keyword">operator</span>&gt;=(ll a, llp b) &#123; <span class="keyword">return</span> b &lt;= a; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">var</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> v; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">mod</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> p; &#125;</span><br><span class="line">    <span class="function">llp <span class="title">sqd</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> *<span class="keyword">this</span> * *<span class="keyword">this</span>; &#125;</span><br><span class="line">    <span class="function">llp <span class="title">inv</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> ~*<span class="keyword">this</span>; &#125;</span><br><span class="line">    <span class="function">llp <span class="title">pow</span><span class="params">(ll b)</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> *<span class="keyword">this</span> ^ b; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;该模板为作者原创.&lt;/p&gt;
&lt;h2 id=&quot;问题引入&quot;&gt;问题引入&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;请输出对 &lt;span class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 取模后的结果.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;请输出模 &lt;span class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 意义下的结果.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;最终答案可以表示为 &lt;span class=&quot;math inline&quot;&gt;&#92;(a/b&#92;)&lt;/span&gt;, 请输出
&lt;span class=&quot;math inline&quot;&gt;&#92;(a&#92;cdot b^{-1}&#92;bmod p&#92;)&lt;/span&gt;, 其中 &lt;span
class=&quot;math inline&quot;&gt;&#92;(b^{-1}&#92;)&lt;/span&gt; 是 &lt;span
class=&quot;math inline&quot;&gt;&#92;(b&#92;)&lt;/span&gt; 对模 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 的乘法逆元.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在我们做题的时候, 经常会遇到输出在模 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 意义下的结果的题目.
上面三种是经典的这种要求的说法.&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://sheauhawjang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="原创" scheme="https://sheauhawjang.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="模板" scheme="https://sheauhawjang.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>数学分析读书报告(2020年春)</title>
    <link href="https://sheauhawjang.github.io/2020/04/29/Mathematical%20Analysis%20Reading%20Report%202020%20Spring/"/>
    <id>https://sheauhawjang.github.io/2020/04/29/Mathematical%20Analysis%20Reading%20Report%202020%20Spring/</id>
    <published>2020-04-29T11:17:15.000Z</published>
    <updated>2020-04-30T14:01:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="math display">\[\newcommand{\isum}[2]{\sum\limits_{ #2 = #1 }^{\infty}}\newcommand{\iprod}[2]{\prod\limits_{ #2 = #1 }^{\infty}}\newcommand{\lsum}[3]{\sum\limits_{ #2 = #1 }^{ #3 }}\newcommand{\lprod}[3]{\prod\limits_{ #2 = #1 }^{ #3 }}\newcommand{\llim}[2]{\lim\limits_{ #1 \rightarrow #2 }}\newcommand{\brac}[1]{\left( #1 \right)}\newcommand{\lrac}[1]{\left\{ #1 \right\}}\newcommand{\flor}[1]{\left\lfloor #1 \right\rfloor}\newcommand{\ceil}[1]{\left\lceil #1 \right\rceil}\newcommand{\agle}[1]{\left\langle #1 \right\rangle}\newcommand{\abs}[1]{\left| #1 \right|}\newcommand{\abss}[1]{\left\| #1 \right\|}\newcommand{\id}[1]{\text{( #1 ) }}\newcommand{\mathbs}[1]{\boldsymbol{ #1 }}\newcommand{\mvec}[1]{\overrightarrow{ #1 }}\newcommand{\mbar}[1]{\overline{ #1 }}\newcommand{\bigf}{\displaystyle}\newcommand{\dif}{\mathrm{d}}\newcommand{\ddif}[1]{\frac{\dif}{\dif #1 }}\newcommand{\cddif}[1]{\cfrac{\dif}{\dif #1 }}\newcommand{\eset}{\varnothing}\newcommand{\sh}{\mathrm{sh\ }}\newcommand{\ch}{\mathrm{ch\ }}\newcommand{\Imm}{\mathrm{Im\ }}\newcommand{\Ker}{\mathrm{Ker\ }}\newcommand{\rank}{\mathrm{rank\ }}\newcommand{\diag}{\mathrm{diag\ }}\newcommand{\sgn}{\mathrm{sgn\ }}\newcommand{\simeqq}{\cong}\newcommand{\tdeg}{^\circ}\newcommand{\roku}{\partial}\newcommand{\bksl}{\backslash}\newcommand{\mrm}{\mathrm}\newcommand{\mbb}{\mathbb}\newcommand{\mbf}{\mathbf}\newcommand{\mscr}{\mathscr}\newcommand{\mbs}[1]{\boldsymbol{ #1 }}\newcommand{\kaz}[1]{\begin{cases} #1 \end{cases}}\newcommand{\pmat}[1]{\begin{pmatrix} #1 \end{pmatrix}}\text{数学分析读书报告(2020年春)}\]</span></p><p>在第一学期的数学分析课程中, 我们定义了一整套实数系统.当时我们先用皮亚诺公理和集合论两种方式定义了自然数集,然后再用自然数对的商集定义了整数集, 用整数对的集定义了有理数集,最后又用戴德金分割定义了实数. 然而最近读到了卓里奇的《数学分析》,在这本书里, 作者用了另一种方式定义了这一套系统: 先给出实数集的公理系统,之后在逐步导出自然数集, 整数集和有理数集.</p><a id="more"></a><p>既然是从实数集开始, 那么作者是如何定义实数集的呢?下面就是实数集的定义:</p><h3 id="实数集">实数集</h3><p>满足以下四组条件的集合 <span class="math inline">\(\mbb R\)</span>叫做<strong>实数集</strong>, 其中的元素叫做<strong>实数</strong>,这些条件构成了实数集的公理系统:</p><h4 id="加法公理">1. 加法公理</h4><p>确定了一个映射(<strong>加法</strong>) <span class="math display">\[+:\mbb R\times\mbb R\rightarrow\mbb R\]</span> s.t. <span class="math inline">\(\mbb R\)</span> 中任意二元<span class="math inline">\(x,y\)</span> 之有序对 <spanclass="math inline">\((x,y)\)</span> 都有某元素 <spanclass="math inline">\(x+y\in\mbb R\)</span> 与之对应, 称 <spanclass="math inline">\(x+y\)</span> 为 <spanclass="math inline">\(x,y\)</span> 之和. 该映射亦满足以下条件:</p><p><span class="math inline">\(1_+\)</span>.存在<strong>加法零元</strong> <span class="math inline">\(0\)</span>s.t. <span class="math inline">\(\forall x\in\mbb R\)</span> 都有 <spanclass="math display">\[x+0=0+x=x\]</span></p><p><span class="math inline">\(2_+\)</span>. <spanclass="math inline">\(\forall x\in\mbb R\)</span>,存在<strong>负元</strong> <span class="math inline">\(-x\in\mbbR\)</span> s.t. <span class="math display">\[x+(-x)=(-x)+x=0\]</span></p><p><span class="math inline">\(3_+\)</span>. 运算 <spanclass="math inline">\(+\)</span> 是<strong>结合的</strong>, 即 <spanclass="math inline">\(\forall x,y,z\in\mbb R\)</span> 满足 <spanclass="math display">\[x+(y+z)=(x+y)+z\]</span></p><p><span class="math inline">\(4_+\)</span>. 运算 <spanclass="math inline">\(+\)</span> 是<strong>交换的</strong>, 即 <spanclass="math inline">\(\forall x,y\in\mbb R\)</span> 满足 <spanclass="math display">\[x+y=y+x\]</span></p><blockquote><p><strong>群</strong></p><p>装备了满足上述 <span class="math inline">\(1_+,2_+,3_+\)</span>条件的运算的集合称为<strong>群</strong>.</p><p>如果这个运算叫加法, 那么这个群称为加群.</p><p>如果这个运算是交换的, 即满足条件 <spanclass="math inline">\(4_+\)</span>,那么这个群称为<strong>交换群</strong>或 Abel 群.</p></blockquote><blockquote><p><span class="math inline">\(\mbb R\)</span> 关于加法运算是 Abel群.</p></blockquote><h4 id="乘法公理">2. 乘法公理</h4><p>确定了一个映射(<strong>乘法</strong>) <span class="math display">\[\bullet:\mbb R\times\mbb R\rightarrow\mbb R\]</span> s.t. <span class="math inline">\(\mbb R\)</span> 中任意二元<span class="math inline">\(x,y\)</span> 之有序对 <spanclass="math inline">\((x,y)\)</span> 都有某元素 <spanclass="math inline">\(x\cdot y\in\mbb R\)</span> 与之对应, 称 <spanclass="math inline">\(x\cdot y\)</span> 为 <spanclass="math inline">\(x,y\)</span> 之积. 该映射亦满足以下条件:</p><p><span class="math inline">\(1_\bullet\)</span>.存在<strong>单位元</strong> <span class="math inline">\(1\)</span> s.t.<span class="math inline">\(\forall x\in\mbb R\bksl0\)</span> 都有 <spanclass="math display">\[x\cdot1=1\cdot x=x\]</span></p><p><span class="math inline">\(2_\bullet\)</span>. <spanclass="math inline">\(\forall x\in\mbb R\bksl0\)</span>,存在<strong>逆元</strong> <span class="math inline">\(x^{-1}\in\mbbR\bksl0\)</span> s.t. <span class="math display">\[x\cdot x^{-1}=x^{-1}\cdot x=0\]</span></p><p><span class="math inline">\(3_\bullet\)</span>. 运算 <spanclass="math inline">\(\bullet\)</span> 是<strong>结合的</strong>, 即<span class="math inline">\(\forall x,y,z\in\mbb R\)</span> 满足 <spanclass="math display">\[x\cdot(y\cdot z)=(x\cdot y)\cdot z\]</span></p><p><span class="math inline">\(4_\bullet\)</span>. 运算 <spanclass="math inline">\(\bullet\)</span> 是<strong>交换的</strong>, 即<span class="math inline">\(\forall x,y\in\mbb R\)</span> 满足 <spanclass="math display">\[x\cdot y=y\cdot x\]</span></p><blockquote><p><span class="math inline">\(\mbb R\bksl0\)</span> 关于乘法运算是 Abel群.</p></blockquote><h4 id="加法与乘法">1-2. 加法与乘法</h4><p>乘法对加法有分配性: <span class="math inline">\(\forall x,y,z\in\mbbR\)</span>, <span class="math display">\[(x+y)\cdot z=x\cdot z+y\cdot z\]</span> 由于乘法是交换的, 左分配律亦成立.</p><blockquote><p><strong>域</strong></p><p>若一个集合上定义了两种运算, 它们满足上述的所有公理,就称这个集合为一个<strong>代数域</strong>, 简称<strong>域</strong>.</p></blockquote><h4 id="序公理">3. 序公理</h4><p><span class="math inline">\(\mbb R\)</span>的元素间有<strong>不等关系</strong> <spanclass="math inline">\(\le\)</span>, 对 <span class="math inline">\(\mbbR\)</span> 的元素 <span class="math inline">\(x,y\)</span>, 或满足 <spanclass="math inline">\(x\le y\)</span>, 或不满足 <spanclass="math inline">\(x\le y\)</span>. 同时还满足以下条件:</p><p><span class="math inline">\(0_\le\)</span>. <spanclass="math inline">\(\forall x\in\mbb R\)</span>, <spanclass="math inline">\(x\le x\)</span>. (反身性)</p><p><span class="math inline">\(1_\le\)</span>. 若 <spanclass="math inline">\(x\le y\)</span> 且 <spanclass="math inline">\(y\le x\)</span>, 则 <spanclass="math inline">\(x=y\)</span>. (反对称性)</p><p><span class="math inline">\(2_\le\)</span>. 若 <spanclass="math inline">\(x\le y\)</span> 且 <spanclass="math inline">\(y\le z\)</span>, 则 <spanclass="math inline">\(x\le z\)</span>. (传递性)</p><p><span class="math inline">\(3_\le\)</span>. <spanclass="math inline">\(\forall x,y\in\mbb R\)</span>, <spanclass="math inline">\(x\le y\)</span> 或 <spanclass="math inline">\(y\le x\)</span>.</p><blockquote><p><strong>序</strong></p><p>如果某个集合的某些元素间有满足公理 <spanclass="math inline">\(0_\le,1_\le,2_\le\)</span> 的二元关系,就称该集合为<strong>偏序集</strong>.</p><p>若偏序集满足 <span class="math inline">\(3_\le\)</span>,即任意两个元素间均有这种关系,就称此集合为<strong>线性序集</strong>.<em>（个人更喜欢<strong>全序集</strong><sup>[2]</sup>这个名字）</em></p></blockquote><blockquote><p><span class="math inline">\(\mbb R\)</span> 关于不等关系是全序集.</p></blockquote><h4 id="加法与序">1-3. 加法与序</h4><p><span class="math inline">\(\forall x,y,z\in\mbb R\)</span>, 若 <spanclass="math inline">\(x\le y\)</span>, 则 <spanclass="math inline">\(x+z\le y+z\)</span>.</p><h4 id="乘法与序">2-3. 乘法与序</h4><p><span class="math inline">\(\forall x,y\in\mbb R\)</span>,若 <spanclass="math inline">\(0\le x\)</span> 且 <spanclass="math inline">\(0\le y\)</span>, 则 <spanclass="math inline">\(0\le x\cdot y\)</span>.</p><h4 id="完备公理">4. 完备公理</h4><p>若 <span class="math inline">\(X,Y\)</span> 是 <spanclass="math inline">\(\mbb R\)</span> 的非空子集, 且有性质: 若 <spanclass="math inline">\(\forall x\in X,y\in Y\)</span>, 都有 <spanclass="math inline">\(x\le y\)</span>; 那么 <spanclass="math inline">\(\exists c\in\mbb R\)</span>, s.t. <spanclass="math inline">\(\forall x\in X,y\in Y\)</span> 都有 <spanclass="math inline">\(x\le c\le y\)</span>.</p><p>以上便是实数集的公理系统了. 有了这套公理系统, 就构造出了一个抽象系统.但是, 类似皮亚诺公理存在的问题一样, 书中也提出了两个问题:</p><p>无矛盾性: 这套公理是否相容? 是否真的存在满足上述公理系统的集合?</p><p>范畴性: 这组公理确定的数学对象是否唯一?任意两个不同的实现是否同构?</p><p>关于无矛盾性的问题, 书中用集合论公理系统出发建立自然数集,然后是有理数集, 最后是是实数集的描述来证明的.感觉起来像是我们之前学习的那一种方式. 范畴性的问题似乎是构造两个实数模型<span class="math inline">\(\mbb R\)</span> 到 <spanclass="math inline">\(\mbb R&#39;\)</span> 的同构映射,但是我想不到比较合适的方法定义这个映射.</p><p>下面是实数的一些代数性质. 书中对部分定理进行了证明. 由于证明很简单,这里不做赘述.</p><h3 id="加法公理的推论">加法公理的推论</h3><p><span class="math inline">\(1\tdeg\)</span> 实数集中有唯一的零元.</p><p><span class="math inline">\(2\tdeg\)</span>实数集中每个元素有唯一的负元.</p><p><span class="math inline">\(3\tdeg\)</span> 方程 <spanclass="math inline">\(a+x=b\)</span> 在 <span class="math inline">\(\mbbR\)</span> 中有唯一解 <span class="math inline">\(x=b+(-a)\)</span>(通常表示为 <span class="math inline">\(b-a\)</span>).</p><h3 id="乘法公理的推论">乘法公理的推论</h3><p><span class="math inline">\(1\tdeg\)</span>实数集中有唯一的单位元.</p><p><span class="math inline">\(2\tdeg\)</span> 实数集中每个 <spanclass="math inline">\(x\ne0\)</span>, 有唯一的逆元 <spanclass="math inline">\(x^{-1}\)</span>.</p><p><span class="math inline">\(3\tdeg\)</span> 方程 <spanclass="math inline">\(a\cdot x=b\)</span>, 当 <spanclass="math inline">\(a\in\mbb R\bksl0\)</span> 时, 有唯一解 <spanclass="math inline">\(x=b\cdot a^{-1}\)</span>.</p><h3 id="加法与乘法的推论">加法与乘法的推论</h3><p><span class="math inline">\(1\tdeg\)</span> <spanclass="math inline">\(\forall x\in\mbb R\)</span>, <spanclass="math inline">\(x\cdot0=0\cdot x=0\)</span>.</p><p><span class="math inline">\(2\tdeg\)</span> 若 <spanclass="math inline">\(x\cdot y=0\)</span>, 则 <spanclass="math inline">\(x=0\)</span> 或 <spanclass="math inline">\(y=0\)</span>.</p><p><span class="math inline">\(3\tdeg\)</span> <spanclass="math inline">\(\forall x\in\mbb R\)</span>, <spanclass="math inline">\(-x=(-1)\cdot x\)</span>.</p><p><span class="math inline">\(4\tdeg\)</span> <spanclass="math inline">\(\forall x\in\mbb R\)</span>, <spanclass="math inline">\((-1)\cdot(-x)=x\)</span>.</p><p><span class="math inline">\(3\tdeg\)</span> <spanclass="math inline">\(\forall x\in\mbb R\)</span>, <spanclass="math inline">\((-x)\cdot(-x)=x\cdot x\)</span>.</p><h3 id="序公理的推论">序公理的推论</h3><blockquote><p><strong>定义</strong></p><p><span class="math inline">\(x\le y\)</span> 可以写作 <spanclass="math inline">\(y\ge x\)</span>.</p><p><span class="math inline">\(x\ne y\)</span> 时, <spanclass="math inline">\(x\le y\)</span> 可以写成 <spanclass="math inline">\(x&lt;y\)</span> 或 <spanclass="math inline">\(y&gt;x\)</span>,此时称之为<strong>严格不等式</strong>.</p></blockquote><p><span class="math inline">\(1\tdeg\)</span> <spanclass="math inline">\(\forall x,y\in\mbb R\)</span>, <spanclass="math display">\[x&lt;y,x=y,x&gt;y\]</span> 恰有一种关系成立.</p><p><span class="math inline">\(2\tdeg\)</span> <spanclass="math inline">\(\forall x,y,z\in\mbb R\)</span>: 若 <spanclass="math inline">\(x&lt;y\)</span> 且 <spanclass="math inline">\(y\le z\)</span>, 则 <spanclass="math inline">\(x&lt;z\)</span>; 若 <spanclass="math inline">\(x\le y\)</span> 且 <spanclass="math inline">\(y&lt;z\)</span>, 则 <spanclass="math inline">\(x&lt;z\)</span>.</p><h3 id="序与加法及减法">序与加法及减法</h3><p><span class="math inline">\(1\tdeg\)</span> <spanclass="math inline">\(0&lt;1\)</span>.</p><p><span class="math inline">\(2\tdeg\)</span> 若 <spanclass="math inline">\(0&lt;x\)</span> 则 <spanclass="math inline">\(0&lt;x^{-1}\)</span>. 若 <spanclass="math inline">\(0&lt;x\)</span>, <spanclass="math inline">\(x&lt;y\)</span>, 则 <spanclass="math inline">\(0&lt;y^{-1}\)</span>, <spanclass="math inline">\(y^{-1}&lt;x^{-1}\)</span>.</p><p>由完备定理, 我们可以得到关于上下界的一些比较好的性质.首先有一些关于上下界的定义:</p><h3 id="上界与下界">上界与下界</h3><p>设 <span class="math inline">\(X\subseteq\mbb R\)</span>, 若 <spanclass="math inline">\(\exists c\in\mbb R\)</span>, s.t. <spanclass="math inline">\(\forall x\in X\)</span> 都有 <spanclass="math inline">\(x\le c\)</span>, 就称 <spanclass="math inline">\(X\)</span> 是<strong>上有界集</strong>, <spanclass="math inline">\(c\)</span> 是 <spanclass="math inline">\(X\)</span> 的的一个<strong>上界</strong>.</p><p>将上述定义中的 <span class="math inline">\(\le\)</span> 改为 <spanclass="math inline">\(\ge\)</span>,就得到了<strong>下有界集</strong>和<strong>下界</strong>的定义.</p><p>既有上界又有下界的集合叫做<strong>有界集</strong>.</p><h3 id="极大元与极小元">极大元与极小元</h3><p>设 <span class="math inline">\(X\subseteq\mbb R,a\in X\)</span>, 若<span class="math inline">\(\forall x\in X\)</span>, 都有 <spanclass="math inline">\(x\le a\)</span>, 那么称 <spanclass="math inline">\(a\)</span> 为 <spanclass="math inline">\(x\)</span>的<strong>最大元</strong>或<strong>极大元</strong>, 记做 <spanclass="math inline">\(\max X\)</span>.</p><p>将上述定义中的 <span class="math inline">\(\le\)</span> 改为 <spanclass="math inline">\(\ge\)</span>,就得到了<strong>极小元</strong>的定义, 记做 <spanclass="math inline">\(\min X\)</span>.</p><blockquote><p>一个集合不一定存在极大元或极小元. 极大元或极小元若存在,则只能有一个.</p></blockquote><h3 id="上确界与下确界">上确界与下确界</h3><p>设 <span class="math inline">\(X\subseteq\mbb R\)</span>: <spanclass="math inline">\(X\)</span> 的上界中的最小者称为 <spanclass="math inline">\(X\)</span> 的<strong>上确界</strong>, 记做 <spanclass="math inline">\(\sup X\)</span>. <spanclass="math inline">\(X\)</span> 的下界中的最大者称为 <spanclass="math inline">\(X\)</span> 的<strong>下确界</strong>, 记做 <spanclass="math inline">\(\inf X\)</span>. 即 <span class="math display">\[\begin{aligned}\sup X&amp;:=\min\lrac{c\in\mbb R|\forall x\in X,x\le c}\\\inf X&amp;:=\min\lrac{c\in\mbb R|\forall x\in X,c\le x}\\\end{aligned}\]</span></p><p>通过这种定义得到的上确界和下确界的存在性是未知的.但是我们由下面的定理可知上下确界是一定存在的.</p><h4 id="上确界原理">上确界原理</h4><p>实数集的任何非空有上界的子集有唯一的上确界.</p><p><strong>证明:</strong> 设 <span class="math inline">\(X\)</span>是给定的集合, <span class="math inline">\(Y=\lrac{y\in\mbb R|\forallx\in X,x\le y}\)</span> 是上界构成的集合. 由定义可知, <spanclass="math inline">\(\forall x\in X,y\in Y\)</span>, <spanclass="math inline">\(x\le y\)</span>. 由题意知, <spanclass="math inline">\(x\ne\eset,y\ne\eset\)</span>. 由完备公理, <spanclass="math inline">\(\exists c\in\mbb R\)</span> s.t. <spanclass="math inline">\(\forall x\in X,y\in Y\)</span>, <spanclass="math inline">\(x\le c\le y\)</span>. 于是 <spanclass="math inline">\(c\)</span> 是 <spanclass="math inline">\(x\)</span> 的上界, <spanclass="math inline">\(c\in Y\)</span>. 于是 <spanclass="math inline">\(c\)</span> 是 <spanclass="math inline">\(Y\)</span> 的极小元, <spanclass="math inline">\(c=\min Y=\sup X\)</span>. 证毕.</p><p>类似的, 可以有下确界原理:实数集的任何非空有下界的子集有唯一的下确界.</p><p>至此, 我们定义了实数集的公理系统, 似乎这篇报告到这里就可以结束了.但是我们回顾一下之前我们定义实数集的过程: 自然数集, 整数集, 有理数集,实数集. 但是现在按上述定义, 我们只定义了实数集! 前面的自然数集,整数集和有理数集都还没有定义! 也就是说, 我们的工作还没有完成!下面就开始定义其他的那些集合.</p><p>在定义自然数集之前, 先定义<strong>归纳集</strong>:</p><h3 id="归纳集">归纳集</h3><p>设 <span class="math inline">\(X\subseteq\mbb R\)</span>, 若 <spanclass="math inline">\(\forall x0\in X\)</span>, 有 <spanclass="math inline">\(x+1\in X\)</span>, 就称 <spanclass="math inline">\(X\)</span> 为一个<strong>归纳集</strong>.</p><blockquote><p>例如: <span class="math inline">\(\mbb R\)</span> 和 <spanclass="math inline">\(\mbb R_+\)</span> 都是归纳集.</p></blockquote><h4 id="命题">命题</h4><p>任意多个归纳集 <span class="math inline">\(X_\alpha\)</span> 之交集<span class="math inline">\(\bigf X=\bigcap_{\alpha\inA}X_\alpha\)</span> 若非空, 则 <span class="math inline">\(X\)</span>也是归纳集.</p><p><strong>证明:</strong> <span class="math inline">\(\forall x\inX\)</span>: <span class="math inline">\(\forall\alpha\in A\)</span>,<span class="math inline">\(x\in X_\alpha\)</span>. 于是 <spanclass="math inline">\(\forall\alpha\in A\)</span>, <spanclass="math inline">\(x+1\in X_\alpha\)</span>. 于是 <spanclass="math inline">\(x+1\in X\)</span>. <spanclass="math inline">\(X\)</span> 是归纳集. 证毕.</p><h3 id="自然数集">自然数集</h3><p>包含数 <span class="math inline">\(1\)</span>的最小归纳集叫<strong>自然数集</strong>, 用 <spanclass="math inline">\(\mbb N\)</span> 表示,其元素叫<strong>自然数</strong>.</p><blockquote><p>容易发现, 自然数集就是由 <span class="math inline">\(1\)</span>,<span class="math inline">\(1+1\)</span>, <spanclass="math inline">\((1+1)+1\)</span> 组成的集合.</p></blockquote><h4 id="数学归纳原理">数学归纳原理</h4><p>若 <span class="math inline">\(E\subseteq\mbb N\)</span>, <spanclass="math inline">\(1\in E\)</span>, 且 <spanclass="math inline">\(\forall x\in E\)</span>, <spanclass="math inline">\(x+1\in E\)</span>. 则 <spanclass="math inline">\(E=\mbb N\)</span>.</p><p><strong>证明:</strong> 由归纳集定义, <spanclass="math inline">\(E\)</span> 是归纳集. 又 <spanclass="math inline">\(1\in E\)</span>, 由自然数集定义, <spanclass="math inline">\(\mbb N\subseteq E\)</span>. 又 <spanclass="math inline">\(E\subseteq\mbb N\)</span>, 于是 <spanclass="math inline">\(E=\mbb N\)</span>. 证毕.</p><h3 id="自然数集的部分性质">自然数集的部分性质</h3><p><span class="math inline">\(1\tdeg\)</span>自然数的和与积是自然数.</p><p><strong>证明:</strong> <span class="math display">\[A:=\lrac{n\in\mbb N|\forall m\in\mbb N,m+n\in\mbb N}\subseteq\mbb N\]</span> 由自然数定义, <span class="math inline">\(1\in A\)</span>.<span class="math inline">\(\forall n\in A\)</span>, <spanclass="math inline">\(\forall m\in\mbb N\)</span>, <spanclass="math inline">\(m+n\in\mbb N\)</span>, <spanclass="math inline">\(m+(n+1)=(m+n)+1\in\mbb N\)</span>. 于是 <spanclass="math inline">\(n+1\in A\)</span>. 于是由数学归纳原理 <spanclass="math inline">\(A=\mbb N\)</span>. 于是自然数的和是自然数. <spanclass="math display">\[B:=\lrac{n\in\mbb N|\forall m\in\mbb N,m\cdot n\in\mbb N}\subseteq\mbb N\]</span> 由 <span class="math inline">\(1\)</span> 的定义, <spanclass="math inline">\(1\in B\)</span>. <spanclass="math inline">\(\forall n\in B\)</span>, <spanclass="math inline">\(\forall m\in\mbb N\)</span>, <spanclass="math inline">\(m\cdot n\in\mbb N\)</span>, <spanclass="math inline">\(m\cdot(n+1)=m\cdot n+m\in\mbb N\)</span>. 于是<span class="math inline">\(n+1\in B\)</span>. 于是由数学归纳原理 <spanclass="math inline">\(B=\mbb N\)</span>. 于是自然数的积是自然数.证毕.</p><p><em>用类似的方法可以证明 <spanclass="math inline">\(2\tdeg-5\tdeg\)</span>：</em></p><p><span class="math inline">\(2\tdeg\)</span> 若 <spanclass="math inline">\(n\in\mbb N\)</span>, <spanclass="math inline">\(n\ne1\)</span>, 则 <spanclass="math inline">\(n-1\in\mbb N\)</span>.</p><p><span class="math inline">\(3\tdeg\)</span> <spanclass="math inline">\(\forall n\in\mbb N\)</span>, <spanclass="math inline">\(\lrac{x\in\mbb N|n&lt;x}\)</span> 有极小元 <spanclass="math inline">\(n+1\)</span>.</p><p><span class="math inline">\(4\tdeg\)</span> <spanclass="math inline">\(\forall m,n\in\mbb N\)</span>, 若 <spanclass="math inline">\(n&lt;m\)</span>, 则 <spanclass="math inline">\(n+1\le m\)</span>.</p><p><span class="math inline">\(5\tdeg\)</span> 若 <spanclass="math inline">\(n\in\mbb N\)</span>, 则没有 <spanclass="math inline">\(x\in\mbb N\)</span> 能满足 <spanclass="math inline">\(n&lt;x&lt;n+1\)</span>.</p><p><span class="math inline">\(6\tdeg\)</span>自然数集的任何非空子集都有最小元.</p><p><strong>证明:</strong> 设 <span class="math inline">\(M\subseteq\mbbN\)</span>, <span class="math inline">\(M\ne\eset\)</span>. 若 <spanclass="math inline">\(1\in M\)</span>, 则 <spanclass="math inline">\(\min M=1\)</span>. 否则, 设 <spanclass="math inline">\(E=\mbb N\bksl M\)</span>, <spanclass="math inline">\(1\in E\)</span>. 在 <spanclass="math inline">\(E\)</span> 中必能找到自然数 <spanclass="math inline">\(n\in E\)</span> s.t. 不超过 <spanclass="math inline">\(n\)</span> 的自然数都在 <spanclass="math inline">\(E\)</span> 中而 <span class="math inline">\(n+1\inM\)</span>. 否则 <span class="math inline">\(1\in E\subseteq\mbbN\)</span>, 当 <span class="math inline">\(n\in E\)</span> 时, <spanclass="math inline">\(n+1\in E\)</span>, 于是 <spanclass="math inline">\(E=\mbb N\)</span>, <spanclass="math inline">\(M=\eset\)</span>, 矛盾. <spanclass="math inline">\(n+1\in M\)</span> 即 <spanclass="math inline">\(M\)</span> 的最小元, 因为 <spanclass="math inline">\(n\)</span> 与 <spanclass="math inline">\(n+1\)</span> 之间没有自然数.</p><blockquote><p><del>其实我不是很能理解这个证明, 有点循环论证的感觉.</del></p></blockquote><h3 id="整数">整数</h3><p>自然数集, 自然数的相反数的集合, 以及 <spanclass="math inline">\(\lrac0\)</span> 的并集叫做<strong>整数集</strong>,记做 <span class="math inline">\(\mbb Z\)</span>.</p><p>整数对加法和乘法运算封闭. <span class="math inline">\(\mbb Z\)</span>关于加法运算构成 Abel 群.</p><p>有了整数的定义, 就能得到初等数论中的关于整数的一些性质,这里不做赘述.</p><p>对比之前我们由自然数得到整数的过程, 我们使用的是 <spanclass="math inline">\(\mbb N\times\mbb N\)</span> 的商集得到的 <spanclass="math inline">\(\mbb Z\)</span> 的. 但是现在我们先定义了 <spanclass="math inline">\(\mbb R\)</span>, 于是就有了相反数, 在定义 <spanclass="math inline">\(\mbb Z\)</span> 时就简洁了许多.</p><h3 id="有理数">有理数</h3><p>形如 <span class="math inline">\(m\cdot n^{-1}\)</span>的数叫<strong>有理数</strong>, 其中 <spanclass="math inline">\(m,n\in\mbb Z\)</span>.有理数构成的集合叫<strong>有理数集</strong>, 用 <spanclass="math inline">\(\mbb Q\)</span> 表示.</p><p>有理数 <span class="math inline">\(q=m\cdot n^{-1}\)</span>也可以写成有理分数 <span class="math inline">\(\bigf\frac{m}n\)</span>的形式.</p><p>“小学生都知道”, <span class="math inline">\(\forall k\in\mbbZ\)</span>, 若 <span class="math inline">\(k\ne0\)</span>, 则 <spanclass="math inline">\(\bigf\frac{m}{n}=\frac{mk}{nk}\)</span>.下面简单地证明这件事: 由结合性, <spanclass="math inline">\((nk)(k^{-1}n^{-1})=1\)</span>, <spanclass="math inline">\(k^{-1}n^{-1}=(nk)^{-1}\)</span>. 于是 <spanclass="math inline">\((mk)(nk)^{-1}=mk(k^{-1}n^{-1})=m\cdotn^{-1}\)</span>. 于是 <span class="math inline">\(\forall m\cdotn^{-1}\)</span>, <span class="math inline">\(k:=\gcd(m,n)\)</span>, 于是<span class="math inline">\(m=m&#39;k,n=n&#39;k\)</span>, 其中 <spanclass="math inline">\(m&#39;,n&#39;\in\mbb Z\)</span>, <spanclass="math inline">\(\gcd(m,n)=1\)</span>. 由小学生都知道的结论, <spanclass="math inline">\(m\cdot n^{-1}=m&#39;\cdot n&#39;^{-1}\)</span>.于是每个有理数经过约分后, 都能用互素的整数有序对给出.</p><h3 id="无理数">无理数</h3><p>不是有理数的实数叫<strong>无理数</strong>.</p><p>下面构造一个无理数 <span class="math inline">\(\sqrt2\)</span>以证明无理数是存在的.</p><p>构造集合 <span class="math inline">\(X=\lrac{x|x^2&lt;2}\)</span>,<span class="math inline">\(Y=\lrac{y|2&lt;y^2}\)</span>. 显然, <spanclass="math inline">\(1\in X,2\in Y\)</span>, 且 <spanclass="math inline">\(\forall x\in X,y\in Y\)</span>, <spanclass="math inline">\(x\le y\)</span>. 于是由完备公理, <spanclass="math inline">\(\exists t\in\mbb R\)</span> s.t. <spanclass="math inline">\(\forall x\in X,y\in Y\)</span>, <spanclass="math inline">\(x\le t\le y\)</span>. 记 <spanclass="math inline">\(p=2-t^2\)</span>, <spanclass="math inline">\(a=t+\cfrac{p}{3t}\)</span>. 由于 <spanclass="math inline">\(1\in x,2\in y\)</span>, 于是 <spanclass="math inline">\(1\le t\le2\)</span>, 于是 <spanclass="math inline">\(-2\le p\le1\)</span>. <spanclass="math inline">\(1\le t\le t^2\)</span>, <spanclass="math inline">\(p^2\le p\)</span>.</p><p>若 <span class="math inline">\(t^2&lt;2\)</span>, 则 <spanclass="math inline">\(p&gt;0\)</span>, <spanclass="math inline">\(a&gt;t\)</span>. <span class="math display">\[a^2=t^2+\frac23p+\frac{p^2}{9t^2}\le t^2+\frac23p+\frac19p&lt;t^2+p=2\]</span></p><p>于是 <span class="math inline">\(a^2\in X\)</span>, <spanclass="math inline">\(a^2&gt;t^2\)</span>, 矛盾.</p><p>若 <span class="math inline">\(t^2&gt;2\)</span>, 则 <spanclass="math inline">\(p&lt;0\)</span>, <spanclass="math inline">\(a&lt;t\)</span>. <span class="math display">\[a^2=t^2+\frac23p+\frac{p^2}{9t^2}\ge t^2+\frac23p&gt;t^2+p=2\]</span> 于是 <span class="math inline">\(a^2\in Y\)</span>, <spanclass="math inline">\(a^2&lt;t^2\)</span>, 矛盾.</p><p>于是 <span class="math inline">\(t^2=2\)</span>, 也就是所谓的 <spanclass="math inline">\(\sqrt2:=t\)</span> 是存在的.下面证明 <spanclass="math inline">\(\sqrt2\)</span> 是无理数. 若 <spanclass="math inline">\(\sqrt2\)</span> 是有理数, 设 <spanclass="math inline">\(\sqrt2=\cfrac{m}n\)</span>, <spanclass="math inline">\(m,n\in\mbb Z\)</span>, <spanclass="math inline">\(\gcd(m,n)=1\)</span>. 于是 <spanclass="math inline">\(m^2=2n^2\)</span>. 由 <spanclass="math inline">\(2\mid m^2\)</span>, <spanclass="math inline">\(2\mid m\)</span>. 于是设 <spanclass="math inline">\(m=2k\)</span>, <spanclass="math inline">\((2k)^2=2n^2\)</span>, <spanclass="math inline">\(2k^2=n^2\)</span>, <spanclass="math inline">\(2\mid n\)</span>, 于是 <spanclass="math inline">\(\gcd(m,n)\ge2\)</span>, 矛盾. 于是 <spanclass="math inline">\(\sqrt2\)</span> 是无理数.</p><h3 id="代数数与超越数">代数数与超越数</h3><p>一个实数若是某个整系数多项式代数方程的根,那么这个实数叫做<strong>代数数</strong>,否则叫做<strong>超越数</strong>. <spanclass="math inline">\(\sqrt2\)</span> 是方程 <spanclass="math inline">\(x^2=2\)</span> 的根, 是代数数. <spanclass="math inline">\(e\)</span><sup>[3]</sup> 和 <spanclass="math inline">\(\pi\)</span><sup>[4]</sup> 都是超越数,结论是广为人知的, 但是证明很复杂, 在参考资料中有证明. 总之,代数数和超越数都是存在的.</p><h3 id="完备公理的应用">完备公理的应用</h3><p>前面的结论的证明中, 只有证明上下确界原理和 <spanclass="math inline">\(\sqrt2\)</span> 的存在性中使用到了完备公理.关于完备公理有下述结论:</p><p><span class="math inline">\(1\tdeg\)</span>自然数集的任何非空有界子集有极大元.</p><p><strong>证明:</strong> 设 <span class="math inline">\(E\subseteq\mbbN\)</span> 是一不空有界集, 记 <span class="math inline">\(s:=\supE\in\mbb R\)</span>. 由于 <span class="math inline">\(s\)</span>是上确界, 于是 <span class="math inline">\(s-1\)</span> 不是 <spanclass="math inline">\(E\)</span> 的上界, 于是一定 <spanclass="math inline">\(\exists n\in E\)</span>, s.t. <spanclass="math inline">\(s-1&lt;n\)</span>. 于是 <spanclass="math inline">\(s&lt;n+1\)</span>. <spanclass="math inline">\(\forall x\in E\)</span>, <spanclass="math inline">\(x\le s&lt;n+1\)</span>. 就是 <spanclass="math inline">\(\forall x\in E\)</span>, <spanclass="math inline">\(x\le n\)</span>. 于是 <spanclass="math inline">\(n=\max E\)</span>.</p><p><em>用类似的方法可以证明 <spanclass="math inline">\(2\tdeg-5\tdeg\)</span>：</em></p><p><span class="math inline">\(2\tdeg\)</span>自然数集的任何非空有界子集有极小元.</p><p><span class="math inline">\(3\tdeg\)</span> 自然数集没有上界.</p><p><span class="math inline">\(4\tdeg\)</span>整数集的任何上有界非空子集有极大元和极小元.</p><p><span class="math inline">\(5\tdeg\)</span> 整数集没有上下界.</p><h4 id="circ-阿基米德原理"><span class="math inline">\(6^\circ\)</span>阿基米德原理</h4><p>若 <span class="math inline">\(h&gt;0\)</span>, 则 <spanclass="math inline">\(\forall x\in\mbb R\)</span>, 有唯一地整数 <spanclass="math inline">\(k\)</span> s.t. <spanclass="math inline">\((k-1)h\le x&lt;kh\)</span>.</p><p><strong>证明:</strong> <span class="math inline">\(\mbb Z\)</span>无上界, 于是 <span class="math inline">\(\lrac{n\in\mbbZ\bigg|\cfrac{x}h&lt;n}\)</span> 是 <span class="math inline">\(\mbbZ\)</span> 的非空下有界子集, 于是有极小元 <spanclass="math inline">\(k\)</span>. 于是 <spanclass="math inline">\(k-1\le\cfrac{x}h&lt;k\)</span>. 于是 <spanclass="math inline">\((k-1)h\le x&lt;kh\)</span>.</p><p><em>阿基米德原理有以下推论：</em></p><p><span class="math inline">\(7\tdeg\)</span> <spanclass="math inline">\(\forall\varepsilon&gt;0\)</span>, <spanclass="math inline">\(\exists n\in\mbb N\)</span>, s.t. <spanclass="math inline">\(0&lt;\cfrac1n&lt;\varepsilon\)</span>.</p><p><span class="math inline">\(8\tdeg\)</span> 若 <spanclass="math inline">\(x\in\mbb R\)</span>, <spanclass="math inline">\(x\ge0\)</span>, 且 <spanclass="math inline">\(\forall n\in\mbb N\)</span> 都有 <spanclass="math inline">\(x&lt;\cfrac1n\)</span>, 则 <spanclass="math inline">\(x=0\)</span>.</p><p><span class="math inline">\(9\tdeg\)</span> <spanclass="math inline">\(\forall a,b\in\mbb R\)</span>, 若 <spanclass="math inline">\(a&lt;b\)</span> 则 <spanclass="math inline">\(\exists q\in\mbb Q\)</span> s.t. <spanclass="math inline">\(a&lt;q&lt;b\)</span>.</p><p><strong>证明:</strong> <span class="math inline">\(\exists n\in\mbbN\)</span>, s.t. <spanclass="math inline">\(0&lt;\cfrac1n&lt;b-a\)</span>. 又 <spanclass="math inline">\(\exists m\in\mbb N\)</span>, s.t. <spanclass="math inline">\(\cfrac{m-1}n\le a&lt;\cfrac{m}n\)</span>. 于是<span class="math inline">\(\cfrac{m}n\le a+\cfrac1n&lt;b\)</span>. 于是<span class="math inline">\(a&lt;\cfrac{m}n&lt;b\)</span>.</p><p>至此, 我们就构建了一个完整的实数域系统, 并给出了一些结论.这样就可以得到我们在数学分析课程中得到的一些结论.</p><h3 id="参考资料">参考资料</h3><p>[1] B.A.卓里奇 数学分析(第一卷)(第4版)[M]. 北京: 高等教育出版社,2006.</p><p>[2] 全序关系, 维基百科, <ahref="https://zh.wikipedia.org/zh-hans/全序关系">https://zh.wikipedia.org/zh-hans/全序关系</a></p><p>[3] 如何证明 <span class="math inline">\(e\)</span> 是超越数, 知乎,<ahref="https://zhuanlan.zhihu.com/p/47709039">https://zhuanlan.zhihu.com/p/47709039</a></p><p>[4] 如何证明 <span class="math inline">\(\pi\)</span> 是超越数, 知乎,<ahref="https://zhuanlan.zhihu.com/p/56607777">https://zhuanlan.zhihu.com/p/56607777</a></p><p>[5] 数学分析笔记（二）——实数理论, 知乎, <ahref="https://zhuanlan.zhihu.com/p/38393931">https://zhuanlan.zhihu.com/p/38393931</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;newcommand{&#92;isum}[2]{&#92;sum&#92;limits_{ #2 = #1 }^{&#92;infty}}
&#92;newcommand{&#92;iprod}[2]{&#92;prod&#92;limits_{ #2 = #1 }^{&#92;infty}}
&#92;newcommand{&#92;lsum}[3]{&#92;sum&#92;limits_{ #2 = #1 }^{ #3 }}
&#92;newcommand{&#92;lprod}[3]{&#92;prod&#92;limits_{ #2 = #1 }^{ #3 }}
&#92;newcommand{&#92;llim}[2]{&#92;lim&#92;limits_{ #1 &#92;rightarrow #2 }}
&#92;newcommand{&#92;brac}[1]{&#92;left( #1 &#92;right)}
&#92;newcommand{&#92;lrac}[1]{&#92;left&#92;{ #1 &#92;right&#92;}}
&#92;newcommand{&#92;flor}[1]{&#92;left&#92;lfloor #1 &#92;right&#92;rfloor}
&#92;newcommand{&#92;ceil}[1]{&#92;left&#92;lceil #1 &#92;right&#92;rceil}
&#92;newcommand{&#92;agle}[1]{&#92;left&#92;langle #1 &#92;right&#92;rangle}
&#92;newcommand{&#92;abs}[1]{&#92;left| #1 &#92;right|}
&#92;newcommand{&#92;abss}[1]{&#92;left&#92;| #1 &#92;right&#92;|}
&#92;newcommand{&#92;id}[1]{&#92;text{( #1 ) }}
&#92;newcommand{&#92;mathbs}[1]{&#92;boldsymbol{ #1 }}
&#92;newcommand{&#92;mvec}[1]{&#92;overrightarrow{ #1 }}
&#92;newcommand{&#92;mbar}[1]{&#92;overline{ #1 }}
&#92;newcommand{&#92;bigf}{&#92;displaystyle}
&#92;newcommand{&#92;dif}{&#92;mathrm{d}}
&#92;newcommand{&#92;ddif}[1]{&#92;frac{&#92;dif}{&#92;dif #1 }}
&#92;newcommand{&#92;cddif}[1]{&#92;cfrac{&#92;dif}{&#92;dif #1 }}
&#92;newcommand{&#92;eset}{&#92;varnothing}
&#92;newcommand{&#92;sh}{&#92;mathrm{sh&#92; }}
&#92;newcommand{&#92;ch}{&#92;mathrm{ch&#92; }}
&#92;newcommand{&#92;Imm}{&#92;mathrm{Im&#92; }}
&#92;newcommand{&#92;Ker}{&#92;mathrm{Ker&#92; }}
&#92;newcommand{&#92;rank}{&#92;mathrm{rank&#92; }}
&#92;newcommand{&#92;diag}{&#92;mathrm{diag&#92; }}
&#92;newcommand{&#92;sgn}{&#92;mathrm{sgn&#92; }}
&#92;newcommand{&#92;simeqq}{&#92;cong}
&#92;newcommand{&#92;tdeg}{^&#92;circ}
&#92;newcommand{&#92;roku}{&#92;partial}
&#92;newcommand{&#92;bksl}{&#92;backslash}
&#92;newcommand{&#92;mrm}{&#92;mathrm}
&#92;newcommand{&#92;mbb}{&#92;mathbb}
&#92;newcommand{&#92;mbf}{&#92;mathbf}
&#92;newcommand{&#92;mscr}{&#92;mathscr}
&#92;newcommand{&#92;mbs}[1]{&#92;boldsymbol{ #1 }}
&#92;newcommand{&#92;kaz}[1]{&#92;begin{cases} #1 &#92;end{cases}}
&#92;newcommand{&#92;pmat}[1]{&#92;begin{pmatrix} #1 &#92;end{pmatrix}}
&#92;text{数学分析读书报告(2020年春)}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在第一学期的数学分析课程中, 我们定义了一整套实数系统.
当时我们先用皮亚诺公理和集合论两种方式定义了自然数集,
然后再用自然数对的商集定义了整数集, 用整数对的集定义了有理数集,
最后又用戴德金分割定义了实数. 然而最近读到了卓里奇的《数学分析》,
在这本书里, 作者用了另一种方式定义了这一套系统: 先给出实数集的公理系统,
之后在逐步导出自然数集, 整数集和有理数集.&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://sheauhawjang.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数学分析" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/"/>
    
    <category term="原创" scheme="https://sheauhawjang.github.io/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="读书报告" scheme="https://sheauhawjang.github.io/tags/%E8%AF%BB%E4%B9%A6%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>2020 校赛模拟赛 F 题解</title>
    <link href="https://sheauhawjang.github.io/2020/04/25/2020%20School%20Contest%20Simulation%20F/"/>
    <id>https://sheauhawjang.github.io/2020/04/25/2020%20School%20Contest%20Simulation%20F/</id>
    <published>2020-04-25T10:28:07.000Z</published>
    <updated>2020-08-17T00:50:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: XJTUOJ-1143 ddd和万马奔腾</p><p>题目链接: <ahref="https://oj.xjtuicpc.com/problem/1143">https://oj.xjtuicpc.com/problem/1143</a></p><h2 id="题面">题面</h2><h3 id="数论描述">数论描述</h3><p>给定 <span class="math inline">\(n\)</span> 个正整数 <spanclass="math inline">\(m_1,m_2,\cdots,m_n\)</span>, 判断每个 <spanclass="math inline">\(m\)</span> 是不是模 <spanclass="math inline">\(p\)</span> 意义下的 <spanclass="math inline">\(k\)</span> 次剩余。多个 <spanclass="math inline">\(m\)</span> 符合条件按从小到大顺序输出.</p><h3 id="通俗描述">通俗描述</h3><p>给定 <span class="math inline">\(n\)</span> 个正整数 <spanclass="math inline">\(m_1,m_2,\cdots,m_n\)</span>, 判断每个 <spanclass="math inline">\(m\)</span> 是否满足:</p><ol type="1"><li><span class="math inline">\(\gcd(m,p)=1\)</span>.</li><li>存在一个整数 <span class="math inline">\(a\)</span>, 使得 <spanclass="math inline">\(a^k\equiv m\pmod p\)</span>.</li></ol><p>如果一个数 <span class="math inline">\(m\)</span> 满足上述两个条件,则称 <span class="math inline">\(m\)</span> 是模 <spanclass="math inline">\(p\)</span> 意义下的 <spanclass="math inline">\(k\)</span> 次剩余。多个 <spanclass="math inline">\(m\)</span> 符合条件按从小到大顺序输出.</p><p><span class="math inline">\(x\equiv y\pmod p\)</span> 的定义是 <spanclass="math inline">\(p\mid(x-y)\)</span>, 等价描述是存在整数 <spanclass="math inline">\(b\)</span> 使得 <spanclass="math inline">\(x-bp=y\)</span>.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1&lt;k\le10^5\]</span></p><p><span class="math display">\[1&lt;p\le10^5\]</span></p><p><span class="math display">\[1\le n,m&lt;p\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>显然 <span class="math inline">\(i^k\equiv(i\%p)^k\pmod p\)</span>.所有可能是 <span class="math inline">\(k\)</span> 次剩余的数至多有 <spanclass="math inline">\(p-1\)</span> 个, 他们在 <spanclass="math inline">\(1^k,2^k,\cdots,(p-1)^k\pmod p\)</span> 当中.将这些数字枚举出来并放入一个 <code>std::set</code> 或 <code>bool</code>数组进行存储. 对于给定的一个 <span class="math inline">\(m\)</span>,先判断 <span class="math inline">\(\gcd(m,p)\)</span> 是否为 <spanclass="math inline">\(1\)</span>. 如果是, 再判断上述 <spanclass="math inline">\(p-1\)</span> 个数字中有没有 <spanclass="math inline">\(m\)</span>. 如果两个条件都符合, 那么 <spanclass="math inline">\(m\)</span> 就是模 <spanclass="math inline">\(p\)</span> 意义下的 <spanclass="math inline">\(k\)</span> 次剩余, 否则就不是.</p><p>使用快速幂算法可以在 <span class="math inline">\(O(\log k)\)</span>的时间里算出一个 <span class="math inline">\(i^k\)</span>,算出所有可能的 <span class="math inline">\(p-1\)</span>个数的时间复杂度是 <span class="math inline">\(O(p\log k)\)</span>. 求<span class="math inline">\(\gcd\)</span> 使用辗转相除法可以在 <spanclass="math inline">\(O(\log p)\)</span> 的时间内求得 <spanclass="math inline">\(\gcd (m,p)\)</span>. 使用 <code>std::set</code>进行查询一次的时间复杂度是 <span class="math inline">\(O(\logp)\)</span>, 使用 <code>bool</code> 数组进行查询一次的时间复杂度是 <spanclass="math inline">\(O(1)\)</span>. 于是总时间复杂度就是 <spanclass="math inline">\(O(p\log k+n\log p)\)</span>.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? gcd(b, a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">kpow</span><span class="params">(ll a, <span class="keyword">int</span> k, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">            ans *= a, ans %= p;</span><br><span class="line">        a *= a, a %= p;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k, p, n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; pop, ans;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k &gt;&gt; p &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a;</span><br><span class="line">        que.push_back(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; p; ++i)</span><br><span class="line">        pop.insert(kpow(i, k, p));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">if</span> (gcd(que[i], p) == <span class="number">1</span> &amp;&amp; pop.count(que[i]))</span><br><span class="line">            ans.insert(que[i]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> a : ans)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: XJTUOJ-1143 ddd和万马奔腾&lt;/p&gt;
&lt;p&gt;题目链接: &lt;a
href=&quot;https://oj.xjtuicpc.com/problem/1143&quot;&gt;https://oj.xjtuicpc.com/problem/1143&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;h3 id=&quot;数论描述&quot;&gt;数论描述&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&quot;math inline&quot;&gt;&#92;(n&#92;)&lt;/span&gt; 个正整数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m_1,m_2,&#92;cdots,m_n&#92;)&lt;/span&gt;, 判断每个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 是不是模 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 意义下的 &lt;span
class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 次剩余。多个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 符合条件按从小到大顺序输出.&lt;/p&gt;
&lt;h3 id=&quot;通俗描述&quot;&gt;通俗描述&lt;/h3&gt;
&lt;p&gt;给定 &lt;span class=&quot;math inline&quot;&gt;&#92;(n&#92;)&lt;/span&gt; 个正整数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m_1,m_2,&#92;cdots,m_n&#92;)&lt;/span&gt;, 判断每个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 是否满足:&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;gcd(m,p)=1&#92;)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;存在一个整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(a&#92;)&lt;/span&gt;, 使得 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a^k&#92;equiv m&#92;pmod p&#92;)&lt;/span&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果一个数 &lt;span class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 满足上述两个条件,
则称 &lt;span class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 是模 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 意义下的 &lt;span
class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 次剩余。多个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 符合条件按从小到大顺序输出.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(x&#92;equiv y&#92;pmod p&#92;)&lt;/span&gt; 的定义是 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;mid(x-y)&#92;)&lt;/span&gt;, 等价描述是存在整数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(b&#92;)&lt;/span&gt; 使得 &lt;span
class=&quot;math inline&quot;&gt;&#92;(x-bp=y&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&amp;lt;k&#92;le10^5
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&amp;lt;p&#92;le10^5
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;le n,m&amp;lt;p
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="校赛" scheme="https://sheauhawjang.github.io/tags/%E6%A0%A1%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2020 CCPC WannaFly 冬令营 Day5H 题解</title>
    <link href="https://sheauhawjang.github.io/2020/01/19/2020%20Wannafly%20Winter%205H/"/>
    <id>https://sheauhawjang.github.io/2020/01/19/2020%20Wannafly%20Winter%205H/</id>
    <published>2020-01-18T18:58:24.000Z</published>
    <updated>2023-05-27T12:37:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2020 CCPC Wannafly 冬令营 Day5: H. Geometry PTSD</p><h3 id="题面">题面</h3><p>在以 <span class="math inline">\(O\)</span>为球心的单位球面上寻找三个点 <span class="math inline">\(A, B,C\)</span>, s.t.: <span class="math display">\[\min(|AB|,|BC|,|CA|)\geq1.7\]</span></p><p><span class="math display">\[0&lt;d(O,ABC)\leq10^{-18}\]</span></p><h4 id="输出格式">输出格式</h4><p>每行输出三个整数 <spanclass="math inline">\(x,y,z\in[-10^{6},10^6]\cap\mathbb Z\)</span>,表示选取了点 <span class="math display">\[\left(\frac{x}{\sqrt{x^2+y^2+z^2}},\frac{y}{\sqrt{x^2+y^2+z^2}},\frac{z}{\sqrt{x^2+y^2+z^2}}\right)\]</span></p><a id="more"></a><h3 id="题解">题解</h3><p>设原点为 <span class="math inline">\(O\)</span>. <spanclass="math inline">\(A,B,C\)</span> 每个点选取的三个整数分别为 <spanclass="math inline">\(\boldsymbol A(A_x, A_y, A_z), \boldsymbol B(B_x,B_y, B_z), \boldsymbol C(C_x, C_y, C_z)\)</span>, 记： <spanclass="math display">\[\left|\boldsymbol P\right|:=\sqrt{P_x^2+P_y^2+P_z^2},\quad\forall\boldsymbol P\in\{\boldsymbol A,\boldsymbol B,\boldsymbol C\}\]</span></p><p><span class="math display">\[D_0:=\overrightarrow{OA}\times\overrightarrow{OB}\cdot\overrightarrow{OC}=\left|\begin{array}{ccc} \frac{A_x}{|\boldsymbol A|} &amp;\frac{A_y}{|\boldsymbol A|} &amp; \frac{A_z}{|\boldsymbolA|}\\   \frac{B_x}{|\boldsymbol B|} &amp; \frac{B_y}{|\boldsymbol B|}&amp; \frac{B_z}{|\boldsymbol B|}\\   \frac{C_x}{|\boldsymbol C|} &amp;\frac{C_y}{|\boldsymbol C|} &amp; \frac{C_z}{|\boldsymbolC|}\\\end{array} \right|\]</span></p><p><span class="math display">\[D:= {D_0}{|\boldsymbol A||\boldsymbol B||\boldsymbol C|} = \left|\begin{array} {ccc}    A_x &amp; A_y &amp; A_z \\    B_x &amp; B_y &amp; B_z \\    C_x &amp; C_y &amp; C_z\end{array} \right|\]</span></p><p>由三棱锥体积公式，可得： <span class="math display">\[\begin{align}V:=V_{OABC}&amp;=\frac{1}{3}Sh\\&amp;=\frac{1}{6}|D_0|=\frac{|D|}{6|\boldsymbol A||\boldsymbolB||\boldsymbol C|}\end{align}\]</span></p><p><span class="math display">\[h=\frac{|D|}{2S|\boldsymbol A||\boldsymbol B||\boldsymbol C|}\]</span></p><p>注意到 <span class="math inline">\(\sqrt3\approx1.7\)</span>,故尽量选取等边三角形以达到最优。</p><p>同时注意到： <span class="math display">\[D=\left| \begin{array} {ccc}    1 &amp; 1 &amp; 0 \\    0 &amp; -1 &amp; 1 \\    -1 &amp; 0 &amp; -1\end{array} \right|\]</span> 满足：<span class="math inline">\(D=0\)</span>, <spanclass="math inline">\(|AB|=|BC|=|CA|=\sqrt3\)</span>.</p><p>同理， <span class="math display">\[D=\left| \begin{array} {ccc}    10^6 &amp; 10^6 &amp; 0 \\    0 &amp; -10^6 &amp; 10^6 \\    -10^6 &amp; 0 &amp; -10^6\end{array} \right|\]</span> 有同样的性质，此时： <span class="math display">\[|\boldsymbol A|=|\boldsymbol B|=|\boldsymbol C|=\sqrt2\cdot10^6\]</span></p><p><span class="math display">\[h=\frac{|D|}{2S|\boldsymbol A||\boldsymbol B||\boldsymbolC|}=\frac{|D|}{3\sqrt6\cdot10^{18}}\]</span></p><p>微调 <span class="math inline">\(\boldsymbol A,\boldsymbolB,\boldsymbol C\)</span> , s.t. <spanclass="math inline">\(|D|\leq7\)</span> 即可。</p><p>打表发现：满足条件的一个 <span class="math inline">\(D\)</span> 是：<span class="math display">\[D=\left|\begin{array}{ccc}999999 &amp; 10^6 &amp; 0 \\0 &amp; -999999&amp; 999997 \\-999997 &amp; 0 &amp; -999996\end{array}\right|=-4\]</span></p><p><span class="math display">\[h=\frac{|D|}{2S|\boldsymbol A||\boldsymbol B||\boldsymbolC|}\approx\frac{4}{3\sqrt6\cdot10^{18}}&lt;10^{-18}\]</span></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2020 CCPC Wannafly 冬令营 Day5: H. Geometry PTSD&lt;/p&gt;
&lt;h3 id=&quot;题面&quot;&gt;题面&lt;/h3&gt;
&lt;p&gt;在以 &lt;span class=&quot;math inline&quot;&gt;&#92;(O&#92;)&lt;/span&gt;
为球心的单位球面上寻找三个点 &lt;span class=&quot;math inline&quot;&gt;&#92;(A, B,
C&#92;)&lt;/span&gt;, s.t.: &lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;min(|AB|,|BC|,|CA|)&#92;geq1.7
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
0&amp;lt;d(O,ABC)&#92;leq10^{-18}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&quot;输出格式&quot;&gt;输出格式&lt;/h4&gt;
&lt;p&gt;每行输出三个整数 &lt;span
class=&quot;math inline&quot;&gt;&#92;(x,y,z&#92;in[-10^{6},10^6]&#92;cap&#92;mathbb Z&#92;)&lt;/span&gt;,
表示选取了点 &lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;left(&#92;frac{x}{&#92;sqrt{x^2+y^2+z^2}},&#92;frac{y}{&#92;sqrt{x^2+y^2+z^2}},&#92;frac{z}{&#92;sqrt{x^2+y^2+z^2}}&#92;right)
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="计算几何" scheme="https://sheauhawjang.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
    <category term="打表" scheme="https://sheauhawjang.github.io/tags/%E6%89%93%E8%A1%A8/"/>
    
    <category term="2020 CCPC WannaFly 冬令营" scheme="https://sheauhawjang.github.io/tags/2020-CCPC-WannaFly-%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>2020 CCPC WannaFly 冬令营 Day2H 题解</title>
    <link href="https://sheauhawjang.github.io/2020/01/18/2020%20Wannafly%20Winter%202H/"/>
    <id>https://sheauhawjang.github.io/2020/01/18/2020%20Wannafly%20Winter%202H/</id>
    <published>2020-01-18T14:01:51.000Z</published>
    <updated>2020-01-18T14:01:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2020 CCPC Wannafly 冬令营 Day2: H. 叁佰爱抠的序列</p><h2 id="题面">题面</h2><p>现有一个整数 <span class="math inline">\(m\)</span>, 构造了一个长度为<span class="math inline">\(n\)</span> 的序列 <spanclass="math inline">\(A\)</span>, 满足: 1. <spanclass="math inline">\(\forall a \in A,\, a\in[1,m]\cap\mathbb Z\)</span>2. <span class="math inline">\(\forall x,y\in[1,m]\cap\mathbb Z,\,x\ney\)</span>, <span class="math inline">\(\exists p\in[1,n)\cap\mathbbZ\)</span>, s.t. <spanclass="math inline">\(\{A[p],A[p+1]\}=\{x,y\}\)</span></p><p>其中 <span class="math inline">\(A[p]\)</span> 表示 <spanclass="math inline">\(A\)</span> 中的第 <spanclass="math inline">\(p\)</span> 个元素的值.</p><p>给定一个 <span class="math inline">\(n\)</span>, 求 <spanclass="math inline">\(m\)</span> 可能的最大值. 若 <spanclass="math inline">\(n\leq N=2\cdot10^6\)</span>, 则再输出 <spanclass="math inline">\(m\)</span> 取得最大值时可能的一个序列 <spanclass="math inline">\(A\)</span>.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\leq n\leq10^{18}\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>构造一个 <span class="math inline">\(m\)</span> 个顶点的无向图 <spanclass="math inline">\(\boldsymbol G\)</span>, <spanclass="math inline">\(\forall p\in [1,n)\)</span>, 在 <spanclass="math inline">\(A[p]\)</span> 和 <spanclass="math inline">\(A[p+1]\)</span> 之间连一条边, 记作第一类边. 则<span class="math inline">\(A\)</span> 的条件 <spanclass="math inline">\((2)\)</span> 就转化成了 <spanclass="math inline">\(\boldsymbol G\)</span>中任意两个不同点都要有边直接连接, 最多有 <spanclass="math inline">\(n-1\)</span> 条边. 这样, 我们就得到了 <spanclass="math inline">\(n\)</span> 的一个下界: <spanclass="math display">\[n\geq\frac{1}{2}m(m-1)+1 \tag{3}\]</span> 等号成立当且仅当任意两个不同点之间直接连接的边有且仅有 <spanclass="math inline">\(1\)</span> 条.</p><p>另一方面, 观察这些连接的边: <span class="math display">\[A[1]\rightarrow A[2]\rightarrow A[3]\rightarrow...\rightarrow A[n]\]</span> 考虑从 <span class="math inline">\(A[1]\)</span> 号点出发,按照上述顺序遍历整个图, 发现每条边经过且只经过了一次,这对应了一个欧拉回路, 于是 <span class="math inline">\(\boldsymbolG\)</span> 中至多两个点的度数为奇数. 反过来, 如果 <spanclass="math inline">\(\boldsymbol G\)</span> 中至多两个点的度数为奇数,那么可以构造出这样一个欧拉回路以及对应的序列.</p><p>考虑以上两个要素: 任意两个不同点之间直接连接的边有且仅有一条时,每个点的度数是 <span class="math inline">\(m-1\)</span>.</p><p>如果 <span class="math inline">\(m\)</span> 是奇数,那么每个点的度数全部都是偶数, 故可以构造出一个序列 <spanclass="math inline">\(A\)</span>. <spanclass="math inline">\((3)\)</span> 式等号可以成立.</p><p>如果 <span class="math inline">\(m\)</span> 是偶数,那么每个点的度数全部都是奇数, <spanclass="math inline">\(m&gt;2\)</span> 时不能构造出一个欧拉回路. 这时,我们可以任取 <span class="math inline">\(m-2\)</span> 个度数为奇数的点,配对连边, 记作第二类边. 于是这 <span class="math inline">\(m-2\)</span>个点度数均加 <span class="math inline">\(1\)</span>, 变为了偶数. 这样<span class="math inline">\(G\)</span> 中只有 <spanclass="math inline">\(2\)</span> 个点度数为奇数, 可以构造欧拉回路.此时有:</p><p><span class="math display">\[n\geq\frac{1}{2}m(m-1)+1+\frac{1}{2}(m-2)=\frac{1}{2}m^2\]</span> 综上所述, 定义: <span class="math display">\[f(m):=\left\{ \begin{align}\frac{1}{2}m(&amp;m-1)+1 &amp; m\equiv 0\pmod 2\\\frac{1}{2}&amp;m^2 &amp; m\equiv 1\pmod 2\end{align}\right.\]</span></p><p>条件便可以总结为: <span class="math display">\[n\geq f(m) \tag4\]</span></p><p>我们可以从 <span class="math inline">\(1\)</span> 到 <spanclass="math inline">\(n\)</span> 枚举所有可能的 <spanclass="math inline">\(m\)</span>, 取其中满足 <spanclass="math inline">\(n\geq f(m)\)</span> 的最大值. 复杂度为 <spanclass="math inline">\(O(n)\)</span>, 不能接受.</p><p>注意到: <span class="math inline">\(\forall m\equiv 0\pmod2\)</span>, <span class="math inline">\(\displaystyle\frac{1}{2}(m-1)(m-2)+1&lt;\frac{1}{2}m^2&lt;\frac{1}{2}m(m+1)+1\)</span>.即: <span class="math inline">\(\forall m\in\mathbb N_+\)</span>, <spanclass="math inline">\(f(m)&lt;f(m+1)\)</span>. <spanclass="math inline">\(f\)</span> 严格单调增, 故可以使用二分查找,复杂度为 <span class="math inline">\(O(\log n)\)</span>, 可以接受.</p><p>也可以分别解不等式: <span class="math display">\[\begin{align}\frac{1}{2}x(x-1)+1&amp;\le n \tag5\\\frac{1}{2}x^2&amp;\le n \tag6\end{align}\]</span> 取不等式 <span class="math inline">\((4)\)</span>解中最大的奇数和不等式 <span class="math inline">\((5)\)</span>解中最大的偶数的较大者, 复杂度为 <spanclass="math inline">\(O(1)\)</span>. 很好.</p><p>现在思考一种 <span class="math inline">\(\forall m\in\mathbbN_+\)</span> 都能构造欧拉回路以及对应的序列 <spanclass="math inline">\(A\)</span> 的方法. 先考虑 <spanclass="math inline">\(n=f(m)\)</span> 的情况, 这种情况构造的序列记作<span class="math inline">\(A_m\)</span>, 此时 <spanclass="math inline">\(A=A_m\)</span>.</p><p>对于 <span class="math inline">\(m\)</span> 是奇数的情况,考虑数学归纳法:</p><p>一、<span class="math inline">\(m=1\)</span> 时, 由于没有边,欧拉环路显然存在, <span class="math inline">\(A_1=[1]\)</span>.</p><p>二、设我们构造出了 <span class="math inline">\(m=k\)</span>时的图的欧拉环路以及对应的序列 <span class="math inline">\(A_k\)</span>.显然, 欧拉环路可以从任意一个点出发, 遍历一遍图后回到起点. <spanclass="math inline">\(A[1]\)</span> 可以是任意一个数, <spanclass="math inline">\(A[n]=A[1]\)</span>. 不妨令 <spanclass="math inline">\(A[1]=A[n]=1\)</span>. 现在我们加入两个点 <spanclass="math inline">\(k+1,k+2\)</span>. 考虑序列 <spanclass="math inline">\(B=[2,3,...,k]\)</span>, 在 <spanclass="math inline">\(B\)</span> 中所有的奇数前面插入 <spanclass="math inline">\(k+1\)</span>, 后面插入 <spanclass="math inline">\(k+2\)</span>, 则 <spanclass="math inline">\(B=[2,k+1,3,k+2,...,k+1,k,k+2]\)</span>. 令 <spanclass="math inline">\(A_{k+2}=[A_k,k+1,k+2,B,1]\)</span>. 这样, <spanclass="math inline">\(m=k+2\)</span>时的序列以及对应的欧拉回路就构造好了.</p><p>对于 <span class="math inline">\(m\)</span> 时偶数的情况,考虑数学归纳法:</p><p>一、<span class="math inline">\(m=2\)</span> 时, 由于只有一条边,欧拉环路显然存在, <span class="math inline">\(A_2=[1,2]\)</span>.</p><p>二、设我们构造出了 <span class="math inline">\(m=k\)</span>时的图的欧拉环路以及对应的序列 <span class="math inline">\(A_k\)</span>.显然, 欧拉环路应该从一个度数为奇数的点出发,遍历一遍图后回到另一个度数为奇数的点. <spanclass="math inline">\(A[1],A[n]\)</span> 可以是任意两个不同的数, 不妨令<span class="math inline">\(A[1]=1,A[n]=k\)</span>. 现在我们加入两个点<span class="math inline">\(k+1,k+2\)</span>. 将 <spanclass="math inline">\(k,k+1\)</span> 配对连接第二类边. 考虑序列 <spanclass="math inline">\(B=[2,3,...,k]\)</span>, 在 <spanclass="math inline">\(B\)</span> 中所有的奇数前面插入 <spanclass="math inline">\(k+1\)</span>, 后面插入 <spanclass="math inline">\(k+2\)</span>, 则 <spanclass="math inline">\(B=[2,k+1,3,k+2,...,k+1,k,k+2]\)</span>. 令 <spanclass="math inline">\(A_{k+2}=[A_k,k+1,k+2,B]\)</span>. 这样, <spanclass="math inline">\(m=k+2\)</span>时的序列以及对应的欧拉回路就构造好了.</p><p>当然, 这个构造只是一种构造. 其他的任何满足题意的构造均可行.</p><p>现在考虑 <span class="math inline">\(n&gt;f(m)\)</span> 的情况.很显然, 令 <spanclass="math inline">\(A=[A_m,\underbrace{1,1,...,1}_{n-f(m)}]\)</span>即可.</p><p>构造复杂度为 <span class="math inline">\(O(N)\)</span>. 可以接受.</p><h2 id="代码实现">代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m &amp; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> (m * (m - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> m * m &gt;&gt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll m, ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">get</span>(m) &lt;= n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">rget</span><span class="params">(ll n, ll l, ll r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l + <span class="number">1</span> == r)</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    ll mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (check(mid, n))</span><br><span class="line">        <span class="keyword">return</span> rget(n, mid, r);</span><br><span class="line">    <span class="keyword">return</span> rget(n, l, mid);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">opt</span><span class="params">(ll m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m &amp; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">int</span> o = <span class="number">1</span>, n = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; m; i += <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</span><br><span class="line">            n = i;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                o = o % (i - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">                n = n == i ? i + <span class="number">1</span> : i;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %d %d"</span>, n, o);</span><br><span class="line">            &#125; <span class="keyword">while</span> (o != <span class="number">1</span> || n != i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1 2"</span>);</span><br><span class="line">        <span class="keyword">int</span> o = <span class="number">2</span>, n = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; m; i += <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d"</span>, i);</span><br><span class="line">            n = i;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                o = o % (i - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">                n = n == i ? i + <span class="number">1</span> : i;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">" %d %d"</span>, n, o);</span><br><span class="line">            &#125; <span class="keyword">while</span> (o != i - <span class="number">1</span> || n != i);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d"</span>, o = i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">    ll m = rget(n, <span class="number">0</span>, <span class="number">2e9</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, m);</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2e6</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        opt(m);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">get</span>(m); i &lt; n; ++i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" 1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2020 CCPC Wannafly 冬令营 Day2: H. 叁佰爱抠的序列&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;现有一个整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt;, 构造了一个长度为
&lt;span class=&quot;math inline&quot;&gt;&#92;(n&#92;)&lt;/span&gt; 的序列 &lt;span
class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt;, 满足: 1. &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;forall a &#92;in A,&#92;, a&#92;in[1,m]&#92;cap&#92;mathbb Z&#92;)&lt;/span&gt;
2. &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;forall x,y&#92;in[1,m]&#92;cap&#92;mathbb Z,&#92;,x&#92;ne
y&#92;)&lt;/span&gt;, &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;exists p&#92;in[1,n)&#92;cap&#92;mathbb
Z&#92;)&lt;/span&gt;, s.t. &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;{A[p],A[p+1]&#92;}=&#92;{x,y&#92;}&#92;)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;span class=&quot;math inline&quot;&gt;&#92;(A[p]&#92;)&lt;/span&gt; 表示 &lt;span
class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt; 中的第 &lt;span
class=&quot;math inline&quot;&gt;&#92;(p&#92;)&lt;/span&gt; 个元素的值.&lt;/p&gt;
&lt;p&gt;给定一个 &lt;span class=&quot;math inline&quot;&gt;&#92;(n&#92;)&lt;/span&gt;, 求 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 可能的最大值. 若 &lt;span
class=&quot;math inline&quot;&gt;&#92;(n&#92;leq N=2&#92;cdot10^6&#92;)&lt;/span&gt;, 则再输出 &lt;span
class=&quot;math inline&quot;&gt;&#92;(m&#92;)&lt;/span&gt; 取得最大值时可能的一个序列 &lt;span
class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;leq n&#92;leq10^{18}
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="数论" scheme="https://sheauhawjang.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
    <category term="图论" scheme="https://sheauhawjang.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="构造" scheme="https://sheauhawjang.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
    <category term="二分查找" scheme="https://sheauhawjang.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
    <category term="2020 CCPC WannaFly 冬令营" scheme="https://sheauhawjang.github.io/tags/2020-CCPC-WannaFly-%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>2020 CCPC WannaFly 冬令营 Day5J 题解</title>
    <link href="https://sheauhawjang.github.io/2020/01/18/2020%20Wannafly%20Winter%205J/"/>
    <id>https://sheauhawjang.github.io/2020/01/18/2020%20Wannafly%20Winter%205J/</id>
    <published>2020-01-18T13:33:30.000Z</published>
    <updated>2020-01-18T13:33:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源: 2020 CCPC Wannafly 冬令营 Day5: J. Xor on Figures</p><h2 id="题面">题面</h2><p>给定一个整数 <span class="math inline">\(k\)</span> 以及一个 <spanclass="math inline">\(2^k\times2^k\)</span> 矩阵 <spanclass="math inline">\(\boldsymbol A\)</span> , <spanclass="math inline">\(\boldsymbol A\)</span> 中任一元素 <spanclass="math inline">\(a_{ij}\)</span> 都有 <spanclass="math inline">\(a_{ij}\in\{0,1\}\)</span>.</p><p>定义平移 <span class="math inline">\(m\times n\)</span> 矩阵 <spanclass="math inline">\(\boldsymbol X\)</span> 操作如下: <spanclass="math display">\[\boldsymbol X=\left[\begin{array} {cc}    \boldsymbol A &amp; \boldsymbol B\\    \boldsymbol C &amp; \boldsymbol D\end{array} \right] :\Longrightarrow \boldsymbol X \rightarrow\left[\begin{array} {cc}    \boldsymbol D &amp; \boldsymbol C\\    \boldsymbol B &amp; \boldsymbol A\end{array} \right]\]</span> 其中 <span class="math inline">\(\boldsymbol A\)</span> 是<span class="math inline">\(a\times b\)</span> 矩阵, <spanclass="math inline">\(a\in[0,m]\cap\mathbb Z,b\in[0,n]\cap\mathbbZ\)</span>.</p><p>定义用矩阵 <span class="math inline">\(\boldsymbol B\)</span>覆盖矩阵 <span class="math inline">\(\boldsymbol A\)</span> 操作如下:<span class="math display">\[\boldsymbol B(b_{ij})\sim \boldsymbol A(a_{ij}) :\Longrightarrow\boldsymbol A\rightarrow (a_{ij}\,\mathrm{xor}\,b_{ij})\]</span> 你可以选择任意多个经过任意平移操作后的 <spanclass="math inline">\(\boldsymbol A\)</span> 依次覆盖一个 <spanclass="math inline">\(\boldsymbol{0}\)</span> 矩阵,求最终可以得到多少种不同的矩阵.</p><h3 id="数据范围">数据范围</h3><p><span class="math display">\[1\leq k\leq5\]</span></p><a id="more"></a><h2 id="题解">题解</h2><p>定义数域 <span class="math inline">\(B=\{0,1\}\)</span>上的加法和数量乘法运算: <span class="math display">\[\begin{align}\forall a, b\in B, \quad&amp;a\oplus b =a \,\mathrm{xor}\, b\\&amp;a\odot b = a \cdot b\end{align}\]</span> 考虑 <span class="math inline">\(m\times n\)</span> 的矩阵 $ AM_{mn}(B)$, 对 <span class="math inline">\(\boldsymbol A(1; 1)\)</span>做一个标记, 则对这个矩阵进行平移操作后, 标记可能在任意一个位置, 有 <spanclass="math inline">\(m\times n\)</span> 种取值. 故最多有 $ m n$个操作算子 <span class="math inline">\(\boldsymbol F\)</span>.</p><p>定义数域 <span class="math inline">\(B\)</span>上矩阵的加法和数量乘法运算: <span class="math display">\[\begin{aligned}&amp; \forall \boldsymbol X(x_{ij}), \boldsymbol Y(y_{ij})\in M_{m\timesn}(B), &amp; \boldsymbol X\oplus \boldsymbol Y&amp;=(x_{ij}\oplusy_{ij})\\&amp; \forall a\in B, \boldsymbol X(x_{ij})\in M_{m\times n}(B), &amp;a\odot \boldsymbol X&amp;=(a\odot x_{ij})\end{aligned}\]</span> 这样, $ M_{mn}(B) $ 构成了数域 <spanclass="math inline">\(B\)</span> 上的线性空间.</p><p>显然, <span class="math inline">\(\langle\boldsymbol F\rangle\)</span> 是 <span class="math inline">\(M_{m\timesn}(B)\)</span> 的一个线性子空间. 我们需要求的就是 <spanclass="math inline">\(|\langle\boldsymbol F\rangle|\)</span>.</p><p>考虑 <span class="math inline">\(\langle\boldsymbol F\rangle\)</span> 的一个基 <span class="math inline">\(\mathfrakB=\{\lambda_i;i\in[1, \mathrm{rank}\langle\boldsymbolF\rangle]\cap\mathbb Z\}\)</span>, 则 <spanclass="math inline">\(\forall \boldsymbol X \in \langle \boldsymbolF\rangle\)</span>, <span class="math inline">\(\boldsymbol X\)</span>可以被 <span class="math inline">\(\mathfrak B\)</span> 惟一地线性表出,即存在唯一的一组 <span class="math inline">\(k_i\in B,i\in[1, |\mathfrakB|]\cap\mathbb Z\)</span>, s.t. <span class="math display">\[\boldsymbol X=\sum_{i=1}^{|\mathfrak B|}k_i\lambda_i\]</span> <span class="math inline">\(\forall i\in[1,|\mathfrak B|]\cap\mathbb Z,k_i\)</span> 一共有 <span class="math inline">\(0,1\)</span>两个取值, 故 <span class="math inline">\(\boldsymbol X\)</span> 共有<span class="math inline">\(2^{|\mathfrak B|}\)</span> 种不同的取值.</p><p>线性空间 <span class="math inline">\(M_{m\times n}(B)\)</span> 与<span class="math inline">\(B^{m\times n}\)</span> 同构. 将所有的 <spanclass="math inline">\(m\times n\)</span> 个 <spanclass="math inline">\(\boldsymbol F\)</span> 转化成 <spanclass="math inline">\(m\times n\)</span> 个 <spanclass="math inline">\(m\times n\)</span> 维向量,放入矩阵中高斯消元求秩即可. 复杂度为 <spanclass="math inline">\(O(m^3n^3)=O(2^{6k})\)</span>.位运算与高斯消元的常数极小, 可以接受.</p><p>算出矩阵的秩后, 答案即 <span class="math display">\[2^{|\mathfrak B|}=2^{\mathrm{rank}\langle\boldsymbol  F\rangle}\]</span> 在 <span class="math inline">\(\bmod p\)</span>意义下进行快速幂即可.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源: 2020 CCPC Wannafly 冬令营 Day5: J. Xor on Figures&lt;/p&gt;
&lt;h2 id=&quot;题面&quot;&gt;题面&lt;/h2&gt;
&lt;p&gt;给定一个整数 &lt;span class=&quot;math inline&quot;&gt;&#92;(k&#92;)&lt;/span&gt; 以及一个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(2^k&#92;times2^k&#92;)&lt;/span&gt; 矩阵 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol A&#92;)&lt;/span&gt; , &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol A&#92;)&lt;/span&gt; 中任一元素 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a_{ij}&#92;)&lt;/span&gt; 都有 &lt;span
class=&quot;math inline&quot;&gt;&#92;(a_{ij}&#92;in&#92;{0,1&#92;}&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;定义平移 &lt;span class=&quot;math inline&quot;&gt;&#92;(m&#92;times n&#92;)&lt;/span&gt; 矩阵 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol X&#92;)&lt;/span&gt; 操作如下: &lt;span
class=&quot;math display&quot;&gt;&#92;[
&#92;boldsymbol X=&#92;left[&#92;begin{array} {cc}
    &#92;boldsymbol A &amp;amp; &#92;boldsymbol B&#92;&#92;
    &#92;boldsymbol C &amp;amp; &#92;boldsymbol D
&#92;end{array} &#92;right] :&#92;Longrightarrow &#92;boldsymbol X &#92;rightarrow
&#92;left[&#92;begin{array} {cc}
    &#92;boldsymbol D &amp;amp; &#92;boldsymbol C&#92;&#92;
    &#92;boldsymbol B &amp;amp; &#92;boldsymbol A
&#92;end{array} &#92;right]
&#92;]&lt;/span&gt; 其中 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol A&#92;)&lt;/span&gt; 是
&lt;span class=&quot;math inline&quot;&gt;&#92;(a&#92;times b&#92;)&lt;/span&gt; 矩阵, &lt;span
class=&quot;math inline&quot;&gt;&#92;(a&#92;in[0,m]&#92;cap&#92;mathbb Z,b&#92;in[0,n]&#92;cap&#92;mathbb
Z&#92;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;定义用矩阵 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol B&#92;)&lt;/span&gt;
覆盖矩阵 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol A&#92;)&lt;/span&gt; 操作如下:
&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;boldsymbol B(b_{ij})&#92;sim &#92;boldsymbol A(a_{ij}) :&#92;Longrightarrow
&#92;boldsymbol A&#92;rightarrow (a_{ij}&#92;,&#92;mathrm{xor}&#92;,b_{ij})
&#92;]&lt;/span&gt; 你可以选择任意多个经过任意平移操作后的 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol A&#92;)&lt;/span&gt; 依次覆盖一个 &lt;span
class=&quot;math inline&quot;&gt;&#92;(&#92;boldsymbol{0}&#92;)&lt;/span&gt; 矩阵,
求最终可以得到多少种不同的矩阵.&lt;/p&gt;
&lt;h3 id=&quot;数据范围&quot;&gt;数据范围&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
1&#92;leq k&#92;leq5
&#92;]&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="XCPC题解" scheme="https://sheauhawjang.github.io/categories/XCPC%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="2020 CCPC WannaFly 冬令营" scheme="https://sheauhawjang.github.io/tags/2020-CCPC-WannaFly-%E5%86%AC%E4%BB%A4%E8%90%A5/"/>
    
    <category term="线性代数" scheme="https://sheauhawjang.github.io/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
</feed>
